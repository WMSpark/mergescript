/*
 * Railsbank customer API
 * Public API for Railsbank customers
 *
 * OpenAPI spec version: api
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.RBSwagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.transfer_funds.RBSwagger.model.V1customerbeneficiariesCompany1Directors;
import com.transfer_funds.RBSwagger.model.V1customerbeneficiariesCompany1UltimateBeneficialOwners;
import com.transfer_funds.RBSwagger.model.V1customerbeneficiariesCompanyRegulatoryLicenses;
import com.transfer_funds.RBSwagger.model.V1customerbeneficiariesCompanyStockExchanges;
import com.transfer_funds.RBSwagger.model.V1customerbeneficiariesPersonAddress;
import com.transfer_funds.RBSwagger.model.V1customerbeneficiariesPersonAddressHistory;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
/**
 * V1customerbeneficiariesCompany1
 */

public class V1customerbeneficiariesCompany1 {
  @JsonProperty("stock_exchanges")
  private List<V1customerbeneficiariesCompanyStockExchanges> stock_exchanges = null;

  @JsonProperty("registration_number")
  private String registration_number = null;

  @JsonProperty("directors")
  private List<V1customerbeneficiariesCompany1Directors> directors = null;

  @JsonProperty("industry")
  private String industry = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    NP_BRANCH("NP-Branch"),
    AR_SOCIEDAD_ANONIMA_SA("AR-Sociedad-Anonima-SA"),
    HU_EGYESULES("HU-egyesules"),
    IT_SOCIETA_IN_ACCOMANDITA_PER_AZIONI_SAPA("IT-Societa-in-accomandita-per-azioni-Sapa"),
    GR_ETERIA_PERIORISMENIS_EUTHINIS_EPE("GR-Eteria-Periorismenis-Euthinis-EPE"),
    LB_SOCIETE_A_RESPONSABILITE_LIMITEE_SARL("LB-Societe-a-responsabilite-limitee-SARL"),
    KZ_GOSUDARSTVENOE_PREDPRIYATIE_GP("KZ-Gosudarstvenoe-predpriyatie-GP"),
    BR_COOPERATIVA("BR-Cooperativa"),
    DE_OFFENE_HANDELSGESELLSCHAFT_OHG("DE-Offene-Handelsgesellschaft-OHG"),
    EG_SHARIKAT_TAWSSIYAH_BASSITA("EG-Sharikat-Tawssiyah-Bassita"),
    EC_EMPRESA_PUBLICA_EP("EC-Empresa-Publica-EP"),
    CO_SOCIEDAD_DE_RESPONSABILIDAD_LIMITADA_LTDA("CO-Sociedad-de-Responsabilidad-Limitada-Ltda"),
    IT_SOCIETA_SEMPLICE_SS("IT-Societa-semplice-Ss"),
    NO_INTERKOMMUNALT_SELSKAP_IKS("NO-Interkommunalt-selskap-IKS"),
    ID_YAYASAN("ID-Yayasan"),
    DE_GESELLSCHAFT_BURGERLICHEN_RECHTS_BGB_GESELLSCHAFT_GBR("DE-Gesellschaft-burgerlichen-Rechts-BGB-Gesellschaft-GbR"),
    BE_SOCIETE_EN_PARTICIPATION_SEP("BE-societe-en-participation-SEP"),
    NO_AKSJESELSKAP_AS("NO-Aksjeselskap-AS"),
    UZ_QOSHMA_KORXONA_QK("UZ-Qoshma-korxona-QK"),
    HU_KORLATOLT_FELELOSSEGU_TARSASAG_KFT("HU-korlatolt-felelossegu-tarsasag-kft"),
    BE_VENNOOTSCHAP_ONDER_FIRMA_VOF("BE-vennootschap-onder-firma-VOF"),
    IT_SOCIETA_IN_ACCOMANDITA_SEMPLICE_SAS("IT-Societa-in-accomandita-semplice-Sas"),
    AT_EINGETRAGENES_EINZELUNTERNEHMEN_EU("AT-eingetragenes-Einzelunternehmen-eU"),
    CH_SOCIETA_SEMPLICE("CH-societa-semplice"),
    FI_SAANNOSTELY_YHTEISO("FI-saannostely-yhteiso"),
    ME_DIO_STRANOG_DRUSTVA("ME-Dio-stranog-drustva"),
    BE_VERENIGING_ZONDER_WINSTOOGMERK_VZW("BE-vereniging-zonder-winstoogmerk-VZW"),
    BN_SOLE_PROPRIETORSHIP("BN-sole-proprietorship"),
    HR_JEDNOSTAVNO_DRUSTVO_S_OGRANICENOM_ODGOVORNOSCU_JDOO("HR-jednostavno-drustvo-s-ogranicenom-odgovornoscu-jdoo"),
    CH_FONDAZIONE("CH-fondazione"),
    NL_BEPERKTE_AANSPRAKELIJKHEID_BA("NL-Beperkte-Aansprakelijkheid-BA"),
    CH_SOCIETE_EN_COMMANDITE_PAR_ACTIONS_SCA("CH-societe-en-commandite-par-actions-SCA"),
    CH_SOCIETA_ANONIMA_SA("CH-Societa-anonima-SA"),
    MY_PLT_PLT("MY-PLT-PLT"),
    JP_TOKUMEI_KUMIAI_TK("JP-tokumei-kumiai-TK"),
    KZ_AKTSIONERNOE_OBSCHESTVO_AO("KZ-Aktsionernoe-obschestvo-AO"),
    ET_PUBLIC_ENTERPRISES_OR_PUBLIC_CORPORATIONS_AMHARIC_PE_OR_PC("ET-public-enterprises-or-public-corporations-Amharic-PE-or-PC"),
    FI_OSUUSKUNTA_OSK("FI-osuuskunta-osk"),
    IR_SHERKAT_BA_MASOULIYAT_MAHDOUD("IR-Sherkat-ba-Masouliyat-Mahdoud"),
    PL_SPOLKA_AKCYJNA_SA("PL-spolka-akcyjna-SA"),
    PK_COMPANY("PK-Company"),
    UA_AKTSIONERNE_TOVARYSTVO_AT_AT("UA-Aktsionerne-Tovarystvo-AT-AT"),
    BR_FUNDACAO_PUBLICA("BR-Fundacao-publica"),
    US_PROFESSIONAL_CORPORATION_PC("US-Professional-corporation-PC"),
    CH_GESELLSCHAFT_MIT_BESCHRANKTER_HAFTUNG_GMBH("CH-Gesellschaft-mit-beschrankter-Haftung-GmbH"),
    IE_PRIVATE_COMPANY_LIMITED_BY_SHARES("IE-Private-company-limited-by-shares"),
    CH_SOCIETE_A_RESPONSABILITE_LIMITEE_SARL("CH-societe-a-responsabilite-limitee-Sarl"),
    CA_SOLE_PROPRIETORSHIP_SP("CA-Sole-Proprietorship-SP"),
    PE_SOCIEDAD_ANONIMA_ABIERTA_SAA("PE-Sociedad-Anonima-Abierta-SAA"),
    RU_HOZYAYSTVENNOE_PARTNERSTVO("RU-Hozyaystvennoe-Partnerstvo"),
    BA_KOMANDITNO_DRUSTVO_KD("BA-komanditno-drustvo-kd"),
    DK_AKTIESELSKAB_A_S("DK-Aktieselskab-A-S"),
    SE_STIFTELSE("SE-Stiftelse"),
    BN_PARTNERSHIP("BN-partnership"),
    CL_EMPRESA_INDIVIDUAL_DE_RESPONSABILIDAD_LIMITADA_EIRL("CL-Empresa-Individual-de-Responsabilidad-Limitada-EIRL"),
    KZ_UCHREZHDENIE_UCHR("KZ-Uchrezhdenie-Uchr"),
    NI_SOCIEDAD_EN_NOMBRE_COLECTIVO_DE_RESPONSABILIDAD_LIMITADA_CIA_LTDA("NI-Sociedad-en-Nombre-Colectivo-de-Responsabilidad-Limitada-Cia-Ltda"),
    BG_EDNOLICHEN_TURGOVETZ_ET("BG-ednolichen-turgovetz-ET"),
    FI_KOMMANDIITTIYHTIO_KY("FI-kommandiittiyhtio-Ky"),
    DE_AKTIENGESELLSCHAFT_AG("DE-Aktiengesellschaft-AG"),
    SI_DRUZBA_Z_NEOMEJENO_ODGOVORNOSTJO_DNO("SI-Druzba-z-neomejeno-odgovornostjo-dno"),
    BE_COOPERATIEVE_VENNOOTSCHAP_MET_ONBEPERKTE_AANSPRAKELIJKHEID_CVOA("BE-cooperatieve-vennootschap-met-onbeperkte-aansprakelijkheid-CVOA"),
    ZA_PRIVATE_COMPANY("ZA-Private-company"),
    IN_ONE_PERSON_COMPANY("IN-One-person-company"),
    PL_PRZEDSIEBIORSTWO_PANSTWOWE("PL-Przedsiebiorstwo-Panstwowe"),
    ME_DRUSTVO_SA_OGRANICENOM_ODGOVORNOSCU_DOO("ME-Drustvo-sa-Ogranicenom-Odgovornoscu-DOO"),
    MX_SOCIEDAD_EN_COMANDITA_POR_ACCIONES_S_EN_C_POR_A("MX-Sociedad-en-Comandita-por-Acciones-S-en-C-por-A"),
    IN_PRIVATE_LIMITED_COMPANY_PVT_LTD("IN-Private-Limited-Company-Pvt-Ltd"),
    HR_OBRT("HR-obrt"),
    TN_SOCIETE_UNIPERSONNELLE_A_RESPONSABILITE_LIMITEE_SUARL("TN-Societe-unipersonnelle-a-responsabilite-limitee-SUARL"),
    KH_IMPORT_EXPORT_CO_LTD("KH-Import-Export-Co-Ltd"),
    FR_ENTREPRISE_UNIPERSONNELLE_A_RESPONSABILITE_LIMITEE_EURL("FR-Entreprise-unipersonnelle-a-responsabilite-limitee-EURL"),
    GB_PRIVATE_COMPANY_LIMITED_BY_GUARANTEE_LTD("GB-Private-company-limited-by-guarantee-Ltd"),
    EEA_SOCIETAS_EUROPAEA_SE("EEA-Societas-Europaea-SE"),
    SK_ZIVNOST("SK-zivnost"),
    GB_PUBLIC_LIMITED_COMPANY_PLC("GB-Public-Limited-Company-PLC"),
    NO_SPAREBANK_SAVINGS_BANK("NO-Sparebank-savings-bank"),
    AR_SOCIEDAD_EN_COMANDITA_POR_ACCIONES_SCPA("AR-Sociedad-en-Comandita-por-Acciones-SCpA"),
    DK_KOMMANDITSELSKAB_K_S("DK-Kommanditselskab-K-S"),
    MA_SOCIETE_EN_COMMANDITE_PAR_ACTIONS_SCA("MA-Societe-en-Commandite-par-Actions-SCA"),
    ID_KOPERASI("ID-Koperasi"),
    ZA_BUSINESS_TRUST("ZA-Business-trust"),
    LV_KOMANDITSABIEDRIBA_KS("LV-Komanditsabiedriba-KS"),
    FI_OJITUSYHTEISO("FI-ojitusyhteiso"),
    FI_YHTEISMETSA("FI-yhteismetsa"),
    RU_OBSHCHESTVO_S_OGRANICHENNOY_OTVETSTVENNOSTYU_OOO("RU-Obshchestvo-s-ogranichennoy-otvetstvennostyu-OOO"),
    PK_SOLE_PROPRIETORSHIP("PK-Sole-Proprietorship"),
    GR_OMORITHMI_VIOMIHANIKI_EMBORIKI_ETERIA_OVEE("GR-Omorithmi-Viomihaniki-Emboriki-Eteria-OVEE"),
    RO_SOCIETATE_IN_COMANDITA_SIMPLA_SCS("RO-societate-in-comandita-simpla-SCS"),
    FR_SOCIETE_EN_COMMANDITE_SIMPLE_SCS("FR-Societe-en-commandite-simple-SCS"),
    RS_KOMANDITNO_DRUSTVO_KD("RS-komanditno-drustvo-kd"),
    TR_ADI_SIRKET("TR-Adi-Sirket"),
    AU_INCORPORATED_INC("AU-Incorporated-Inc"),
    SA_JOINT_STOCK_COMPANY("SA-Joint-Stock-company"),
    FI_VOLUNTARY_ASSOCIATIONS_CHARTERED_BY_STATUTE_LAW("FI-voluntary-associations-chartered-by-statute-law"),
    NO_ANSVARLIG_SELSKAP_ANS("NO-Ansvarlig-selskap-ANS"),
    MK_DRUSTVO_SO_OGRANICENA_ODGOVORNOST_OD_EDNO_LICE_DOOEL("MK-Drustvo-so-Ogranicena-Odgovornost-od-Edno-Lice-DOOEL"),
    CH_GENOSSENSCHAFT("CH-Genossenschaft"),
    NO_SELSKAP_MED_DELT_ANSVAR_DA("NO-Selskap-med-delt-ansvar-DA"),
    TR_LIMITED_SIRKET_LTD_STI("TR-Limited-sirket-Ltd-Sti"),
    UZ_AKSIYADORLIK_JAMIYATI_AJ("UZ-Aksiyadorlik-jamiyati-AJ"),
    SG_PRIVATE_LIMITED_COMPANY_SENDIRIAN_BERHAD_PTE_LTD_SDN_BHD("SG-private-limited-company-Sendirian-Berhad-Pte-Ltd-Sdn-Bhd"),
    AT_VEREIN("AT-Verein"),
    DO_SOCIEDAD_ANONIMA_SIMPLIFICADA_SAS("DO-Sociedad-Anonima-Simplificada-SAS"),
    SK_SPOLOCNOST_S_RUCENIM_OBMEDZENYM_SRO("SK-Spolocnost-s-rucenim-obmedzenym-sro"),
    IE_UNLIMITED_COMPANY("IE-Unlimited-Company"),
    FR_SOCIETES_DEXERCICE_LIBERAL("FR-Societes-dexercice-liberal"),
    IL_SELF_EMPLOYED("IL-Self-employed"),
    LB_OFFSHORE_COMPANY("LB-Offshore-company"),
    CH_EINZELUNTERNEHMEN("CH-Einzelunternehmen"),
    IT_SOCIETA_IN_NOME_COLLETTIVO_SNC("IT-Societa-in-nome-collettivo-Snc"),
    TR_LIMITED_ORTAKLIK_LO("TR-Limited-Ortaklik-LO"),
    CH_SOCIETE_DINVESTISSEMENT_A_CAPITAL_VARIABLE_SICAV("CH-societe-dinvestissement-a-capital-variable-SICAV"),
    LT_MAZOJI_BENDRIJA_MB("LT-Mazoji-bendrija-MB"),
    GR_IDIOTIKI_KEFALEOUHIKI_ETERIA_IKE("GR-Idiotiki-kefaleouhiki-Eteria-IKE"),
    VN_CONG_TY_NHOM_CTY("VN-Cong-Ty-Nhom-Cty"),
    GB_LIMITED_PARTNERSHIP_LP("GB-Limited-partnership-LP"),
    NA_PARTNERSHIP("NA-Partnership"),
    BG_DRUJESTVO_S_OGRANICHENA_OTGOVORNOST_OOD("BG-drujestvo-s-ogranichena-otgovornost-OOD"),
    DE_PARTENREEDEREI("DE-Partenreederei"),
    FI_KESKIVEDENKORKEUDEN_MUUTTAMISTA_VARTEN_PERUSTETTU_YHTEISO("FI-keskivedenkorkeuden-muuttamista-varten-perustettu-yhteiso"),
    IS_SAMEIGNARFELAG_SF("IS-sameignarfelag-sf"),
    RU_AKTSIONERNOYE_OBSHCHESTVO_AO("RU-Aktsionernoye-obshchestvo-AO"),
    CO_SOCIEDAD_COLECTIVA_SC("CO-Sociedad-Colectiva-SC"),
    ME_PREDUZETNIK("ME-Preduzetnik"),
    AT_OFFENE_ERWERBSGESELLSCHAFT_OEG("AT-Offene-Erwerbsgesellschaft-OEG"),
    IN_FAMILY_OWNED_BUSINESS("IN-Family-Owned-Business"),
    OM_SOCIETE_ANONYME_OMANAISE_GENERALE_SAOG("OM-Societe-Anonyme-Omanaise-Generale-SAOG"),
    DK_PARTSREDERI("DK-Partsrederi"),
    AU_UNLIMITED_PROPRIETARY_PTY("AU-Unlimited-Proprietary-Pty"),
    FR_SOCIETE_PAR_ACTIONS_SIMPLIFIEE_SAS("FR-Societe-par-actions-simplifiee-SAS"),
    DK_ANDELSSELSKAB_MED_BEGRAENSET_ANSVAR_AMBA("DK-Andelsselskab-med-begraenset-ansvar-AMBA"),
    NP_PRIVATE_LIMITED_COMPANY("NP-Private-Limited-Company"),
    PT_COOPERATIVA_DE_RESPONSABILIDADE_LIMITADA_CRL("PT-Cooperativa-de-Responsabilidade-Limitada-CRL"),
    IT_SOCIETA_A_RESPONSABILITA_LIMITATA_SRL("IT-Societa-a-responsabilita-limitata-Srl"),
    CH_KOMMANDITAKTIENGESELLSCHAFT_KOMAG("CH-Kommanditaktiengesellschaft-KomAG"),
    UZ_QOSHIMCHA_MASULIYATLI_JAMIYAT_QMJ("UZ-Qoshimcha-masuliyatli-jamiyat-QMJ"),
    AR_SOCIEDAD_DEL_ESTADO_SE("AR-Sociedad-del-Estado-SE"),
    HU_NYILVANOSAN_MUKODO_RESZVENYTARSASAG_NYRT("HU-nyilvanosan-mukodo-reszvenytarsasag-Nyrt"),
    BN_COMPANY("BN-company"),
    KH_GENERAL_PARTNERSHIP_GP("KH-General-Partnership-GP"),
    FI_USKONNOLLINEN_YHDYSKUNTA("FI-uskonnollinen-yhdyskunta"),
    IT_SOCIETA_PER_AZIONI_SPA("IT-Societa-per-azioni-Spa"),
    MA_SOCIETE_A_RESPONSABILITE_LIMITEE_SARL("MA-Societe-a-Responsabilite-Limitee-SARL"),
    FI_YHTEISALUE("FI-yhteisalue"),
    ES_SOCIEDAD_CIVIL_PRIVADA_SCP("ES-Sociedad-Civil-Privada-SCP"),
    CH_SOCIETE_EN_COMMANDITE_SC("CH-societe-en-commandite-SC"),
    UZ_OCHIQ_AKSIYADORLIK_JAMIYATI_OAJ("UZ-Ochiq-aksiyadorlik-jamiyati-OAJ"),
    CZ_PRISPEVKOVA_ORGANIZACE("CZ-prispevkova-organizace"),
    MK_KOMANDITNO_DRUSTVOO_KD("MK-Komanditno-Drustvoo-KD"),
    RO_ORGANIZATIE_NON_GUVERNAMENTALA_ONG("RO-Organizatie-Non-Guvernamentala-ONG"),
    VN_DOANH_NGHIEP_HOP_DANH("VN-Doanh-nghiep-hop-danh"),
    KH_SOLE_PROPRIETORSHIP_SP("KH-Sole-Proprietorship-SP"),
    UA_F_O_P_FOP("UA-F-O-P-FOP"),
    HR_DIONICKO_DRUSTVO_DD("HR-dionicko-drustvo-dd"),
    BG_KOMANDITNO_DRUZHESTVO_S_AKTZII_KDA("BG-komanditno-druzhestvo-s-aktzii-KDA"),
    DO_COMPANIA_POR_ACCIONES_C_POR_A("DO-Compania-por-Acciones-C-por-A"),
    BR_SOCIEDADE_EM_COMANDITA_SIMPLES("BR-Sociedade-em-comandita-simples"),
    US_DOING_BUSINESS_AS("US-Doing-Business-As"),
    CH_INVESTMENTGESELLSCHAFT_MIT_VARIABLEM_KAPITALS("CH-Investmentgesellschaft-mit-variablem-KapitalS"),
    EG_SHARIKAT_AL_MOSSAHAMAH_SAE("EG-Sharikat-al-Mossahamah-SAE"),
    CA_LIMITED_PARTNERSHIP_LP("CA-Limited-Partnership-LP"),
    DE_PARTNERSCHAFTSGESELLSCHAFT_MIT_BESCHRANKTER_BERUFSHAFTUNG_PARTGMBBH("DE-Partnerschaftsgesellschaft-mit-beschrankter-Berufshaftung-PartGmbBH"),
    BE_SOCIETE_PRIVEE_A_RESPONSABILITE_LIMITEE_UNIPERSONNELLE_SPRLU("BE-societe-privee-a-responsabilite-limitee-unipersonnelle-SPRLU"),
    DK_ANPARTSSELSKAB_APS("DK-Anpartsselskab-ApS"),
    CH_SOCIETE_COOPERATIVE_SCOOP("CH-societe-cooperative-Scoop"),
    CZ_STATNI_PODNIK_SP("CZ-statni-podnik-sp"),
    RO_SOCIETATEA_IN_NUME_COLECTIV_SNC("RO-Societatea-in-nume-colectiv-SNC"),
    MN_TERIIN_VUS_VAIGRUULLAGA_TBB("MN-Teriin-vus-Vaigruullaga-Tbb"),
    DE_EINGETRAGENER_KAUFMANN_EINGETRAGENE_KAUFFRAU_EK_EKFM_EKFR("DE-Eingetragener-Kaufmann-eingetragene-Kauffrau-eK-eKfm-eKfr"),
    FI_JULKINEN_KESKINAINEN_VAKUUTUSYHTIO_JY("FI-julkinen-keskinainen-vakuutusyhtio-jy"),
    ID_PERJAN_PERUSAHAAN_JAWATAN("ID-Perjan-Perusahaan-Jawatan"),
    CA_CORPORATION("CA-Corporation"),
    IN_LIMITED_LIABILITY_PARTNERSHIP("IN-Limited-Liability-Partnership"),
    HU_SZOVETKEZET_SZOV("HU-szovetkezet-szov"),
    CH_VEREIN("CH-Verein"),
    PL_SPOLKA_KOMANDYTOWO_AKCYJNA_SKA("PL-spolka-komandytowo-akcyjna-SKA"),
    LV_SABIEDRIBA_AR_IEROBEZOTU_ATBILDIBU_SIA("LV-Sabiedriba-ar-ierobezotu-atbildibu-SIA"),
    EE_OSAUHING_OU("EE-Osauhing-OU"),
    LB_HOLDING_COMPANY("LB-Holding-Company"),
    BE_FONDATION_DUTILITE_PUBLIQUE("BE-fondation-dutilite-publique"),
    FI_KUNNALLINEN_LIIKELAITOS("FI-kunnallinen-liikelaitos"),
    NL_MAATSCHAP_MTS("NL-Maatschap-Mts"),
    AT_AKTIENGESELLSCHAFT_AG("AT-Aktiengesellschaft-AG"),
    RO_SOCIETATE_IN_COMANDITA_PE_ACTIUNI_SCA("RO-societate-in-comandita-pe-actiuni-SCA"),
    TW_LIMITED_PARTNERSHIP("TW-Limited-Partnership"),
    TW_UNLIMITED_COMPANY("TW-Unlimited-Company"),
    EE_TULUNDUSUHISTU("EE-Tulundusuhistu"),
    VN_CONG_TY_CO_PHAN_CTY_CP("VN-Cong-ty-co-phan-Cty-CP"),
    KH_STATE_COMPANY("KH-State-Company"),
    FI_SAASTOPANKKI("FI-saastopankki"),
    DE_EINGETRAGENE_GENOSSENSCHAFT_EG("DE-eingetragene-Genossenschaft-eG"),
    GB_PRIVATE_COMPANY_LIMITED_BY_SHARES_LTD("GB-Private-company-limited-by-shares-Ltd"),
    UZ_XUSUSIY_KORXONA_XK("UZ-Xususiy-korxona-XK"),
    JP_YUGEN_SEKININ_JIGYO_KUMIAI("JP-yugen-sekinin-jigyo-kumiai"),
    DK_IVAERKSAETTERSELSKAB_IVS("DK-Ivaerksaetterselskab-IVS"),
    NL_EENMANSZAAK("NL-Eenmanszaak"),
    KZ_OBSHESTVENNOE_OBEDINENIE_OO("KZ-Obshestvennoe-Obedinenie-OO"),
    ZA_INCORPORATED_ASSOCIATION_NOT_FOR_GAIN("ZA-Incorporated-association-not-for-gain"),
    FR_SOCIETE_DINVESTISSEMENT_A_CAPITAL_VARIABLE_SICAV("FR-Societe-dinvestissement-a-capital-variable-SICAV"),
    KZ_RELITIOZNOE_OBEDINENIE_PO("KZ-Relitioznoe-Obedinenie-PO"),
    MX_SOCIEDAD_DE_RESPONSABILIDAD_LIMITADA_S_DE_RL("MX-Sociedad-de-Responsabilidad-Limitada-S-de-RL"),
    EG_SHARIKAT_TAWSSIYAH_BELASHOM("EG-Sharikat-Tawssiyah-Belashom"),
    CA_GENERAL_PARTNERSHIP_GP("CA-General-Partnership-GP"),
    GR_ANONIMI_ETERIA_AE("GR-Anonimi-Eteria-AE"),
    LT_TIKROJI_UKINE_BENDRIJA_TUB("LT-Tikroji-ukine-bendrija-TUB"),
    BG_KOMANDITNO_DRUZHESTVO_KD("BG-komanditno-druzhestvo-KD"),
    NL_NAAMLOZE_VENNOOTSCHAP_NV("NL-Naamloze-vennootschap-nv"),
    SE_HANDELSBOLAG_HB("SE-Handelsbolag-HB"),
    VN_CONG_TY_TRACH_NHIEM_HUU_HAN_MOT_THANH_VIEN_CTY_TNHH_MTV("VN-Cong-ty-trach-nhiem-huu-han-mot-thanh-vien-Cty-TNHH-MTV"),
    BE_VEREINIGUNG_OHNE_GEWINNERZIELUNGSABSICHT_VOG("BE-Vereinigung-ohne-Gewinnerzielungsabsicht-VoG"),
    CL_SOCIEDAD_DE_GARANTIA_RECIPROCA_SGR("CL-Sociedad-de-Garantia-Reciproca-SGR"),
    CL_SOCIEDAD_POR_ACCIONES_SPA("CL-Sociedad-por-acciones-SpA"),
    ID_PERSEROAN_TERBATAS_TERBUKA_OR_PERSEROAN_TERBUKA_PT_TBK("ID-Perseroan-Terbatas-Terbuka-or-Perseroan-Terbuka-PT-Tbk"),
    BR_SOCIEDADE_EM_NOME_COLETIVO("BR-Sociedade-em-nome-coletivo"),
    MA_SOCIETE_ANONYME_SIMPLIFIEE_SAS("MA-Societe-Anonyme-Simplifiee-SAS"),
    FR_U_UNIPERSONNELLE_SAS_SASU("FR-U-unipersonnelle-SAS-SASU"),
    CH_SOCIETA_IN_ACCOMANDITA_PER_AZIONI("CH-societa-in-accomandita-per-azioni"),
    BG_SUBIRATELNO_DRUZHESTVO_SD("BG-subiratelno-druzhestvo-SD"),
    TR_KOMANDIT_SIRKET_KOM_STI("TR-Komandit-sirket-Kom-Sti"),
    PH_SOCIEDAD_ANONIMA_SA("PH-Sociedad-Anonima-SA"),
    LT_UZDAROJI_AKCINE_BENDROVE_UAB("LT-Uzdaroji-akcine-bendrove-UAB"),
    US_GENERAL_PARTNERSHIP("US-General-Partnership"),
    US_SOLE_PROPRIETORSHIP("US-Sole-proprietorship"),
    PH_LIMITED_LIABILITY_COMPANY_LLC("PH-Limited-Liability-Company-LLC"),
    LV_BEZPELNAS_ORGANIZACIJA_BO("LV-Bezpelnas-organizacija-BO"),
    DO_SOCIEDAD_EN_COMANDITA_SIMPLE("DO-Sociedad-En-Comandita-Simple"),
    FI_PALISKUNTA("FI-paliskunta"),
    NG_LIMITED_LIABILITY_PARTNERSHIP_LLP("NG-Limited-Liability-Partnership-LLP"),
    TN_SOCIETE_A_RESPONSABILITE_LIMITEE_SARL("TN-Societe-a-responsabilite-limitee-SARL"),
    NO_REGIONALT_HELSEFORETAK_RHF("NO-regionalt-helseforetak-RHF"),
    CH_SOCIETA_COOPERATIVA("CH-societa-cooperativa"),
    SA_LIMITED_PARTNERSHIP("SA-Limited-Partnership"),
    IN_REGISTRATION_NOT_REQUIRED("IN-Registration-not-required"),
    MX_PERSONA_FISICA("MX-Persona-Fisica"),
    DO_SOCIEDAD_DE_RESPOSABILIDAD_LIMITADA_SRL("DO-Sociedad-de-Resposabilidad-Limitada-SRL"),
    FR_PROFESSION_LIBERAL("FR-Profession-liberal"),
    SI_SAMOSTOJNI_PODJETNIK_SP("SI-Samostojni-podjetnik-sp"),
    NZ_LIMITED_LTD("NZ-Limited-Ltd"),
    NG_LIMITED_BY_GUARANTEE_LTD_GTE("NG-Limited-by-Guarantee-Ltd-Gte"),
    FR_SOCIETE_EN_NOM_COLLECTIF_SNC("FR-Societe-en-nom-collectif-SNC"),
    PH_CORPORATION_CORP("PH-Corporation-Corp"),
    UA_DERZHAVNE_AKTSIONERNE_TOVARYSTVO_DAT("UA-Derzhavne-Aktsionerne-Tovarystvo-DAT"),
    FR_SOCIETE_DECONOMIE_MIXTE_SEM("FR-Societe-deconomie-mixte-SEM"),
    BR_ORGANIZACAO_NAO_GOVERNAMENTAL("BR-Organizacao-nao-governamental"),
    ES_SOCIEDAD_LIMITADA_NUEVA_EMPRESA_SLNE("ES-Sociedad-Limitada-Nueva-Empresa-SLNE"),
    US_NATIONAL_ASSOCIATION_NA("US-National-Association-NA"),
    BE_FEITELIJKE_VERENIGING("BE-feitelijke-vereniging"),
    HR_DRUSTVO_S_OGRANICENOM_ODGOVORNOSCU_DOO("HR-drustvo-s-ogranicenom-odgovornoscu-doo"),
    LB_REPRESENTATIVE_OFFICE("LB-Representative-Office"),
    AR_SOCIEDAD_DE_RESPONSABILIDAD_LIMITADA_SRL("AR-Sociedad-de-Responsabilidad-Limitada-SRL"),
    IS_SJALFSEIGNARSTOFNUN("IS-sjalfseignarstofnun"),
    EEA_SOCIETAS_PRIVATA_EUROPAEA_SPE("EEA-Societas-Privata-Europaea-SPE"),
    CL_SOCIEDAD_ANONIMA_SA("CL-Sociedad-Anonima-SA"),
    GT_SOCIEDAD_EN_COMANDITA_SIMPLE_Y_CIA_S_EN_C("GT-Sociedad-en-Comandita-Simple-y-Cia-S-en-C"),
    CH_SOCIETE_EN_NOM_COLLECTIF_SNC("CH-societe-en-nom-collectif-SNC"),
    LI_TREUHANDSC_TREUUNTERNEHMEN_HAFT("LI-Treuhandsc-Treuunternehmen-haft"),
    IN_COOPERATIVE("IN-Cooperative"),
    PH_COMPANIA_CIA("PH-Compania-Cia"),
    IN_PUBLIC_SECTOR_UNDERTAKING_PSU("IN-Public-Sector-Undertaking-PSU"),
    US_LIMITED_LIABILITY_PARTNERSHIP_LLP("US-Limited-Liability-Partnership-LLP"),
    KR_YUHAN_HOESA("KR-yuhan-hoesa"),
    FR_SOCIETE_EN_COMMANDITE_PAR_ACTIONS_SCA("FR-Societe-en-commandite-par-actions-SCA"),
    NO_ENKELTPERSONFORETAK("NO-Enkeltpersonforetak"),
    VN_DOANH_NGHIEP_TU_NHAN_DNTN("VN-Doanh-nghiep-tu-nhan-DNTN"),
    ME_ORTACKO_DRUSTVO_OD("ME-Ortacko-Drustvo-OD"),
    DK_ENKELTMANDSVIRKSOMHED("DK-Enkeltmandsvirksomhed"),
    IS_OPINBERT_HLUTAFELAG_OHF("IS-opinbert-hlutafelag-ohf"),
    PH_ENTERPRISE_ENT("PH-Enterprise-Ent"),
    IS_HLUTAFELAG_HF("IS-hlutafelag-hf"),
    HR_JAVNO_TRGOVACKO_DRUSTVO_JTD("HR-javno-trgovacko-drustvo-jtd"),
    CO_SOCIEDADES_POR_ACCIONES_SIMPLIFICAD_SAS("CO-Sociedades-por-Acciones-Simplificad-SAS"),
    MA_SOCIETE_ANONYME_SA("MA-Societe-Anonyme-SA"),
    IL_PRIVATE_COMPANY("IL-Private-Company"),
    RU_PROSTOYE_TOVARISHESTVO("RU-Prostoye-Tovarishestvo"),
    KZ_POLNOE_TOVARISHCHESTVO_PT("KZ-Polnoe-Tovarishchestvo-PT"),
    VN_DOANH_NGHIEP_CO_VON_DAU_TU_NUOC_NGOAI_DTNN("VN-Doanh-nghiep-co-von-dau-tu-nuoc-ngoai-DTNN"),
    DO_SOCIEDAD_ANONIMA_SA("DO-Sociedad-Anonima-SA"),
    LT_VIESOJI_ISTAIGA_VSI("LT-Viesoji-istaiga-VsI"),
    NL_VENNOOTSCHAP_ONDER_FIRMA_VOF("NL-Vennootschap-onder-firma-vof"),
    AT_PRIVATSTIFTUNG("AT-Privatstiftung"),
    IS_EINKAHLUTAFELAG_EHF("IS-einkahlutafelag-ehf"),
    BR_MICRO_EMPREENDEDOR_INDIVIDUAL("BR-Micro-empreendedor-individual"),
    NO_HELSEFORETAK_HF("NO-helseforetak-HF"),
    BR_SOCIEDADE_ANONIMA_SA("BR-Sociedade-anonima-SA"),
    GR_MONOPROSOPI_ETERIA_PERIORISMENIS_EUTHINIS_MEPE("GR-Monoprosopi-Eteria-Periorismenis-Euthinis-MEPE"),
    KR_HAPJA_HOESA("KR-hapja-hoesa"),
    FI_OSAKASKUNTA("FI-osakaskunta"),
    LT_KOMANDITINE_UKINE_BENDRIJA_KUB("LT-Komanditine-ukine-bendrija-KUB"),
    TR_ANONIM_SIRKET_AS("TR-Anonim-Sirket-AS"),
    FI_JULKINEN_OSAKEYHTIO_OYJ("FI-julkinen-osakeyhtio-Oyj"),
    US_PROFESSIONAL_LIMITED_LIABILITY_COMPANY_PLLC("US-Professional-Limited-Liability-Company-PLLC"),
    BE_SOCIETE_MOMENTANEE("BE-societe-momentanee"),
    LV_ARZEMJU_KOMERSANTA_FILIALE_AKF("LV-Arzemju-komersanta-filiale-AKF"),
    SI_DRUZBA_Z_OMEJENO_ODGOVORNOSTJO_DOO("SI-Druzba-z-omejeno-odgovornostjo-doo"),
    IE_COMPANY_LIMITED_BY_GUARANTEE_HAVING_A_SHARE_CAPITAL("IE-Company-limited-by-guarantee-having-a-share-capital"),
    IT_SOCIETA_COOPERATIVA_A_RESPONSABILITA_LIMITATA_SCRL("IT-Societa-cooperativa-a-responsabilita-limitata-Scrl"),
    CH_SOCIETE_ANONYME_SA("CH-Societe-anonyme-SA"),
    UZ_YOPIQ_AKSIYADORLIK_JAMIYATI_YOAJ("UZ-Yopiq-aksiyadorlik-jamiyati-YoAJ"),
    CH_SOCIETA_A_GARANZIA_LIMITATA_SAGL("CH-societa-a-garanzia-limitata-Sagl"),
    MK_JAVNO_TRGOVSKO_DRUSTVO_JTD("MK-Javno-Trgovsko-Drustvo-JTD"),
    HU_ZARTKOZUEN_MUKODO_RESZVENYTARSASAG_ZRT("HU-zartkozuen-mukodo-reszvenytarsasag-Zrt"),
    NL_BESLOTEN_VENNOOTSCHAP_BV("NL-Besloten-vennootschap-bv"),
    GT_SOCIEDAD_COLECTIVA_Y_CIA_S_C("GT-Sociedad-Colectiva-y-Cia-S-C"),
    ID_FIRMA_FA("ID-Firma-Fa"),
    RS_AKCIONARSKO_DRUSTVO_AD("RS-akcionarsko-drustvo-ad"),
    KR_JUSIK_HOESA("KR-jusik-hoesa"),
    BR_EMPRESA_INDIVIDUAL_FIRMA_INDIVIDUAL("BR-Empresa-individual-firma-individual"),
    JP_KABUSHIKI_KAISHA_KK("JP-kabushiki-kaisha-KK"),
    ID_MAATSCHAP_PERSEKUTUAN_PERDATA("ID-Maatschap-Persekutuan-Perdata"),
    SK_KOMANDITNA_SPOLOCNOST_KS("SK-Komanditna-spolocnost-ks"),
    HR_ORTAKLUK("HR-ortakluk"),
    DE_WIRTSCHAFTLICHER_VEREIN("DE-wirtschaftlicher-Verein"),
    EC_COMPANIA_LIMITADA_CIA_LTDA("EC-Compania-Limitada-Cia-Ltda"),
    DE_PARTNERSCHAFTSGESELLSCHAFT_PARTG("DE-Partnerschaftsgesellschaft-PartG"),
    NO_ALLMENNAKSJESELSKAP_ASA("NO-Allmennaksjeselskap-ASA"),
    HU_BETETI_TARSASAG_BT("HU-beteti-tarsasag-bt"),
    JP_TOSHI_JIGYO_YUGEN_SEKININ_KUMIAI("JP-toshi-jigyo-yugen-sekinin-kumiai"),
    NG_PUBLIC_LIMITED_COMPANY_PLC("NG-Public-Limited-Company-PLC"),
    NI_SOCIEDAD_ANONIMA_SA("NI-Sociedad-Anonima-SA"),
    RS_PREDUZETNIK("RS-preduzetnik"),
    JO_PARTNERSHIP("JO-Partnership"),
    AR_SOCIEDAD_DE_CAPITAL_E_INDUSTRIA_SCEI("AR-Sociedad-de-Capital-e-Industria-SCeI"),
    SE_AKTIEBOLAG_AB("SE-Aktiebolag-AB"),
    SA_INDIVIDUAL_ESTABLISHMENT("SA-Individual-Establishment"),
    NO_STIFTELSE("NO-Stiftelse"),
    JP_GODO_KAISHA_GK("JP-godo-kaisha-GK"),
    IL_PUBLIC_COMPANY("IL-Public-Company"),
    EC_SOCIEDAD_ANONIMA_SA("EC-Sociedad-Anonima-SA"),
    BE_SOCIETE_COOPERATIVE_A_RESPONSABILITE_LIMITEE_SCRL("BE-societe-cooperative-a-responsabilite-limitee-SCRL"),
    DE_ANSTALT_DES_OFFENTLICHEN_RECHTS("DE-Anstalt-des-offentlichen-Rechts"),
    NL_ONDERLINGE_WAARBORGMAATSCHAPPIJ("NL-Onderlinge-waarborgmaatschappij"),
    BE_SOCIETE_ANONYME_SA("BE-societe-anonyme-SA"),
    MY_SENDIRIAN_BERHAD_SDN_BHD("MY-Sendirian-Berhad-Sdn-Bhd"),
    FI_KESKINAINEN_VAKUUTUSYHTIO("FI-keskinainen-vakuutusyhtio"),
    ZA_PARTNERSHIP("ZA-Partnership"),
    BE_TIJDELIJKE_HANDELSVENNOOTSCHAP("BE-tijdelijke-handelsvennootschap"),
    BE_SOCIETE_DE_FAIT("BE-societe-de-fait"),
    DK_PARTNERSELSKAB_OR_KOMMANDITAKTIESELSKAB_P_S("DK-Partnerselskab-or-Kommanditaktieselskab-P-S"),
    HR_OBITELJSKO_POLJOPRIVREDNO_GOSPODARSTVO_OPG("HR-obiteljsko-poljoprivredno-gospodarstvo-OPG"),
    LU_SOCIETE_ANONYME_SA("LU-Societe-anonyme-SA"),
    BR_ORGANIZACAO_SOCIAL("BR-Organizacao-social"),
    NA_COMPANIES("NA-Companies"),
    BE_SOCIETE_PRIVEE_A_RESPONSABILITE_LIMITEE_SPRL("BE-societe-privee-a-responsabilite-limitee-SPRL"),
    NO_STATE_COUNTY_OR_MUNICIPAL_AGENCY_ETAT("NO-state-county-or-municipal-agency-Etat"),
    RU_KOOPERATIV("RU-kooperativ"),
    KZ_TOVARISHCHESTVO_S_OGRANICHENNOY_OTVETSTVENNOSTYU_TOO("KZ-Tovarishchestvo-s-ogranichennoy-otvetstvennostyu-TOO"),
    BR_SOCIEDADE_DE_ECONOMIA_MISTA("BR-Sociedade-de-economia-mista"),
    IR_SHERKAT_MOKHTALET_GHEYR_SAHAMI("IR-Sherkat-Mokhtalet-Gheyr-Sahami"),
    MK_AKCIONERSKO_DRUSTVO_AD("MK-Akcionersko-Drustvo-AD"),
    UA_TOVARYSTVO_Z_OBMEZHENOIU_VIDPOVIDALNISTIU_TOV("UA-Tovarystvo-z-Obmezhenoiu-Vidpovidalnistiu-TOV"),
    PT_LIMITADA_LDA("PT-Limitada-Lda"),
    EE_USALDUSUHING_UU("EE-Usaldusuhing-UU"),
    DE_EINGETRAGENER_VEREIN_EV("DE-eingetragener-Verein-eV"),
    ET_COOPERATIVE_SOCIETIES_AMHARIC_CS("ET-cooperative-societies-Amharic-CS"),
    AT_OFFENE_GESELLSCHAFT_OG("AT-offene-Gesellschaft-OG"),
    LI_AKTIENGESELLSCHAFT_AG("LI-Aktiengesellschaft-AG"),
    NL_COMMANDITAIRE_VENNOOTSCHAP_CV("NL-Commanditaire-vennootschap-cv"),
    IS_SAMVINNUFELAG("IS-samvinnufelag"),
    BE_ECONOMISCH_SAMENWERKINGSVERBAND_ESV("BE-economisch-samenwerkingsverband-ESV"),
    EEA_EUROPEAN_ECONOMIC_INTEREST_GROUPING_EEIG("EEA-European-Economic-Interest-Grouping-EEIG"),
    ES_SOCIEDAD_COMANDITARIA_SCRA("ES-Sociedad-Comanditaria-SCra"),
    RO_SOCIETATEA_CU_RASPUNDERE_LIMITATA_CU_PROPRIETAR_UNIC_SRL_CU_PROPRIETAR_UNIC("RO-Societatea-cu-raspundere-limitata-cu-proprietar-unic-SRL-cu-proprietar-unic"),
    LV_PILNSABIEDRIBA_PS("LV-Pilnsabiedriba-PS"),
    US_INC_CORPORATION_INCORPORATED_CORP("US-Inc-Corporation-Incorporated-Corp"),
    IR_SHERKAT_TAZAMONI("IR-Sherkat-Tazamoni"),
    RU_NEKOMMERCHESKAYA_ORGANIZATSIYA("RU-Nekommercheskaya-organizatsiya"),
    LI_ANSTALT("LI-Anstalt"),
    IN_DORMANT_COMPANY("IN-Dormant-company"),
    HT_SOCIEDAD_ANONIMA_SA("HT-Sociedad-Anonima-SA"),
    SE_HYRESRATTSFORENING("SE-Hyresrattsforening"),
    SA_FOREIGN_COMPANY("SA-Foreign-Company"),
    GB_INDUSTRIAL_AND_PROVIDENT_SOCIETY("GB-Industrial-and-provident-society"),
    AT_GESELLSCHAFT_DES_BURGERLICHEN_RECHTS_GESBR("AT-Gesellschaft-des-burgerlichen-Rechts-GesbR"),
    LB_SOCIETE_ANONYME_LIBANAISE_SAL("LB-Societe-Anonyme-Libanaise-sal"),
    GB_CHARITABLE_INCORPORATED_ORGANISATION_CIO("GB-Charitable-Incorporated-Organisation-CIO"),
    SA_PRIVATE_LIMITED_COMPANY("SA-Private-Limited-Company"),
    MA_GROUPEMENT_DINTERET_ECONOMIQUE_GIE("MA-Groupement-dInteret-Economique-GIE"),
    GT_SOCIEDAD_DE_RESPONSABILIDAD_LIMITADA_CIA_LTDA("GT-Sociedad-de-Responsabilidad-Limitada-Cia-Ltda"),
    AT_EUROPEAN_BUSINESS_ENTITIES("AT-European-business-entities"),
    CH_STIFTUNG("CH-Stiftung"),
    EE_FUUSILISEST_ISIKUST_ETTEVOTJA_FIE("EE-Fuusilisest-isikust-ettevotja-FIE"),
    BE_EENMANSZAAK("BE-eenmanszaak"),
    DE_UNTERNEHMERGESELLSCHAFT_UG("DE-Unternehmergesellschaft-UG"),
    UA_VIDKRYTE_AKTSIONERNE_TOVARYSTV_VAT("UA-Vidkryte-Aktsionerne-Tovarystv-VAT"),
    OM_SOCIETE_ANONYME_OMANAISE_CLOSE_SAOC("OM-Societe-Anonyme-Omanaise-Close-SAOC"),
    EE_MITTETULUNDUSUHING_MTU("EE-Mittetulundusuhing-MTU"),
    ZA_SOLE_PROPRIETORSHIP("ZA-Sole-proprietorship"),
    FR_GROUPEMENT_DINTERET_ECONOMIQUE_GIE("FR-Groupement-dinteret-economique-GIE"),
    FI_LAIVAISANNISTOYHTIO("FI-laivaisannistoyhtio"),
    BG_EDNOLICHNO_DRUZHESTVO_S_OGRANICHENA_OTGOVORNOST_EOOD("BG-ednolichno-druzhestvo-s-ogranichena-otgovornost-EOOD"),
    PL_SPOLDZIELNIA("PL-Spoldzielnia"),
    IE_UNDERTAKINGS_FOR_COLLECTIVE_INVESTMENT_IN_TRANSFERABLE_SECURITIES_UCITS("IE-Undertakings-for-Collective-Investment-in-Transferable-Securities-UCITS"),
    UZ_MASULIYATI_CHEKLANGAN_JAMIYAT_MCHJ("UZ-Masuliyati-Cheklangan-Jamiyat-MChJ"),
    UA_POVNE_TOVARYSTVO_PT("UA-Povne-Tovarystvo-PT"),
    AU_PROPRIETARY_LIMITED_COMPANY_PTYLTD("AU-Proprietary-Limited-Company-PtyLtd"),
    HU_KOZHASZNU_TARSASAG_KHT("HU-kozhasznu-tarsasag-kht"),
    IN_UNLIMITED_COMPANY("IN-Unlimited-Company"),
    CA_JOINT_VENTURE("CA-Joint-Venture"),
    UZ_UNITAR_KORXONA_UK("UZ-Unitar-korxona-UK"),
    PH_LIMITED_LTD("PH-Limited-Ltd"),
    NG_UNLIMITED_ULTD("NG-Unlimited-ULtd"),
    ID_PERSERO("ID-Persero"),
    NO_SELSKAP_MED_BEGRENSET_ANSVAR_BA("NO-Selskap-med-begrenset-ansvar-BA"),
    CH_RAISON_INDIVIDUELLE_RI("CH-raison-individuelle-RI"),
    LI_STIFTUNG("LI-Stiftung"),
    NL_STICHTING("NL-Stichting"),
    UA_TOVARYSTVO_Z_DODATKVOIU_VIDPOVIDALNISTIU_TDV("UA-Tovarystvo-z-Dodatkvoiu-Vidpovidalnistiu-TDV"),
    DE_EINZELUNTERNEHMEN("DE-Einzelunternehmen"),
    FI_AVOIN_YHTIO_AY("FI-avoin-yhtio-Ay"),
    BA_DRUSTVO_S_NEOGRANICENOM_SOLIDARNOM_ODGOVORNOSCU_DNO("BA-drustvo-s-neogranicenom-solidarnom-odgovornoscu-dno"),
    NL_UITSLUITING_VAN_AANSPRAKELIJKHEID_UA("NL-Uitsluiting-van-Aansprakelijkheid-UA"),
    JO_PRIVATE_SHAREHOLDING_COMPANIES("JO-Private-Shareholding-Companies"),
    CH_ASSOCIATION("CH-association"),
    IS_SAMLAGSFELAG("IS-samlagsfelag"),
    ES_SOCIEDAD_ANONIMA_DEPORTIVA_SAD("ES-Sociedad-Anonima-Deportiva-SAD"),
    JO_FOREIGN_COMPANY("JO-Foreign-Company"),
    AT_GESELLSCHAFT_MIT_BESCHRANKTER_HAFTUNG_GMBH("AT-Gesellschaft-mit-beschrankter-Haftung-GmbH"),
    HR_SLOBODNA_DJELATNOST("HR-slobodna-djelatnost"),
    JO_LIMITED_LIABILITY("JO-Limited-Liability"),
    LV_INDIVIDUALAIS_KOMERSANTS_IK("LV-Individualais-komersants-IK"),
    IR_SHERKAT_NESBI("IR-Sherkat-Nesbi"),
    AL_SHOQERI_KOLEKTIVE("AL-Shoqeri-kolektive"),
    BR_SOCIEDADE_EM_CONTA_DE_PARTICIPACAO("BR-Sociedade-em-conta-de-participacao"),
    RO_SOCIETATEA_IN_COMANDITA_PE_ACTIUNI_SCA("RO-Societatea-in-comandita-pe-actiuni-SCA"),
    MN_KHYAZGAARLAGDMAL_KHARIUTSLAGATAI_KOMPANI_XXK("MN-Khyazgaarlagdmal-Khariutslagatai-Kompani-XXK"),
    MX_SOCIEDAD_EN_NOMBRE_COLECTIVO("MX-Sociedad-en-Nombre-Colectivo"),
    JP_GOMEI_KAISHA_GMK("JP-gomei-kaisha-GMK"),
    NA_CO_OPERATIVES("NA-Co-operatives"),
    CZ_VEREJNA_OBCHODNI_SPOLECNOST_VOS("CZ-verejna-obchodni-spolecnost-vos"),
    NO_FYLKESKOMMUNALT_FORETAK_FKF("NO-Fylkeskommunalt-foretak-FKF"),
    RU_PUBLICHNOYE_AKTSIONERNOYE_OBSHCHESTVO_PAO("RU-Publichnoye-aktsionernoye-obshchestvo-PAO"),
    IL_NON_PROFIT_ORGANIZATION("IL-Non-profit-organization"),
    IL_BEERAVON_MUGBA_BM("IL-Beeravon-Mugba-BM"),
    TR_ANONIM_ORTAKLIK_AO("TR-Anonim-Ortaklik-AO"),
    CO_SOCIEDAD_ANONIMA_SA("CO-Sociedad-Anonima-SA"),
    OTHER("Other"),
    BE_COMMANDITAIRE_VENNOOTSCHAP_OP_AANDELEN_COMMVA("BE-commanditaire-vennootschap-op-aandelen-CommVA"),
    CZ_KOMANDITNI_SPOLECNOST_KS("CZ-komanditni-spolecnost-ks"),
    ZA_PUBLIC_COMPANY("ZA-Public-company"),
    UZ_XUSUSIY_TADBIRKORLIK_XT("UZ-Xususiy-tadbirkorlik-XT"),
    NA_SOLE_TRADER("NA-Sole-Trader"),
    CH_KOLLEKTIVGESELLSCHAFT_KOLG("CH-Kollektivgesellschaft-KolG"),
    BA_AKCIONARSKO_DRUSTVO_AD("BA-akcionarsko-drustvo-ad"),
    BR_EMPRESA_PUBLICA("BR-Empresa-publica"),
    ZA_COMPANY_LIMITED_BY_GUARANTEE("ZA-Company-limited-by-guarantee"),
    CH_INVESTMENTGESELLSCHAFT_MIT_FESTEM_KAPITAL("CH-Investmentgesellschaft-mit-festem-Kapital"),
    MA_SOCIETE_EN_COMMANDITE_SIMPLE_SCS("MA-Societe-en-Commandite-Simple-SCS"),
    KH_PRIVATE_LIMITED_COMPANY_PTE_LTD("KH-Private-Limited-Company-Pte-Ltd"),
    KZ_PROIZVODSTVENNI_KOOPERATIV_PRK("KZ-Proizvodstvenni-Kooperativ-PrK"),
    CH_KOMMANDITGESELLSCHAFT_KG("CH-Kommanditgesellschaft-KG"),
    DK_FORENING_MED_BEGRAENSET_ANSVAR_FMBA("DK-Forening-med-begraenset-ansvar-FMBA"),
    RU_GOSUDARSTVENNOYE_UNITARNOYE_PREDPRIYATIE_GP_GUP("RU-Gosudarstvennoye-unitarnoye-predpriyatie-GP-GUP"),
    IS_EINSTAKLINGSFYRIRTAEKI("IS-einstaklingsfyrirtaeki"),
    CZ_OBECNE_PROSPESNA_SPOLECNOST_OPS("CZ-obecne-prospesna-spolecnost-ops"),
    RO_PERSOANA_FIZICA_AUTORIZATA_PFA("RO-persoana-fizica-autorizata-PFA"),
    HU_KOZKERESETI_TARSASAG_KKT("HU-kozkereseti-tarsasag-kkt"),
    KH_PUBLIC_ESTABLISHMENT_WITH_ECONOMIC_CHARACTERISTICS_PEEC("KH-Public-Establishment-with-Economic-characteristics-PEEC"),
    DK_ERHVERVSDRIVENDE_FOND("DK-Erhvervsdrivende-fond"),
    SE_IDEELL_FORENING("SE-Ideell-forening"),
    SK_VEREJNA_OBCHODNA_SPOLOCNOST_VOS("SK-Verejna-obchodna-spolocnost-vos"),
    GT_SOCIEDAD_ANONIMA_S_A("GT-Sociedad-Anonima-S-A"),
    DE_ALTRECHTLICHER_VEREIN_RECHTSFAHIGER_VEREIN_RV("DE-altrechtlicher-Verein-rechtsfahiger-Verein-rV"),
    SE_ENKELT_BOLAG("SE-Enkelt-bolag"),
    UA_COMANDYTNE_TOVARYSTVO_KT("UA-Comandytne-Tovarystvo-KT"),
    KH_PUBLIC_LIMITED_COMPANY_PLC_LTD("KH-Public-Limited-Company-Plc-Ltd"),
    IL_PARTNERSHIP("IL-Partnership"),
    IR_SHERKAT_MOKHTALET_SAHAMI("IR-Sherkat-Mokhtalet-Sahami"),
    VN_DOANH_NGHIEP_NHA_NUOC_DNNN("VN-Doanh-nghiep-nha-nuoc-DNNN"),
    UZ_OILAVIY_KORXONA_OK("UZ-Oilaviy-korxona-OK"),
    DK_FORENING("DK-Forening"),
    ME_KOMANDITNO_DRUSTVO_KD("ME-Komanditno-Drustvo-KD"),
    NI_SOCIEDAD_EN_COMANDITA_SIMPLE_SCS("NI-Sociedad-en-Comandita-Simple-SCS"),
    BE_GROUPEMENT_DINTERET_ECONOMIQUE_GIE("BE-groupement-dinteret-economique-GIE"),
    BA_SAMOSTALNI_PREDUZETNIK_SP("BA-samostalni-preduzetnik-sp"),
    NI_SOCIEDAD_EN_COMANDITA_POR_ACCIONES_SCA("NI-Sociedad-en-Comandita-por-Acciones-SCA"),
    CH_SOCIETE_SIMPLE("CH-societe-simple"),
    PH_LIMITED_COMPANY_LTD_CO("PH-Limited-Company-Ltd-Co"),
    FI_TIEKUNTA("FI-tiekunta"),
    HR_KOMANDITNO_DRUSTVO_KD("HR-komanditno-drustvo-kd"),
    FR_SOCIETE_EN_PARTICIPATION_SEP("FR-Societe-en-participation-SEP"),
    CH_DITTA_INDIVIDUALE("CH-ditta-individuale"),
    MK_DRUSTVO_SO_OGRANICENA_ODGOVORNOST_DOO("MK-Drustvo-so-Ogranicena-Odgovornost-DOO"),
    ME_AKCIONARSKO_DRUSTVO_AD("ME-Akcionarsko-Drustvo-AD"),
    BE_BESLOTEN_VENNOOTSCHAP_MET_BEPERKTE_AANSPRAKELIJKHEID_BVBA("BE-besloten-vennootschap-met-beperkte-aansprakelijkheid-BVBA"),
    BR_FUNDACAO_PRIVADA("BR-Fundacao-privada"),
    JP_NINI_KUMIAI_NK("JP-nini-kumiai-NK"),
    GT_SOCIEDAD_EN_COMANDITA_POR_ACCIONES_CIA_S_C_A("GT-Sociedad-en-Comandita-por-Acciones-Cia-S-C-A"),
    RS_JAVNO_PREDUZECE_JP("RS-javno-preduzece-jp"),
    FI_VALTION_LIIKELAITOS("FI-valtion-liikelaitos"),
    BR_SOCIEDADE_LIMITADA_LTDA("BR-Sociedade-limitada-Ltda"),
    CH_WIRTSCHAFTLICHE_INTERESSENGEMEINSCHAFT_WIG("CH-wirtschaftliche-Interessengemeinschaft-wIG"),
    TR_HALKA_ACIK_ANONIM_ORTAKLIK_HAAO("TR-Halka-Acik-Anonim-Ortaklik-HAAO"),
    FI_EUROOPPAOSUUSKUNTA_SCE("FI-Eurooppaosuuskunta-SCE"),
    FR_ENTREPRISE_INDIVIDUELLE_ENTREPRISE_EN_NOM_PERSONNEL_EI("FR-Entreprise-individuelle-entreprise-en-nom-personnel-EI"),
    PH_INCORPORATED_INC("PH-Incorporated-Inc"),
    CO_EMPRESA_UNIPERSONAL_EU("CO-Empresa-Unipersonal-EU"),
    EE_AKTSIASELTS_AS("EE-Aktsiaselts-AS"),
    SG_SINGAPORE_SUBSIDIARY_COMPANY("SG-Singapore-subsidiary-company"),
    FI_EUROOPPALAINEN_TALOUDELLINEN_ETUYHTYMA_EEIG("FI-Eurooppalainen-taloudellinen-etuyhtyma-EEIG"),
    FR_ASSOCIATION_NON_DECLAREE("FR-Association-non-declaree"),
    ZA_UNLIMITED_LIABILITY_COMPANY("ZA-Unlimited-liability-company"),
    DE_GESELLSCHAFT_MIT_BESCHRANKTER_HAFTUNG_GMBH("DE-Gesellschaft-mit-beschrankter-Haftung-GmbH"),
    TR_KOLEKTIF_SIRKET_KOLL_STI("TR-Kolektif-sirket-Koll-Sti"),
    NO_BORETTSLAG_BL("NO-Borettslag-BL"),
    TR_IRTIBAT_BUROSU("TR-irtibat-burosu"),
    NO_STATSFORETAK_SF("NO-Statsforetak-SF"),
    FR_ASSOCIATION_DECLAREE("FR-Association-declaree"),
    IN_PARTNERSHIP("IN-Partnership"),
    SE_EKONOMISK_FORENING_EK_FOR("SE-Ekonomisk-forening-Ek-for"),
    AR_SOCIEDAD_EN_COMANDITA_SIMPLE_SCS("AR-Sociedad-en-Comandita-Simple-SCS"),
    NA_TRUSTS("NA-Trusts"),
    PL_SPOLKA_KOMANDYTOWA_SPK("PL-spolka-komandytowa-spk"),
    HR_GOSPODARSKO_INTERESNO_UDRUZENJE_GIU("HR-gospodarsko-interesno-udruzenje-GIU"),
    TR_KOOPERATIF_SIRKET_KOOP("TR-Kooperatif-Sirket-Koop"),
    ET_SHARE_COMPANY_AMHARIC_SC("ET-Share-company-Amharic-SC"),
    AT_GENOSSENSCHAFT_GEN("AT-Genossenschaft-Gen"),
    CH_SOCIETA_DI_INVESTIMENTO_A_CAPITALE_FISSO_SICAF("CH-societa-di-investimento-a-capitale-fisso-SICAF"),
    DO_EMPRESA_INDIVIDUAL_DE_RESPONSABILIDAD_LIMITADA_EIRL("DO-Empresa-Individual-de-Responsabilidad-Limitada-EIRL"),
    JO_PUBLIC_SHAREHOLDING("JO-Public-Shareholding"),
    AT_KOMMANDITGESELLSCHAFT_KG("AT-Kommanditgesellschaft-KG"),
    IN_HINDU_UNDIVIDED_FAMILY_HUF("IN-Hindu-Undivided-Family-HUF"),
    PK_PARTNERSHIP("PK-Partnership"),
    BA_DIONICKO_DRUSTVO_DD("BA-dionicko-drustvo-dd"),
    SE_KOOPERATIV("SE-Kooperativ"),
    AU_NO_LIABILITY_NL("AU-No-liability-NL"),
    AR_SOCIEDAD_DE_GARANTIA_RECIPROCA_SGR("AR-Sociedad-de-Garantia-Reciproca-SGR"),
    BR_EMPRESA_INDIVIDUAL_DE_RESPONSABILIDADE_LIMITADA_EIRELI("BR-Empresa-Individual-de-Responsabilidade-Limitada-EIRELI"),
    CH_SOCIETE_ANONYME_SA_528("CH-societe-anonyme-SA"),
    TN_SOCIETE_ANONYME_SA("TN-Societe-anonyme-SA"),
    ES_SOCIEDAD_COOPERATIVA_SCOOP("ES-Sociedad-Cooperativa-SCoop"),
    AL_SHOQERI_AKSIONERE_SHA("AL-Shoqeri-Aksionere-ShA"),
    PH_COMPANY_CO("PH-Company-Co"),
    BR_SOCIEDADE_EM_COMUM("BR-Sociedade-em-comum"),
    RS_DRUSTVO_SA_OGRANICENOM_ODGOVORNOSCU_DOO("RS-drustvo-sa-ogranicenom-odgovornoscu-doo"),
    SE_KOMMANDITBOLAG_KB("SE-Kommanditbolag-KB"),
    CH_AKTIENGESELLSCHAFT_AG("CH-Aktiengesellschaft-AG"),
    LU_SOCIETE_A_RESPONSABILITE_LIMITEE_SARL("LU-Societe-a-responsabilite-limitee-SARL"),
    TN_ENTREPRISE_INDIVIDUELLE("TN-Entreprise-individuelle"),
    MA_SOCIETE_EN_NOM_COLLECTIF_SNC("MA-Societe-en-Nom-Collectif-SNC"),
    SK_AKCIOVA_SPOLOCNOST_AS("SK-Akciova-spolocnost-as"),
    FI_REKISTEROITY_PUOLUE_RP("FI-rekisteroity-puolue-rp"),
    HU_EGYENI_VALLALKOZO_EV("HU-egyeni-vallalkozo-ev"),
    VN_HOP_TAC_XA_HTX("VN-Hop-tac-xa-HTX"),
    SG_PUBLIC_LIMITED_COMPANY_BERHAD_LTD_BHD("SG-public-limited-company-Berhad-Ltd-Bhd"),
    HR_ZADRUGA("HR-zadruga"),
    FI_UITTOYHTEISO("FI-uittoyhteiso"),
    PH_COOPERATIVE_COOP("PH-Cooperative-Coop"),
    ES_SOCIEDAD_ANONIMA_SA("ES-Sociedad-Anonima-SA"),
    CZ_ZAPSANY_SPOLEK_ZS("CZ-zapsany-spolek-zs"),
    LU_SOCIETE_EN_COMMANDITE_SIMPLE_SECS("LU-Societe-en-commandite-simple-SECS"),
    FR_SOCIETE_DINVESTISSEMENT_A_CAPITAL_FIXE("FR-Societe-dinvestissement-a-capital-fixe"),
    SK_DRUZSTVO("SK-druzstvo"),
    ID_PERSEROAN_TERBATAS_PT("ID-Perseroan-Terbatas-PT"),
    BR_ORGANIZACAO_DA_SOCIEDADE_CIVIL_DE_INTERESSE_PUBLICO("BR-Organizacao-da-sociedade-civil-de-interesse-publico"),
    BR_SERVICOS_SOCIAIS_AUTONOMOS("BR-Servicos-sociais-autonomos"),
    GR_ETERORITHMI_ETERIA_EE("GR-Eterorithmi-Eteria-EE"),
    CH_SOCIETA_IN_NOME_COLLETTIVO("CH-societa-in-nome-collettivo"),
    MN_KHUVITSAAT_KOMPANI_XK("MN-Khuvitsaat-Kompani-XK"),
    PL_JEDNOOSOBOWA_DZIALALNOSC_GOSPODARCZA("PL-jednoosobowa-dzialalnosc-gospodarcza"),
    IL_COOPERATIVE("IL-Cooperative"),
    US_LIMITED_LIABILITY_LIMITED_PARTNERSHIP_LLLP("US-Limited-Liability-Limited-Partnership-LLLP"),
    CH_FONDATION("CH-fondation"),
    HU_EGYENI_CEG_EC("HU-egyeni-ceg-ec"),
    FR_AUTO_ENTREPRENEUR("FR-Auto-entrepreneur"),
    BE_ENTREPRISE_INDIVIDUELLE("BE-entreprise-individuelle"),
    IN_INCORPORATED_COMPANY("IN-Incorporated-Company"),
    NA_CLOSE_CORPORATION("NA-Close-Corporation"),
    BE_STILLE_HANDELSVENNOOTSCHAP("BE-stille-handelsvennootschap"),
    NO_KOMMUNALT_FORETAK_KF("NO-Kommunalt-foretak-KF"),
    BE_SOCIETE_COOPERATIVE_A_RESPONSABILITE_ILLIMITEE_SCRI("BE-societe-cooperative-a-responsabilite-illimitee-SCRI"),
    LV_AKCIJU_SABIEDRIBA_AS("LV-Akciju-sabiedriba-AS"),
    SI_DELNISKA_DRUZBA_DD("SI-Delniska-druzba-dd"),
    PE_SOCIEDAD_ANONIMA_SA("PE-Sociedad-Anonima-SA"),
    US_NATIONAL_TRUST_AND_SAVINGS_ASSOCIATION_NT_SA("US-National-Trust-and-Savings-Association-NT-SA"),
    NZ_LOOK_THROUGH_COMPANY("NZ-Look-through-company"),
    BE_SOCIETE_EN_COMMANDITE_PAR_ACTIONS_SCA("BE-societe-en-commandite-par-actions-SCA"),
    ES_SOCIEDAD_COLECTIVA_SC("ES-Sociedad-Colectiva-SC"),
    AL_SHOQERI_ME_PERGJEGJESI_TE_KUFIZUAR_SHPK("AL-Shoqeri-me-pergjegjesi-te-kufizuar-Shpk"),
    GB_SOLE_PROPRIETORSHIP("GB-Sole-proprietorship"),
    CH_EINFACHE_GESELLSCHAFT_EG("CH-einfache-Gesellschaft-eG"),
    BE_NAAMLOZE_VENNOOTSCHAP_NV("BE-naamloze-vennootschap-NV"),
    LT_AKCINE_BENDROVE_AB("LT-Akcine-bendrove-AB"),
    IR_SHERKAT_SAHAMI_KHAS("IR-Sherkat-Sahami-Khas"),
    MK_KOMANDITNO_DRUSTVO_SO_AKCIE_KDA("MK-Komanditno-Drustvo-so-Akcie-KDA"),
    KH_STATE_JOINT_VENTURE_COMPANY("KH-State-Joint-Venture-Company"),
    RU_INDIVIDUALNY_PREDPRINIMATEL_IP("RU-Individualny-predprinimatel-IP"),
    LB_SOCIETE_EN_NOM_COLLECTIF_SNC("LB-Societe-en-Nom-Collectif-SNC"),
    CH_INVESTMENT_FUND("CH-investment-fund"),
    US_FEDERAL_CREDIT_UNION("US-Federal-Credit-Union"),
    BE_SOCIETE_INTERNE("BE-societe-interne"),
    JP_YUGEN_KAISHA_YK("JP-yugen-kaisha-YK"),
    RO_SOCIETATEA_CU_RASPUNDERE_LIMITATA_SRL("RO-Societatea-cu-raspundere-limitata-SRL"),
    CH_SUCCURSALE("CH-succursale"),
    EC_COMPANIA_ANONIMA_CA("EC-Compania-Anonima-CA"),
    IT_IMPRENDITORE("IT-Imprenditore"),
    RO_SOCIETATEA_PE_ACTIUNI_SA("RO-Societatea-pe-actiuni-SA"),
    PT_SOCIEDADE_ABERTA_SA("PT-Sociedade-Aberta-SA"),
    GR_OMORITHMI_ETERIA_OE("GR-Omorithmi-Eteria-OE"),
    CO_COMANDITA_SIMPLE_S_EN_C("CO-Comandita-Simple-S-en-C"),
    ET_PRIVATE_LIMITED_COMPANY_AMHARIC_PLC("ET-Private-limited-company-Amharic-PLC"),
    FI_ASUNTO_OSAKEYHTIO("FI-asunto-osakeyhtio"),
    EE_TAISUHING_TU("EE-Taisuhing-TU"),
    TR_SUBE_SB("TR-Sube-Sb"),
    RO_SOCIETATE_PE_ACTIUNI_SA("RO-Societate-pe-Actiuni-SA"),
    RO_SOCIETATEA_IN_COMANDITA_SIMPLA_SCS("RO-Societatea-in-comandita-simpla-SCS"),
    FI_TOIMINIMI_TMI("FI-toiminimi-Tmi"),
    FR_SOCIETE_COOPERATIVE_DE_PRODUCTION_SCOP("FR-Societe-cooperative-de-production-SCOP"),
    BE_VERENIGING_IN_DEELNEMING("BE-vereniging-in-deelneming"),
    CZ_AKCIOVA_SPOLECNOST_AS("CZ-Akciova-spolecnost-as"),
    AR_SOCIEDAD_COLECTIVA_SOCCOL("AR-Sociedad-Colectiva-SocCol"),
    LT_INDIVIDUALI_IMONE_II("LT-Individuali-imone-II"),
    GB_LIMITED_LIABILITY_PARTNERSHIP_LLP("GB-Limited-liability-partnership-LLP"),
    NG_PRIVATE_LIMITED_COMPANY_LTD("NG-Private-Limited-Company-Ltd"),
    EEA_SOCIETAS_COOPERATIVA_EUROPAEA_SCE("EEA-Societas-Cooperativa-Europaea-SCE"),
    KZ_TOVARISHCHESTVO_S_DOPOLNITELNOYU_OTVETSTVENNOSTYU_TDO("KZ-Tovarishchestvo-s-dopolnitelnoyu-otvetstvennostyu-TDO"),
    CL_SOCIEDAD_DE_RESPONSABILIDAD_LIMITADA_LTDA("CL-Sociedad-de-responsabilidad-limitada-LTDA"),
    NI_SOCIEDAD_EN_NOMBRE_COLECTIVO_CIA("NI-Sociedad-en-Nombre-Colectivo-Cia"),
    IT_LAVORATORE_AUTONOMO("IT-Lavoratore-autonomo"),
    TR_LIMITED_SIRKET_LS("TR-Limited-sirket-LS"),
    DE_KOMMANDITGESELLSCHAFT_AUF_AKTIEN_KGAA("DE-Kommanditgesellschaft-auf-Aktien-KGaA"),
    PT_SOCIEDADE_FECHADA_SF("PT-Sociedade-Fechada-SF"),
    DE_NICHT_EINGETRAGENER_VEREI("DE-nicht-eingetragener-Verei"),
    GB_COMMUNITY_INTEREST_COMPANY_CIC("GB-community-interest-company-CIC"),
    HU_KOZOS_VALLALAT_KV("HU-kozos-vallalat-kv"),
    DK_INTERESSENTSKAB_I_S("DK-Interessentskab-I-S"),
    AT_KOMMANDITERWERBSGESELLSCHAFT_KEG("AT-Kommanditerwerbsgesellschaft-KEG"),
    BE_COOPERATIEVE_VENNOOTSCHAP_MET_BEPERKTE_AANSPRAKELIJKHEID_CVBA("BE-cooperatieve-vennootschap-met-beperkte-aansprakelijkheid-CVBA"),
    BE_PRIVATE_STICHTING("BE-private-stichting"),
    UA_PRYVATNE_PIDPRYIEMSTVO_PP("UA-Pryvatne-Pidpryiemstvo-PP"),
    MX_SOCIEDAD_ANONIMA_PROMOTORA_DE_INVERSION_SAPI("MX-Sociedad-Anonima-Promotora-de-Inversion-SAPI"),
    FI_REKISTEROITY_YHDISTYS_RY("FI-rekisteroity-yhdistys-ry"),
    BG_AKTSIONERNO_DRUZHESTVO_SUS_SPETSIALNA_INVESTITSIONNA_TSEL_ADSITZ("BG-aktsionerno-druzhestvo-sus-spetsialna-investitsionna-tsel-ADSITz"),
    CH_SOCIETA_A_GARANZIA_LIMITATA_SAGL_633("CH-Societa-a-garanzia-limitata-Sagl"),
    KH_SINGLE_MEMBER_PRIVATE_LIMITED_COMPANY_SM("KH-Single-Member-Private-Limited-Company-SM"),
    TR_SAHIS_FIRMASI("TR-Sahis-Firmasi"),
    BE_GEWONE_COMMANDITAIRE_VENNOOTSCHAP_COMMV("BE-gewone-commanditaire-vennootschap-CommV"),
    SI_KOMANDITNA_DRUZBA_KD("SI-Komanditna-druzba-kd"),
    SE_BOSTADSRATTSFORENING("SE-Bostadsrattsforening"),
    AU_LIMITED_LTD("AU-Limited-Ltd"),
    VN_CONG_TY_HOP_DANH("VN-Cong-ty-hop-danh"),
    GB_UNLIMITED_COMPANY("GB-Unlimited-company"),
    IT_ARTIGIANO("IT-Artigiano"),
    BE_SOCIETE_EN_NOM_COLLECTIF_SN("BE-societe-en-nom-collectif-SN"),
    FI_SAATIO_RS("FI-saatio-rs"),
    DE_KOMMANDITGESELLSCHAFT_KG("DE-Kommanditgesellschaft-KG"),
    ES_SOCIEDAD_LIMITADA_LABORAL_SLL("ES-Sociedad-Limitada-Laboral-SLL"),
    MX_SOCIEDAD_ANONIMA_SA("MX-Sociedad-Anonima-SA"),
    EG_LIMITED_LIABILITY_COMPANY_LLC("EG-Limited-Liability-Company-LLC"),
    IE_SINGLE_MEMBER_COMPANY("IE-Single-Member-Company"),
    SG_LIMITED_LIABILITY_PARTNERSHIP_LLP("SG-limited-liability-partnership-LLP"),
    IL_FOREIGN_COMPANY_BRANCH("IL-Foreign-Company-branch"),
    BE_STICHTING_VAN_OPENBAAR_NUT("BE-stichting-van-openbaar-nut"),
    ID_USAHA_DAGANG_UD("ID-Usaha-Dagang-UD"),
    CZ_ZIVNOST("CZ-zivnost"),
    DK_GENSIDIGT_SELSKAB_G_S("DK-Gensidigt-selskab-G-S"),
    PT_SOCIEDADE_GESTORA_DE_PARTICIPACOES_SOCIAIS_SGPS("PT-Sociedade-Gestora-de-Participacoes-Sociais-SGPS"),
    PL_SPOLKA_JAWNA_SPJ("PL-spolka-jawna-spj"),
    GB_GENERAL_PARTNERSHIP("GB-General-partnership"),
    HR_DOMACA_RADINOST_AND_SPOREDNO_ZANIMANJE("HR-domaca-radinost-and-sporedno-zanimanje"),
    AT_STILLE_GESELLSCHAFT_STG("AT-stille-Gesellschaft-stG"),
    BR_SOCIEDADE_SIMPLES("BR-Sociedade-simples"),
    KZ_POTREBIBITELSKII_KOOPERATIV_PTK("KZ-Potrebibitelskii-Kooperativ-PtK"),
    IR_SHERKAT_SAHAMI_AM("IR-Sherkat-Sahami-Am"),
    BE_FONDATION_PRIVEE("BE-fondation-privee"),
    SE_ENSKILD_FIRMA("SE-Enskild-firma"),
    AL_SHOQERI_KOMANDITE("AL-Shoqeri-komandite"),
    PL_SPOLKA_Z_OGRANICZONA_ODPOWIEDZIALNOSCIA_SP_Z_OO("PL-spolka-z-ograniczona-odpowiedzialnoscia-Sp-z-oo"),
    KH_LIMITED_PARTNERSHIP_LP("KH-Limited-Partnership-LP"),
    LB_SOCIETE_EN_COMMANDITE_SIMPLE_SCS("LB-Societe-en-Commandite-Simple-SCS"),
    FI_EUROOPPAYHTIO_SE("FI-Eurooppayhtio-SE"),
    FR_FOND_COMMUN_DE_PLACEMENT_FCP("FR-Fond-commun-de-placement-FCP"),
    ES_SOCIEDAD_LIMITADA_SL("ES-Sociedad-Limitada-SL"),
    SA_GENERAL_PARTNERSHIP_COMPANY("SA-General-Partnership-Company"),
    CO_COMANDITA_POR_ACCIONES_SCA("CO-Comandita-por-Acciones-SCA"),
    CH_SOCIETA_DI_INVESTIMENTO_A_CAPITALE_VARIABILE_SICAV("CH-societa-di-investimento-a-capitale-variabile-SICAV"),
    BE_SOCIETE_EN_COMMANDITE_SIMPLE_SCS("BE-societe-en-commandite-simple-SCS"),
    FI_OSAKEYHTIO_OY("FI-osakeyhtio-Oy"),
    PL_SPOLKA_CYWILNA_SC("PL-spolka-cywilna-sc"),
    PL_SPOLKA_PARTNERSKA_SPP("PL-spolka-partnerska-spp"),
    BG_AKTSIONERNO_DRUJESTVO_AD("BG-aktsionerno-drujestvo-AD"),
    RU_KOMMANDITNOE_TOVARISHESTVO("RU-Kommanditnoe-Tovarishestvo"),
    EG_SHARIKAT_TADAMUN("EG-Sharikat-Tadamun"),
    SE_PUBLIKT_AKTIEBOLAG_AB_PUBL("SE-Publikt-aktiebolag-AB-publ"),
    CH_GROUPEMENT_DINTERET_ECONOMIQUE_GIE("CH-groupement-dinteret-economique-GIE"),
    LI_GESELLSCHAFT_MIT_BESCHRANKTER_HAFTUNG_GMBH("LI-Gesellschaft-mit-beschrankter-Haftung-GmbH"),
    RO_SOCIETATE_CU_RASPUNDERE_LIMITATA_SRL("RO-societate-cu-raspundere-limitata-SRL"),
    KZ_KOMANDITNOE_TOVARISHCHESTVO_KT("KZ-Komanditnoe-Tovarishchestvo-KT"),
    ZA_CLOSE_CORPORATION_CC_BK("ZA-Close-corporation-CC-BK"),
    LT_INDIVIDUALI_VEIKLA("LT-Individuali-veikla"),
    JO_LIMITED_LIABILITY_IN_SHARES("JO-Limited-Liability-in-Shares"),
    IT_LIBERO_PROFESSIONISTA("IT-Libero-professionista"),
    FI_KESKINAINEN_KIINTEISTOOSAKEYHTIO("FI-keskinainen-kiinteistoosakeyhtio"),
    JP_GOSHI_KAISHA_GSK("JP-goshi-kaisha-GSK"),
    MY_BERHAD_BHD("MY-Berhad-Bhd"),
    MX_SOCIEDAD_ANONIMA_BURSATIL_SAB("MX-Sociedad-Anonima-Bursatil-SAB"),
    HU_RESZVENYTARSASAG_RT("HU-reszvenytarsasag-rt"),
    DE_STIFTUNG_DES_OFFENTLICHEN_RECHTS("DE-Stiftung-des-offentlichen-Rechts"),
    IR_SHERKAT_TA_AVONI_TOLID_VA_MASRAF("IR-Sherkat-Ta-avoni-Tolid-va-Masraf"),
    NO_NORSKREGISTRERT_UTENLANDSK_FORETAK_NUF("NO-Norskregistrert-utenlandsk-foretak-NUF"),
    DK_SELSKAB_MED_BEGRAENSET_ANSVAR_SMBA("DK-Selskab-med-begraenset-ansvar-SMBA"),
    CH_ASSOCIAZIONE("CH-associazione"),
    IN_PUBLIC_LIMITED_COMPANY_LTD("IN-Public-Limited-Company-Ltd"),
    US_LIMITED_LIABILITY_COMPANY_LLC_LC_LTDCO("US-Limited-Liability-Company-LLC-LC-LtdCo"),
    BG_EDNOLICHNO_AKTSIONERNO_DRUZHESTVO_EAD("BG-ednolichno-aktsionerno-druzhestvo-EAD"),
    NO_KOMMANDITTSELSKAP_KS("NO-Kommandittselskap-KS"),
    NL_COOPERATIE("NL-Cooperatie"),
    BR_ASSOCIACAO_EM_SENTIDO_ESTRITO("BR-Associacao-em-sentido-estrito"),
    NL_WETTELIJKE_AANSPRAKELIJKHEID_WA("NL-Wettelijke-Aansprakelijkheid-WA"),
    IE_A_PUBLIC_LIMITED_COMPANY("IE-A-public-limited-company"),
    BE_ASSOCIATION_SANS_BUT_LUCRATIF_ASBL("BE-association-sans-but-lucratif-ASBL"),
    DE_STIFTUNG("DE-Stiftung"),
    CH_SOCIETE_DINVESTISSEMENT_A_CAPITAL_FIXE_SICAF("CH-societe-dinvestissement-a-capital-fixe-SICAF"),
    MX_SOCIEDAD_EN_COMANDITA_SIMPLE_S_EN_C("MX-Sociedad-en-Comandita-Simple-S-en-C"),
    CH_ZWEIGNIEDERLASSUNG("CH-Zweigniederlassung"),
    CZ_SPOLECNOST_S_RUCENIM_OMEZENYM_SRO("CZ-Spolecnost-s-rucenim-omezenym-sro"),
    FI_VESIOIKEUDELLINEN_YHTEISO_BODIES_OF_WATER("FI-vesioikeudellinen-yhteiso-bodies-of-water"),
    GR_ANONIMI_VIOMIHANIKI_EMBORIKI_ETERIA_AVEE("GR-Anonimi-Viomihaniki-Emboriki-Eteria-AVEE"),
    TW_PUBLIC_LIMITED_COMPANY_OR_CORPORATION("TW-Public-Limited-Company-or-Corporation"),
    RO_SOCIETATE_IN_NUME_COLECTIV_SNC("RO-societate-in-nume-colectiv-SNC"),
    US_LIMITED_PARTNERSHIP_LP("US-Limited-Partnership-LP"),
    IN_SOLE_PROPRIETORSHIP("IN-Sole-Proprietorship"),
    VN_CONG_TY_TRACH_NHIEM_HUU_HAN_CTY_TNHH("VN-Cong-ty-trach-nhiem-huu-han-Cty-TNHH"),
    SG_PTE_EXIST("SG-Pte-exist"),
    LB_BRANCH_OF_FOREIGN_COMPANY("LB-Branch-of-Foreign-Company"),
    BE_EENPERSOONS_BESLOTEN_VENNOOTSCHAP_MET_BEPERKTE_AANSPRAKELIJKHEID_EBVBA("BE-eenpersoons-besloten-vennootschap-met-beperkte-aansprakelijkheid-EBVBA"),
    VN_CHI_NHANH("VN-Chi-nhanh"),
    KR_HAPMYEONG_HOESA("KR-hapmyeong-hoesa"),
    ID_PERUM_PERUSAHAAN_UMUM("ID-Perum-Perusahaan-Umum"),
    CH_GRUPPO_DI_INTERESSE_ECONOMICO("CH-gruppo-di-interesse-economico"),
    TW_LIMITED_COMPANY("TW-Limited-Company"),
    CH_SOCIETE_A_RESPONSABILITE_LIMITEE_SARL_731("CH-Societe-a-responsabilite-limitee-Sarl"),
    ID_PERSEKUTUAN_KOMANDITER("ID-Persekutuan-Komanditer"),
    CH_SOCIETA_IN_ACCOMANDITA("CH-societa-in-accomandita"),
    IN_SMALL_COMPANY("IN-Small-company"),
    IE_COMPANY_LIMITED_BY_GUARANTEE_NOT_HAVING_A_SHARE_CAPITAL("IE-Company-limited-by-guarantee-not-having-a-share-capital"),
    CH_SOCIETA_ANONIMA_SA_736("CH-societa-anonima-SA"),
    RS_ORTACKO_DRUSTVO_OD("RS-ortacko-drustvo-od"),
    UA_ZAKRYTE_AKTSIONERNE_TOVARYSTVO_ZAT("UA-Zakryte-Aktsionerne-Tovarystvo-ZAT"),
    BA_DRUSTVO_S_OGRANICENOM_ODGOVORNOSCU_DOO("BA-drustvo-s-ogranicenom-odgovornoscu-doo");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("regulated_financial_service_firm")
  private Boolean regulated_financial_service_firm = null;

  @JsonProperty("tin")
  private String tin = null;

  @JsonProperty("ultimate_beneficial_owners")
  private List<V1customerbeneficiariesCompany1UltimateBeneficialOwners> ultimate_beneficial_owners = null;

  @JsonProperty("registration_address")
  private V1customerbeneficiariesPersonAddress registration_address = null;

  @JsonProperty("legal_entry_number")
  private String legal_entry_number = null;

  @JsonProperty("regulatory_licenses")
  private List<V1customerbeneficiariesCompanyRegulatoryLicenses> regulatory_licenses = null;

  @JsonProperty("listed_on_stock_exchange")
  private Boolean listed_on_stock_exchange = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("vat")
  private String vat = null;

  @JsonProperty("telephone")
  private String telephone = null;

  @JsonProperty("incorporation_locality")
  private String incorporation_locality = null;

  @JsonProperty("type_other")
  private String type_other = null;

  @JsonProperty("eu_vat")
  private String eu_vat = null;

  @JsonProperty("registration_address_history")
  private List<V1customerbeneficiariesPersonAddressHistory> registration_address_history = null;

  @JsonProperty("trading_addresses")
  private List<V1customerbeneficiariesPersonAddress> trading_addresses = null;

  @JsonProperty("registration_date")
  private LocalDate registration_date = null;

  @JsonProperty("trading_name")
  private String trading_name = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("corporate_entity_type")
  private String corporate_entity_type = null;

  @JsonProperty("date_onboarded")
  private LocalDate date_onboarded = null;

  @JsonProperty("web_site")
  private String web_site = null;

  @JsonProperty("trading_address_history")
  private List<V1customerbeneficiariesPersonAddressHistory> trading_address_history = null;

  public V1customerbeneficiariesCompany1 stock_exchanges(List<V1customerbeneficiariesCompanyStockExchanges> stock_exchanges) {
    this.stock_exchanges = stock_exchanges;
    return this;
  }

  public V1customerbeneficiariesCompany1 addStockExchangesItem(V1customerbeneficiariesCompanyStockExchanges stock_exchangesItem) {
    if (this.stock_exchanges == null) {
      this.stock_exchanges = new ArrayList<>();
    }
    this.stock_exchanges.add(stock_exchangesItem);
    return this;
  }

   /**
   * Get stock_exchanges
   * @return stock_exchanges
  **/
  public List<V1customerbeneficiariesCompanyStockExchanges> getStockExchanges() {
    return stock_exchanges;
  }

  public void setStockExchanges(List<V1customerbeneficiariesCompanyStockExchanges> stock_exchanges) {
    this.stock_exchanges = stock_exchanges;
  }

  public V1customerbeneficiariesCompany1 registration_number(String registration_number) {
    this.registration_number = registration_number;
    return this;
  }

   /**
   * Get registration_number
   * @return registration_number
  **/
  public String getRegistrationNumber() {
    return registration_number;
  }

  public void setRegistrationNumber(String registration_number) {
    this.registration_number = registration_number;
  }

  public V1customerbeneficiariesCompany1 directors(List<V1customerbeneficiariesCompany1Directors> directors) {
    this.directors = directors;
    return this;
  }

  public V1customerbeneficiariesCompany1 addDirectorsItem(V1customerbeneficiariesCompany1Directors directorsItem) {
    if (this.directors == null) {
      this.directors = new ArrayList<>();
    }
    this.directors.add(directorsItem);
    return this;
  }

   /**
   * Get directors
   * @return directors
  **/
  public List<V1customerbeneficiariesCompany1Directors> getDirectors() {
    return directors;
  }

  public void setDirectors(List<V1customerbeneficiariesCompany1Directors> directors) {
    this.directors = directors;
  }

  public V1customerbeneficiariesCompany1 industry(String industry) {
    this.industry = industry;
    return this;
  }

   /**
   * Get industry
   * @return industry
  **/
  public String getIndustry() {
    return industry;
  }

  public void setIndustry(String industry) {
    this.industry = industry;
  }

  public V1customerbeneficiariesCompany1 type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public V1customerbeneficiariesCompany1 regulated_financial_service_firm(Boolean regulated_financial_service_firm) {
    this.regulated_financial_service_firm = regulated_financial_service_firm;
    return this;
  }

   /**
   * Get regulated_financial_service_firm
   * @return regulated_financial_service_firm
  **/
  public Boolean isRegulatedFinancialServiceFirm() {
    return regulated_financial_service_firm;
  }

  public void setRegulatedFinancialServiceFirm(Boolean regulated_financial_service_firm) {
    this.regulated_financial_service_firm = regulated_financial_service_firm;
  }

  public V1customerbeneficiariesCompany1 tin(String tin) {
    this.tin = tin;
    return this;
  }

   /**
   * Get tin
   * @return tin
  **/
  public String getTin() {
    return tin;
  }

  public void setTin(String tin) {
    this.tin = tin;
  }

  public V1customerbeneficiariesCompany1 ultimate_beneficial_owners(List<V1customerbeneficiariesCompany1UltimateBeneficialOwners> ultimate_beneficial_owners) {
    this.ultimate_beneficial_owners = ultimate_beneficial_owners;
    return this;
  }

  public V1customerbeneficiariesCompany1 addUltimateBeneficialOwnersItem(V1customerbeneficiariesCompany1UltimateBeneficialOwners ultimate_beneficial_ownersItem) {
    if (this.ultimate_beneficial_owners == null) {
      this.ultimate_beneficial_owners = new ArrayList<>();
    }
    this.ultimate_beneficial_owners.add(ultimate_beneficial_ownersItem);
    return this;
  }

   /**
   * Get ultimate_beneficial_owners
   * @return ultimate_beneficial_owners
  **/
  public List<V1customerbeneficiariesCompany1UltimateBeneficialOwners> getUltimateBeneficialOwners() {
    return ultimate_beneficial_owners;
  }

  public void setUltimateBeneficialOwners(List<V1customerbeneficiariesCompany1UltimateBeneficialOwners> ultimate_beneficial_owners) {
    this.ultimate_beneficial_owners = ultimate_beneficial_owners;
  }

  public V1customerbeneficiariesCompany1 registration_address(V1customerbeneficiariesPersonAddress registration_address) {
    this.registration_address = registration_address;
    return this;
  }

   /**
   * Get registration_address
   * @return registration_address
  **/
  public V1customerbeneficiariesPersonAddress getRegistrationAddress() {
    return registration_address;
  }

  public void setRegistrationAddress(V1customerbeneficiariesPersonAddress registration_address) {
    this.registration_address = registration_address;
  }

  public V1customerbeneficiariesCompany1 legal_entry_number(String legal_entry_number) {
    this.legal_entry_number = legal_entry_number;
    return this;
  }

   /**
   * Get legal_entry_number
   * @return legal_entry_number
  **/
  public String getLegalEntryNumber() {
    return legal_entry_number;
  }

  public void setLegalEntryNumber(String legal_entry_number) {
    this.legal_entry_number = legal_entry_number;
  }

  public V1customerbeneficiariesCompany1 regulatory_licenses(List<V1customerbeneficiariesCompanyRegulatoryLicenses> regulatory_licenses) {
    this.regulatory_licenses = regulatory_licenses;
    return this;
  }

  public V1customerbeneficiariesCompany1 addRegulatoryLicensesItem(V1customerbeneficiariesCompanyRegulatoryLicenses regulatory_licensesItem) {
    if (this.regulatory_licenses == null) {
      this.regulatory_licenses = new ArrayList<>();
    }
    this.regulatory_licenses.add(regulatory_licensesItem);
    return this;
  }

   /**
   * Get regulatory_licenses
   * @return regulatory_licenses
  **/
  public List<V1customerbeneficiariesCompanyRegulatoryLicenses> getRegulatoryLicenses() {
    return regulatory_licenses;
  }

  public void setRegulatoryLicenses(List<V1customerbeneficiariesCompanyRegulatoryLicenses> regulatory_licenses) {
    this.regulatory_licenses = regulatory_licenses;
  }

  public V1customerbeneficiariesCompany1 listed_on_stock_exchange(Boolean listed_on_stock_exchange) {
    this.listed_on_stock_exchange = listed_on_stock_exchange;
    return this;
  }

   /**
   * Get listed_on_stock_exchange
   * @return listed_on_stock_exchange
  **/
  public Boolean isListedOnStockExchange() {
    return listed_on_stock_exchange;
  }

  public void setListedOnStockExchange(Boolean listed_on_stock_exchange) {
    this.listed_on_stock_exchange = listed_on_stock_exchange;
  }

  public V1customerbeneficiariesCompany1 email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public V1customerbeneficiariesCompany1 vat(String vat) {
    this.vat = vat;
    return this;
  }

   /**
   * Get vat
   * @return vat
  **/
  public String getVat() {
    return vat;
  }

  public void setVat(String vat) {
    this.vat = vat;
  }

  public V1customerbeneficiariesCompany1 telephone(String telephone) {
    this.telephone = telephone;
    return this;
  }

   /**
   * Get telephone
   * @return telephone
  **/
  public String getTelephone() {
    return telephone;
  }

  public void setTelephone(String telephone) {
    this.telephone = telephone;
  }

  public V1customerbeneficiariesCompany1 incorporation_locality(String incorporation_locality) {
    this.incorporation_locality = incorporation_locality;
    return this;
  }

   /**
   * Get incorporation_locality
   * @return incorporation_locality
  **/
  public String getIncorporationLocality() {
    return incorporation_locality;
  }

  public void setIncorporationLocality(String incorporation_locality) {
    this.incorporation_locality = incorporation_locality;
  }

  public V1customerbeneficiariesCompany1 type_other(String type_other) {
    this.type_other = type_other;
    return this;
  }

   /**
   * Get type_other
   * @return type_other
  **/
  public String getTypeOther() {
    return type_other;
  }

  public void setTypeOther(String type_other) {
    this.type_other = type_other;
  }

  public V1customerbeneficiariesCompany1 eu_vat(String eu_vat) {
    this.eu_vat = eu_vat;
    return this;
  }

   /**
   * Get eu_vat
   * @return eu_vat
  **/
  public String getEuVat() {
    return eu_vat;
  }

  public void setEuVat(String eu_vat) {
    this.eu_vat = eu_vat;
  }

  public V1customerbeneficiariesCompany1 registration_address_history(List<V1customerbeneficiariesPersonAddressHistory> registration_address_history) {
    this.registration_address_history = registration_address_history;
    return this;
  }

  public V1customerbeneficiariesCompany1 addRegistrationAddressHistoryItem(V1customerbeneficiariesPersonAddressHistory registration_address_historyItem) {
    if (this.registration_address_history == null) {
      this.registration_address_history = new ArrayList<>();
    }
    this.registration_address_history.add(registration_address_historyItem);
    return this;
  }

   /**
   * Get registration_address_history
   * @return registration_address_history
  **/
  public List<V1customerbeneficiariesPersonAddressHistory> getRegistrationAddressHistory() {
    return registration_address_history;
  }

  public void setRegistrationAddressHistory(List<V1customerbeneficiariesPersonAddressHistory> registration_address_history) {
    this.registration_address_history = registration_address_history;
  }

  public V1customerbeneficiariesCompany1 trading_addresses(List<V1customerbeneficiariesPersonAddress> trading_addresses) {
    this.trading_addresses = trading_addresses;
    return this;
  }

  public V1customerbeneficiariesCompany1 addTradingAddressesItem(V1customerbeneficiariesPersonAddress trading_addressesItem) {
    if (this.trading_addresses == null) {
      this.trading_addresses = new ArrayList<>();
    }
    this.trading_addresses.add(trading_addressesItem);
    return this;
  }

   /**
   * Get trading_addresses
   * @return trading_addresses
  **/
  public List<V1customerbeneficiariesPersonAddress> getTradingAddresses() {
    return trading_addresses;
  }

  public void setTradingAddresses(List<V1customerbeneficiariesPersonAddress> trading_addresses) {
    this.trading_addresses = trading_addresses;
  }

  public V1customerbeneficiariesCompany1 registration_date(LocalDate registration_date) {
    this.registration_date = registration_date;
    return this;
  }

   /**
   * Get registration_date
   * @return registration_date
  **/
  public LocalDate getRegistrationDate() {
    return registration_date;
  }

  public void setRegistrationDate(LocalDate registration_date) {
    this.registration_date = registration_date;
  }

  public V1customerbeneficiariesCompany1 trading_name(String trading_name) {
    this.trading_name = trading_name;
    return this;
  }

   /**
   * Get trading_name
   * @return trading_name
  **/
  public String getTradingName() {
    return trading_name;
  }

  public void setTradingName(String trading_name) {
    this.trading_name = trading_name;
  }

  public V1customerbeneficiariesCompany1 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1customerbeneficiariesCompany1 corporate_entity_type(String corporate_entity_type) {
    this.corporate_entity_type = corporate_entity_type;
    return this;
  }

   /**
   * Get corporate_entity_type
   * @return corporate_entity_type
  **/
  public String getCorporateEntityType() {
    return corporate_entity_type;
  }

  public void setCorporateEntityType(String corporate_entity_type) {
    this.corporate_entity_type = corporate_entity_type;
  }

  public V1customerbeneficiariesCompany1 date_onboarded(LocalDate date_onboarded) {
    this.date_onboarded = date_onboarded;
    return this;
  }

   /**
   * Get date_onboarded
   * @return date_onboarded
  **/
  public LocalDate getDateOnboarded() {
    return date_onboarded;
  }

  public void setDateOnboarded(LocalDate date_onboarded) {
    this.date_onboarded = date_onboarded;
  }

  public V1customerbeneficiariesCompany1 web_site(String web_site) {
    this.web_site = web_site;
    return this;
  }

   /**
   * Get web_site
   * @return web_site
  **/
  public String getWebSite() {
    return web_site;
  }

  public void setWebSite(String web_site) {
    this.web_site = web_site;
  }

  public V1customerbeneficiariesCompany1 trading_address_history(List<V1customerbeneficiariesPersonAddressHistory> trading_address_history) {
    this.trading_address_history = trading_address_history;
    return this;
  }

  public V1customerbeneficiariesCompany1 addTradingAddressHistoryItem(V1customerbeneficiariesPersonAddressHistory trading_address_historyItem) {
    if (this.trading_address_history == null) {
      this.trading_address_history = new ArrayList<>();
    }
    this.trading_address_history.add(trading_address_historyItem);
    return this;
  }

   /**
   * Get trading_address_history
   * @return trading_address_history
  **/
  public List<V1customerbeneficiariesPersonAddressHistory> getTradingAddressHistory() {
    return trading_address_history;
  }

  public void setTradingAddressHistory(List<V1customerbeneficiariesPersonAddressHistory> trading_address_history) {
    this.trading_address_history = trading_address_history;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1customerbeneficiariesCompany1 v1customerbeneficiaries_company_1 = (V1customerbeneficiariesCompany1) o;
    return Objects.equals(this.stock_exchanges, v1customerbeneficiaries_company_1.stock_exchanges) &&
        Objects.equals(this.registration_number, v1customerbeneficiaries_company_1.registration_number) &&
        Objects.equals(this.directors, v1customerbeneficiaries_company_1.directors) &&
        Objects.equals(this.industry, v1customerbeneficiaries_company_1.industry) &&
        Objects.equals(this.type, v1customerbeneficiaries_company_1.type) &&
        Objects.equals(this.regulated_financial_service_firm, v1customerbeneficiaries_company_1.regulated_financial_service_firm) &&
        Objects.equals(this.tin, v1customerbeneficiaries_company_1.tin) &&
        Objects.equals(this.ultimate_beneficial_owners, v1customerbeneficiaries_company_1.ultimate_beneficial_owners) &&
        Objects.equals(this.registration_address, v1customerbeneficiaries_company_1.registration_address) &&
        Objects.equals(this.legal_entry_number, v1customerbeneficiaries_company_1.legal_entry_number) &&
        Objects.equals(this.regulatory_licenses, v1customerbeneficiaries_company_1.regulatory_licenses) &&
        Objects.equals(this.listed_on_stock_exchange, v1customerbeneficiaries_company_1.listed_on_stock_exchange) &&
        Objects.equals(this.email, v1customerbeneficiaries_company_1.email) &&
        Objects.equals(this.vat, v1customerbeneficiaries_company_1.vat) &&
        Objects.equals(this.telephone, v1customerbeneficiaries_company_1.telephone) &&
        Objects.equals(this.incorporation_locality, v1customerbeneficiaries_company_1.incorporation_locality) &&
        Objects.equals(this.type_other, v1customerbeneficiaries_company_1.type_other) &&
        Objects.equals(this.eu_vat, v1customerbeneficiaries_company_1.eu_vat) &&
        Objects.equals(this.registration_address_history, v1customerbeneficiaries_company_1.registration_address_history) &&
        Objects.equals(this.trading_addresses, v1customerbeneficiaries_company_1.trading_addresses) &&
        Objects.equals(this.registration_date, v1customerbeneficiaries_company_1.registration_date) &&
        Objects.equals(this.trading_name, v1customerbeneficiaries_company_1.trading_name) &&
        Objects.equals(this.name, v1customerbeneficiaries_company_1.name) &&
        Objects.equals(this.corporate_entity_type, v1customerbeneficiaries_company_1.corporate_entity_type) &&
        Objects.equals(this.date_onboarded, v1customerbeneficiaries_company_1.date_onboarded) &&
        Objects.equals(this.web_site, v1customerbeneficiaries_company_1.web_site) &&
        Objects.equals(this.trading_address_history, v1customerbeneficiaries_company_1.trading_address_history);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stock_exchanges, registration_number, directors, industry, type, regulated_financial_service_firm, tin, ultimate_beneficial_owners, registration_address, legal_entry_number, regulatory_licenses, listed_on_stock_exchange, email, vat, telephone, incorporation_locality, type_other, eu_vat, registration_address_history, trading_addresses, registration_date, trading_name, name, corporate_entity_type, date_onboarded, web_site, trading_address_history);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1customerbeneficiariesCompany1 {\n");
    
    sb.append("    stock_exchanges: ").append(toIndentedString(stock_exchanges)).append("\n");
    sb.append("    registration_number: ").append(toIndentedString(registration_number)).append("\n");
    sb.append("    directors: ").append(toIndentedString(directors)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    regulated_financial_service_firm: ").append(toIndentedString(regulated_financial_service_firm)).append("\n");
    sb.append("    tin: ").append(toIndentedString(tin)).append("\n");
    sb.append("    ultimate_beneficial_owners: ").append(toIndentedString(ultimate_beneficial_owners)).append("\n");
    sb.append("    registration_address: ").append(toIndentedString(registration_address)).append("\n");
    sb.append("    legal_entry_number: ").append(toIndentedString(legal_entry_number)).append("\n");
    sb.append("    regulatory_licenses: ").append(toIndentedString(regulatory_licenses)).append("\n");
    sb.append("    listed_on_stock_exchange: ").append(toIndentedString(listed_on_stock_exchange)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    vat: ").append(toIndentedString(vat)).append("\n");
    sb.append("    telephone: ").append(toIndentedString(telephone)).append("\n");
    sb.append("    incorporation_locality: ").append(toIndentedString(incorporation_locality)).append("\n");
    sb.append("    type_other: ").append(toIndentedString(type_other)).append("\n");
    sb.append("    eu_vat: ").append(toIndentedString(eu_vat)).append("\n");
    sb.append("    registration_address_history: ").append(toIndentedString(registration_address_history)).append("\n");
    sb.append("    trading_addresses: ").append(toIndentedString(trading_addresses)).append("\n");
    sb.append("    registration_date: ").append(toIndentedString(registration_date)).append("\n");
    sb.append("    trading_name: ").append(toIndentedString(trading_name)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    corporate_entity_type: ").append(toIndentedString(corporate_entity_type)).append("\n");
    sb.append("    date_onboarded: ").append(toIndentedString(date_onboarded)).append("\n");
    sb.append("    web_site: ").append(toIndentedString(web_site)).append("\n");
    sb.append("    trading_address_history: ").append(toIndentedString(trading_address_history)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
