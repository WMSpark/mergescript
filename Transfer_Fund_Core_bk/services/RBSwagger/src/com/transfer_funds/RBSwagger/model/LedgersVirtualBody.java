/*
 * Railsbank customer API
 * Public API for Railsbank customers
 *
 * OpenAPI spec version: api
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.RBSwagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * LedgersVirtualBody
 */

public class LedgersVirtualBody {
  /**
   * Gets or Sets asset_class
   */
  public enum AssetClassEnum {
    COMMODITY("commodity"),
    CURRENCY("currency");

    private String value;

    AssetClassEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static AssetClassEnum fromValue(String input) {
      for (AssetClassEnum b : AssetClassEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("asset_class")
  private AssetClassEnum asset_class = null;

  @JsonProperty("holder_id")
  private String holder_id = null;

  /**
   * Gets or Sets asset_type
   */
  public enum AssetTypeEnum {
    PLN("pln"),
    AUD("aud"),
    CHF("chf"),
    CAD("cad"),
    SEK("sek"),
    GOLDBLOC("goldbloc"),
    USD("usd"),
    NOK("nok"),
    WHISKY("whisky"),
    VIRTUAL_CURRENCY("virtual-currency"),
    JPY("jpy"),
    HUF("huf"),
    NZD("nzd"),
    GOLD("gold"),
    CZK("czk"),
    SGD("sgd"),
    RON("ron"),
    GBP("gbp"),
    HRK("hrk"),
    EUR("eur");

    private String value;

    AssetTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static AssetTypeEnum fromValue(String input) {
      for (AssetTypeEnum b : AssetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("asset_type")
  private AssetTypeEnum asset_type = null;

  @JsonProperty("ledger_meta")
  private Object ledger_meta = null;

  public LedgersVirtualBody asset_class(AssetClassEnum asset_class) {
    this.asset_class = asset_class;
    return this;
  }

   /**
   * Get asset_class
   * @return asset_class
  **/
  public AssetClassEnum getAssetClass() {
    return asset_class;
  }

  public void setAssetClass(AssetClassEnum asset_class) {
    this.asset_class = asset_class;
  }

  public LedgersVirtualBody holder_id(String holder_id) {
    this.holder_id = holder_id;
    return this;
  }

   /**
   * Get holder_id
   * @return holder_id
  **/
  public String getHolderId() {
    return holder_id;
  }

  public void setHolderId(String holder_id) {
    this.holder_id = holder_id;
  }

  public LedgersVirtualBody asset_type(AssetTypeEnum asset_type) {
    this.asset_type = asset_type;
    return this;
  }

   /**
   * Get asset_type
   * @return asset_type
  **/
  public AssetTypeEnum getAssetType() {
    return asset_type;
  }

  public void setAssetType(AssetTypeEnum asset_type) {
    this.asset_type = asset_type;
  }

  public LedgersVirtualBody ledger_meta(Object ledger_meta) {
    this.ledger_meta = ledger_meta;
    return this;
  }

   /**
   * Get ledger_meta
   * @return ledger_meta
  **/
  public Object getLedgerMeta() {
    return ledger_meta;
  }

  public void setLedgerMeta(Object ledger_meta) {
    this.ledger_meta = ledger_meta;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LedgersVirtualBody ledgers_virtual_body = (LedgersVirtualBody) o;
    return Objects.equals(this.asset_class, ledgers_virtual_body.asset_class) &&
        Objects.equals(this.holder_id, ledgers_virtual_body.holder_id) &&
        Objects.equals(this.asset_type, ledgers_virtual_body.asset_type) &&
        Objects.equals(this.ledger_meta, ledgers_virtual_body.ledger_meta);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asset_class, holder_id, asset_type, ledger_meta);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LedgersVirtualBody {\n");
    
    sb.append("    asset_class: ").append(toIndentedString(asset_class)).append("\n");
    sb.append("    holder_id: ").append(toIndentedString(holder_id)).append("\n");
    sb.append("    asset_type: ").append(toIndentedString(asset_type)).append("\n");
    sb.append("    ledger_meta: ").append(toIndentedString(ledger_meta)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
