/*
 * Railsbank customer API
 * Public API for Railsbank customers
 *
 * OpenAPI spec version: api
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.RBSwagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * BeneficiaryIdAccountsBody
 */

public class BeneficiaryIdAccountsBody {
  @JsonProperty("account_number")
  private String account_number = null;

  @JsonProperty("bank_code")
  private String bank_code = null;

  /**
   * Gets or Sets account_type
   */
  public enum AccountTypeEnum {
    CHECKING("checking"),
    SAVINGS("savings");

    private String value;

    AccountTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static AccountTypeEnum fromValue(String input) {
      for (AccountTypeEnum b : AccountTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("account_type")
  private AccountTypeEnum account_type = null;

  /**
   * Gets or Sets bank_code_type
   */
  public enum BankCodeTypeEnum {
    ROUTING_NUMBER("routing-number"),
    ABA("aba"),
    SORT_CODE("sort-code"),
    ZENGIN_CODE("zengin-code"),
    BSB("bsb");

    private String value;

    BankCodeTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static BankCodeTypeEnum fromValue(String input) {
      for (BankCodeTypeEnum b : BankCodeTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("bank_code_type")
  private BankCodeTypeEnum bank_code_type = null;

  /**
   * Gets or Sets asset_class
   */
  public enum AssetClassEnum {
    COMMODITY("commodity"),
    CURRENCY("currency");

    private String value;

    AssetClassEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static AssetClassEnum fromValue(String input) {
      for (AssetClassEnum b : AssetClassEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("asset_class")
  private AssetClassEnum asset_class = null;

  @JsonProperty("iban")
  private String iban = null;

  /**
   * Gets or Sets asset_type
   */
  public enum AssetTypeEnum {
    PLN("pln"),
    AUD("aud"),
    CHF("chf"),
    CAD("cad"),
    SEK("sek"),
    GOLDBLOC("goldbloc"),
    USD("usd"),
    NOK("nok"),
    WHISKY("whisky"),
    VIRTUAL_CURRENCY("virtual-currency"),
    JPY("jpy"),
    HUF("huf"),
    NZD("nzd"),
    GOLD("gold"),
    CZK("czk"),
    SGD("sgd"),
    RON("ron"),
    GBP("gbp"),
    HRK("hrk"),
    EUR("eur");

    private String value;

    AssetTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static AssetTypeEnum fromValue(String input) {
      for (AssetTypeEnum b : AssetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("asset_type")
  private AssetTypeEnum asset_type = null;

  @JsonProperty("bank_name")
  private String bank_name = null;

  @JsonProperty("bank_country")
  private String bank_country = null;

  @JsonProperty("bic_swift")
  private String bic_swift = null;

  public BeneficiaryIdAccountsBody account_number(String account_number) {
    this.account_number = account_number;
    return this;
  }

   /**
   * Get account_number
   * @return account_number
  **/
  public String getAccountNumber() {
    return account_number;
  }

  public void setAccountNumber(String account_number) {
    this.account_number = account_number;
  }

  public BeneficiaryIdAccountsBody bank_code(String bank_code) {
    this.bank_code = bank_code;
    return this;
  }

   /**
   * Get bank_code
   * @return bank_code
  **/
  public String getBankCode() {
    return bank_code;
  }

  public void setBankCode(String bank_code) {
    this.bank_code = bank_code;
  }

  public BeneficiaryIdAccountsBody account_type(AccountTypeEnum account_type) {
    this.account_type = account_type;
    return this;
  }

   /**
   * Get account_type
   * @return account_type
  **/
  public AccountTypeEnum getAccountType() {
    return account_type;
  }

  public void setAccountType(AccountTypeEnum account_type) {
    this.account_type = account_type;
  }

  public BeneficiaryIdAccountsBody bank_code_type(BankCodeTypeEnum bank_code_type) {
    this.bank_code_type = bank_code_type;
    return this;
  }

   /**
   * Get bank_code_type
   * @return bank_code_type
  **/
  public BankCodeTypeEnum getBankCodeType() {
    return bank_code_type;
  }

  public void setBankCodeType(BankCodeTypeEnum bank_code_type) {
    this.bank_code_type = bank_code_type;
  }

  public BeneficiaryIdAccountsBody asset_class(AssetClassEnum asset_class) {
    this.asset_class = asset_class;
    return this;
  }

   /**
   * Get asset_class
   * @return asset_class
  **/
  public AssetClassEnum getAssetClass() {
    return asset_class;
  }

  public void setAssetClass(AssetClassEnum asset_class) {
    this.asset_class = asset_class;
  }

  public BeneficiaryIdAccountsBody iban(String iban) {
    this.iban = iban;
    return this;
  }

   /**
   * Get iban
   * @return iban
  **/
  public String getIban() {
    return iban;
  }

  public void setIban(String iban) {
    this.iban = iban;
  }

  public BeneficiaryIdAccountsBody asset_type(AssetTypeEnum asset_type) {
    this.asset_type = asset_type;
    return this;
  }

   /**
   * Get asset_type
   * @return asset_type
  **/
  public AssetTypeEnum getAssetType() {
    return asset_type;
  }

  public void setAssetType(AssetTypeEnum asset_type) {
    this.asset_type = asset_type;
  }

  public BeneficiaryIdAccountsBody bank_name(String bank_name) {
    this.bank_name = bank_name;
    return this;
  }

   /**
   * Get bank_name
   * @return bank_name
  **/
  public String getBankName() {
    return bank_name;
  }

  public void setBankName(String bank_name) {
    this.bank_name = bank_name;
  }

  public BeneficiaryIdAccountsBody bank_country(String bank_country) {
    this.bank_country = bank_country;
    return this;
  }

   /**
   * Get bank_country
   * @return bank_country
  **/
  public String getBankCountry() {
    return bank_country;
  }

  public void setBankCountry(String bank_country) {
    this.bank_country = bank_country;
  }

  public BeneficiaryIdAccountsBody bic_swift(String bic_swift) {
    this.bic_swift = bic_swift;
    return this;
  }

   /**
   * Get bic_swift
   * @return bic_swift
  **/
  public String getBicSwift() {
    return bic_swift;
  }

  public void setBicSwift(String bic_swift) {
    this.bic_swift = bic_swift;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeneficiaryIdAccountsBody beneficiary_id_accounts_body = (BeneficiaryIdAccountsBody) o;
    return Objects.equals(this.account_number, beneficiary_id_accounts_body.account_number) &&
        Objects.equals(this.bank_code, beneficiary_id_accounts_body.bank_code) &&
        Objects.equals(this.account_type, beneficiary_id_accounts_body.account_type) &&
        Objects.equals(this.bank_code_type, beneficiary_id_accounts_body.bank_code_type) &&
        Objects.equals(this.asset_class, beneficiary_id_accounts_body.asset_class) &&
        Objects.equals(this.iban, beneficiary_id_accounts_body.iban) &&
        Objects.equals(this.asset_type, beneficiary_id_accounts_body.asset_type) &&
        Objects.equals(this.bank_name, beneficiary_id_accounts_body.bank_name) &&
        Objects.equals(this.bank_country, beneficiary_id_accounts_body.bank_country) &&
        Objects.equals(this.bic_swift, beneficiary_id_accounts_body.bic_swift);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account_number, bank_code, account_type, bank_code_type, asset_class, iban, asset_type, bank_name, bank_country, bic_swift);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeneficiaryIdAccountsBody {\n");
    
    sb.append("    account_number: ").append(toIndentedString(account_number)).append("\n");
    sb.append("    bank_code: ").append(toIndentedString(bank_code)).append("\n");
    sb.append("    account_type: ").append(toIndentedString(account_type)).append("\n");
    sb.append("    bank_code_type: ").append(toIndentedString(bank_code_type)).append("\n");
    sb.append("    asset_class: ").append(toIndentedString(asset_class)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    asset_type: ").append(toIndentedString(asset_type)).append("\n");
    sb.append("    bank_name: ").append(toIndentedString(bank_name)).append("\n");
    sb.append("    bank_country: ").append(toIndentedString(bank_country)).append("\n");
    sb.append("    bic_swift: ").append(toIndentedString(bic_swift)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
