/*
 * Railsbank customer API
 * Public API for Railsbank customers
 *
 * OpenAPI spec version: api
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.RBSwagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
/**
 * InlineResponse20052
 */

public class InlineResponse20052 {
  /**
   * The currency to be debited in the sending ledger
   */
  public enum SenderAssetTypeEnum {
    PLN("pln"),
    AUD("aud"),
    CHF("chf"),
    CAD("cad"),
    SEK("sek"),
    GOLDBLOC("goldbloc"),
    USD("usd"),
    NOK("nok"),
    WHISKY("whisky"),
    VIRTUAL_CURRENCY("virtual-currency"),
    JPY("jpy"),
    HUF("huf"),
    NZD("nzd"),
    GOLD("gold"),
    CZK("czk"),
    SGD("sgd"),
    RON("ron"),
    GBP("gbp"),
    HRK("hrk"),
    EUR("eur");

    private String value;

    SenderAssetTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static SenderAssetTypeEnum fromValue(String input) {
      for (SenderAssetTypeEnum b : SenderAssetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("sender_asset_type")
  private SenderAssetTypeEnum sender_asset_type = null;

  @JsonProperty("amount_of_beneficiary_asset")
  private BigDecimal amount_of_beneficiary_asset = null;

  /**
   * The currency to be credited in the receiving account
   */
  public enum BeneficiaryAssetTypeEnum {
    PLN("pln"),
    AUD("aud"),
    CHF("chf"),
    CAD("cad"),
    SEK("sek"),
    GOLDBLOC("goldbloc"),
    USD("usd"),
    NOK("nok"),
    WHISKY("whisky"),
    VIRTUAL_CURRENCY("virtual-currency"),
    JPY("jpy"),
    HUF("huf"),
    NZD("nzd"),
    GOLD("gold"),
    CZK("czk"),
    SGD("sgd"),
    RON("ron"),
    GBP("gbp"),
    HRK("hrk"),
    EUR("eur");

    private String value;

    BeneficiaryAssetTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static BeneficiaryAssetTypeEnum fromValue(String input) {
      for (BeneficiaryAssetTypeEnum b : BeneficiaryAssetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("beneficiary_asset_type")
  private BeneficiaryAssetTypeEnum beneficiary_asset_type = null;

  @JsonProperty("fx_rate")
  private BigDecimal fx_rate = null;

  @JsonProperty("amount_of_sender_asset")
  private BigDecimal amount_of_sender_asset = null;

  public InlineResponse20052 sender_asset_type(SenderAssetTypeEnum sender_asset_type) {
    this.sender_asset_type = sender_asset_type;
    return this;
  }

   /**
   * The currency to be debited in the sending ledger
   * @return sender_asset_type
  **/
  public SenderAssetTypeEnum getSenderAssetType() {
    return sender_asset_type;
  }

  public void setSenderAssetType(SenderAssetTypeEnum sender_asset_type) {
    this.sender_asset_type = sender_asset_type;
  }

  public InlineResponse20052 amount_of_beneficiary_asset(BigDecimal amount_of_beneficiary_asset) {
    this.amount_of_beneficiary_asset = amount_of_beneficiary_asset;
    return this;
  }

   /**
   * The amount that would be credited on the receiving ledger in the target currency
   * @return amount_of_beneficiary_asset
  **/
  public BigDecimal getAmountOfBeneficiaryAsset() {
    return amount_of_beneficiary_asset;
  }

  public void setAmountOfBeneficiaryAsset(BigDecimal amount_of_beneficiary_asset) {
    this.amount_of_beneficiary_asset = amount_of_beneficiary_asset;
  }

  public InlineResponse20052 beneficiary_asset_type(BeneficiaryAssetTypeEnum beneficiary_asset_type) {
    this.beneficiary_asset_type = beneficiary_asset_type;
    return this;
  }

   /**
   * The currency to be credited in the receiving account
   * @return beneficiary_asset_type
  **/
  public BeneficiaryAssetTypeEnum getBeneficiaryAssetType() {
    return beneficiary_asset_type;
  }

  public void setBeneficiaryAssetType(BeneficiaryAssetTypeEnum beneficiary_asset_type) {
    this.beneficiary_asset_type = beneficiary_asset_type;
  }

  public InlineResponse20052 fx_rate(BigDecimal fx_rate) {
    this.fx_rate = fx_rate;
    return this;
  }

   /**
   * The quoted conversion rate
   * @return fx_rate
  **/
  public BigDecimal getFxRate() {
    return fx_rate;
  }

  public void setFxRate(BigDecimal fx_rate) {
    this.fx_rate = fx_rate;
  }

  public InlineResponse20052 amount_of_sender_asset(BigDecimal amount_of_sender_asset) {
    this.amount_of_sender_asset = amount_of_sender_asset;
    return this;
  }

   /**
   * The amount that would be debited from the sending ledger in the originating currency
   * @return amount_of_sender_asset
  **/
  public BigDecimal getAmountOfSenderAsset() {
    return amount_of_sender_asset;
  }

  public void setAmountOfSenderAsset(BigDecimal amount_of_sender_asset) {
    this.amount_of_sender_asset = amount_of_sender_asset;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20052 inline_response_200_52 = (InlineResponse20052) o;
    return Objects.equals(this.sender_asset_type, inline_response_200_52.sender_asset_type) &&
        Objects.equals(this.amount_of_beneficiary_asset, inline_response_200_52.amount_of_beneficiary_asset) &&
        Objects.equals(this.beneficiary_asset_type, inline_response_200_52.beneficiary_asset_type) &&
        Objects.equals(this.fx_rate, inline_response_200_52.fx_rate) &&
        Objects.equals(this.amount_of_sender_asset, inline_response_200_52.amount_of_sender_asset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sender_asset_type, amount_of_beneficiary_asset, beneficiary_asset_type, fx_rate, amount_of_sender_asset);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20052 {\n");
    
    sb.append("    sender_asset_type: ").append(toIndentedString(sender_asset_type)).append("\n");
    sb.append("    amount_of_beneficiary_asset: ").append(toIndentedString(amount_of_beneficiary_asset)).append("\n");
    sb.append("    beneficiary_asset_type: ").append(toIndentedString(beneficiary_asset_type)).append("\n");
    sb.append("    fx_rate: ").append(toIndentedString(fx_rate)).append("\n");
    sb.append("    amount_of_sender_asset: ").append(toIndentedString(amount_of_sender_asset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
