/*
 * Bankable API
 * Bankable API description
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.BNKTransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.transfer_funds.BNKTransfer.model.InlineResponse20040OriginalTransaction;
/**
 * InlineResponse20040Transactions
 */

public class InlineResponse20040Transactions {
  @JsonProperty("transaction_rrn")
  private String transaction_rrn = null;

  @JsonProperty("country")
  private String country = null;

  @JsonProperty("merchant_code")
  private String merchant_code = null;

  @JsonProperty("original_transaction")
  private InlineResponse20040OriginalTransaction original_transaction = null;

  @JsonProperty("merchant_city")
  private Object merchant_city = null;

  @JsonProperty("auth")
  private String auth = null;

  @JsonProperty("description")
  private Object description = null;

  @JsonProperty("type")
  private Integer type = null;

  @JsonProperty("mcc")
  private String mcc = null;

  @JsonProperty("proc_date_time")
  private Object proc_date_time = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("transaction_date_time")
  private Object transaction_date_time = null;

  @JsonProperty("merchant_terminal_id")
  private String merchant_terminal_id = null;

  @JsonProperty("amount")
  private String amount = null;

  @JsonProperty("fx_fee_amount")
  private Object fx_fee_amount = null;

  @JsonProperty("settlement_date")
  private Object settlement_date = null;

  /**
   * -1 for debit and +1 for credit.
   */
  public enum DebitOrCreditEnum {
    _1("-1"),
    _1_1("1");

    private String value;

    DebitOrCreditEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static DebitOrCreditEnum fromValue(String input) {
      for (DebitOrCreditEnum b : DebitOrCreditEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("debit_or_credit")
  private DebitOrCreditEnum debit_or_credit = null;

  @JsonProperty("billing_curr")
  private Object billing_curr = null;

  @JsonProperty("merchant_name")
  private String merchant_name = null;

  @JsonProperty("reject_description")
  private String reject_description = null;

  @JsonProperty("local_date")
  private Object local_date = null;

  @JsonProperty("merchant_street")
  private Object merchant_street = null;

  @JsonProperty("fee_amount")
  private Object fee_amount = null;

  @JsonProperty("amount_billed")
  private Object amount_billed = null;

  @JsonProperty("total_amount")
  private Object total_amount = null;

  @JsonProperty("merchant_state")
  private Object merchant_state = null;

  @JsonProperty("local_date_time")
  private Object local_date_time = null;

  @JsonProperty("merchant_country")
  private Object merchant_country = null;

  @JsonProperty("card_client_code")
  private String card_client_code = null;

  @JsonProperty("transaction_curr")
  private String transaction_curr = null;

  @JsonProperty("status")
  private Integer status = null;

  @JsonProperty("transaction_ref")
  private String transaction_ref = null;

  public InlineResponse20040Transactions transaction_rrn(String transaction_rrn) {
    this.transaction_rrn = transaction_rrn;
    return this;
  }

   /**
   * Reference Number
   * @return transaction_rrn
  **/
  public String getTransactionRrn() {
    return transaction_rrn;
  }

  public void setTransactionRrn(String transaction_rrn) {
    this.transaction_rrn = transaction_rrn;
  }

  public InlineResponse20040Transactions country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Two-character ISO alphabetic code. Examples: FR / GB. If left blank, the country of the client will be used.
   * @return country
  **/
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public InlineResponse20040Transactions merchant_code(String merchant_code) {
    this.merchant_code = merchant_code;
    return this;
  }

   /**
   * Merchant Code
   * @return merchant_code
  **/
  public String getMerchantCode() {
    return merchant_code;
  }

  public void setMerchantCode(String merchant_code) {
    this.merchant_code = merchant_code;
  }

  public InlineResponse20040Transactions original_transaction(InlineResponse20040OriginalTransaction original_transaction) {
    this.original_transaction = original_transaction;
    return this;
  }

   /**
   * Get original_transaction
   * @return original_transaction
  **/
  public InlineResponse20040OriginalTransaction getOriginalTransaction() {
    return original_transaction;
  }

  public void setOriginalTransaction(InlineResponse20040OriginalTransaction original_transaction) {
    this.original_transaction = original_transaction;
  }

  public InlineResponse20040Transactions merchant_city(Object merchant_city) {
    this.merchant_city = merchant_city;
    return this;
  }

   /**
   * Get merchant_city
   * @return merchant_city
  **/
  public Object getMerchantCity() {
    return merchant_city;
  }

  public void setMerchantCity(Object merchant_city) {
    this.merchant_city = merchant_city;
  }

  public InlineResponse20040Transactions auth(String auth) {
    this.auth = auth;
    return this;
  }

   /**
   * Flag if the transaction has been authorised before the settlement.
   * @return auth
  **/
  public String getAuth() {
    return auth;
  }

  public void setAuth(String auth) {
    this.auth = auth;
  }

  public InlineResponse20040Transactions description(Object description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  public Object getDescription() {
    return description;
  }

  public void setDescription(Object description) {
    this.description = description;
  }

  public InlineResponse20040Transactions type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the transaction: 0: Internal 1: Purchase 2: ATM Cash 3: Cashback 4: Offline Balance Collection 5: ATM Balance 6: Purchase Reversal 7: ATM Reversal 8: TopUp 9: Transfer 10: Adjustment 11: Refund 12: Reimbursment
   * @return type
  **/
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }

  public InlineResponse20040Transactions mcc(String mcc) {
    this.mcc = mcc;
    return this;
  }

   /**
   * Merchant Category Code
   * @return mcc
  **/
  public String getMcc() {
    return mcc;
  }

  public void setMcc(String mcc) {
    this.mcc = mcc;
  }

  public InlineResponse20040Transactions proc_date_time(Object proc_date_time) {
    this.proc_date_time = proc_date_time;
    return this;
  }

   /**
   * Get proc_date_time
   * @return proc_date_time
  **/
  public Object getProcDateTime() {
    return proc_date_time;
  }

  public void setProcDateTime(Object proc_date_time) {
    this.proc_date_time = proc_date_time;
  }

  public InlineResponse20040Transactions id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique id of the transaction. The transaction keeps this id all along its life. The other references can change depending on the status.
   * @return id
  **/
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InlineResponse20040Transactions transaction_date_time(Object transaction_date_time) {
    this.transaction_date_time = transaction_date_time;
    return this;
  }

   /**
   * Get transaction_date_time
   * @return transaction_date_time
  **/
  public Object getTransactionDateTime() {
    return transaction_date_time;
  }

  public void setTransactionDateTime(Object transaction_date_time) {
    this.transaction_date_time = transaction_date_time;
  }

  public InlineResponse20040Transactions merchant_terminal_id(String merchant_terminal_id) {
    this.merchant_terminal_id = merchant_terminal_id;
    return this;
  }

   /**
   * Merchant terminal code from ISO message
   * @return merchant_terminal_id
  **/
  public String getMerchantTerminalId() {
    return merchant_terminal_id;
  }

  public void setMerchantTerminalId(String merchant_terminal_id) {
    this.merchant_terminal_id = merchant_terminal_id;
  }

  public InlineResponse20040Transactions amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Maximum limit amount for the corporate. Decimal separator \&quot;.\&quot; (point). Thousand separator; none.
   * @return amount
  **/
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public InlineResponse20040Transactions fx_fee_amount(Object fx_fee_amount) {
    this.fx_fee_amount = fx_fee_amount;
    return this;
  }

   /**
   * Get fx_fee_amount
   * @return fx_fee_amount
  **/
  public Object getFxFeeAmount() {
    return fx_fee_amount;
  }

  public void setFxFeeAmount(Object fx_fee_amount) {
    this.fx_fee_amount = fx_fee_amount;
  }

  public InlineResponse20040Transactions settlement_date(Object settlement_date) {
    this.settlement_date = settlement_date;
    return this;
  }

   /**
   * Get settlement_date
   * @return settlement_date
  **/
  public Object getSettlementDate() {
    return settlement_date;
  }

  public void setSettlementDate(Object settlement_date) {
    this.settlement_date = settlement_date;
  }

  public InlineResponse20040Transactions debit_or_credit(DebitOrCreditEnum debit_or_credit) {
    this.debit_or_credit = debit_or_credit;
    return this;
  }

   /**
   * -1 for debit and +1 for credit.
   * @return debit_or_credit
  **/
  public DebitOrCreditEnum getDebitOrCredit() {
    return debit_or_credit;
  }

  public void setDebitOrCredit(DebitOrCreditEnum debit_or_credit) {
    this.debit_or_credit = debit_or_credit;
  }

  public InlineResponse20040Transactions billing_curr(Object billing_curr) {
    this.billing_curr = billing_curr;
    return this;
  }

   /**
   * Get billing_curr
   * @return billing_curr
  **/
  public Object getBillingCurr() {
    return billing_curr;
  }

  public void setBillingCurr(Object billing_curr) {
    this.billing_curr = billing_curr;
  }

  public InlineResponse20040Transactions merchant_name(String merchant_name) {
    this.merchant_name = merchant_name;
    return this;
  }

   /**
   * Merchant Name
   * @return merchant_name
  **/
  public String getMerchantName() {
    return merchant_name;
  }

  public void setMerchantName(String merchant_name) {
    this.merchant_name = merchant_name;
  }

  public InlineResponse20040Transactions reject_description(String reject_description) {
    this.reject_description = reject_description;
    return this;
  }

   /**
   * In case of declined transaction, reject description if available.
   * @return reject_description
  **/
  public String getRejectDescription() {
    return reject_description;
  }

  public void setRejectDescription(String reject_description) {
    this.reject_description = reject_description;
  }

  public InlineResponse20040Transactions local_date(Object local_date) {
    this.local_date = local_date;
    return this;
  }

   /**
   * Get local_date
   * @return local_date
  **/
  public Object getLocalDate() {
    return local_date;
  }

  public void setLocalDate(Object local_date) {
    this.local_date = local_date;
  }

  public InlineResponse20040Transactions merchant_street(Object merchant_street) {
    this.merchant_street = merchant_street;
    return this;
  }

   /**
   * Get merchant_street
   * @return merchant_street
  **/
  public Object getMerchantStreet() {
    return merchant_street;
  }

  public void setMerchantStreet(Object merchant_street) {
    this.merchant_street = merchant_street;
  }

  public InlineResponse20040Transactions fee_amount(Object fee_amount) {
    this.fee_amount = fee_amount;
    return this;
  }

   /**
   * Get fee_amount
   * @return fee_amount
  **/
  public Object getFeeAmount() {
    return fee_amount;
  }

  public void setFeeAmount(Object fee_amount) {
    this.fee_amount = fee_amount;
  }

  public InlineResponse20040Transactions amount_billed(Object amount_billed) {
    this.amount_billed = amount_billed;
    return this;
  }

   /**
   * Get amount_billed
   * @return amount_billed
  **/
  public Object getAmountBilled() {
    return amount_billed;
  }

  public void setAmountBilled(Object amount_billed) {
    this.amount_billed = amount_billed;
  }

  public InlineResponse20040Transactions total_amount(Object total_amount) {
    this.total_amount = total_amount;
    return this;
  }

   /**
   * Get total_amount
   * @return total_amount
  **/
  public Object getTotalAmount() {
    return total_amount;
  }

  public void setTotalAmount(Object total_amount) {
    this.total_amount = total_amount;
  }

  public InlineResponse20040Transactions merchant_state(Object merchant_state) {
    this.merchant_state = merchant_state;
    return this;
  }

   /**
   * Get merchant_state
   * @return merchant_state
  **/
  public Object getMerchantState() {
    return merchant_state;
  }

  public void setMerchantState(Object merchant_state) {
    this.merchant_state = merchant_state;
  }

  public InlineResponse20040Transactions local_date_time(Object local_date_time) {
    this.local_date_time = local_date_time;
    return this;
  }

   /**
   * Get local_date_time
   * @return local_date_time
  **/
  public Object getLocalDateTime() {
    return local_date_time;
  }

  public void setLocalDateTime(Object local_date_time) {
    this.local_date_time = local_date_time;
  }

  public InlineResponse20040Transactions merchant_country(Object merchant_country) {
    this.merchant_country = merchant_country;
    return this;
  }

   /**
   * Get merchant_country
   * @return merchant_country
  **/
  public Object getMerchantCountry() {
    return merchant_country;
  }

  public void setMerchantCountry(Object merchant_country) {
    this.merchant_country = merchant_country;
  }

  public InlineResponse20040Transactions card_client_code(String card_client_code) {
    this.card_client_code = card_client_code;
    return this;
  }

   /**
   * Reference id of the card
   * @return card_client_code
  **/
  public String getCardClientCode() {
    return card_client_code;
  }

  public void setCardClientCode(String card_client_code) {
    this.card_client_code = card_client_code;
  }

  public InlineResponse20040Transactions transaction_curr(String transaction_curr) {
    this.transaction_curr = transaction_curr;
    return this;
  }

   /**
   * Currency. ISO 3 characters code.
   * @return transaction_curr
  **/
  public String getTransactionCurr() {
    return transaction_curr;
  }

  public void setTransactionCurr(String transaction_curr) {
    this.transaction_curr = transaction_curr;
  }

  public InlineResponse20040Transactions status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the transaction: 0: Pending 1: Settled 2: Declined 3: Reversal 4: Approved 5: Release 6: Dispute 99: Deleted
   * @return status
  **/
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public InlineResponse20040Transactions transaction_ref(String transaction_ref) {
    this.transaction_ref = transaction_ref;
    return this;
  }

   /**
   * Reference of the transaction
   * @return transaction_ref
  **/
  public String getTransactionRef() {
    return transaction_ref;
  }

  public void setTransactionRef(String transaction_ref) {
    this.transaction_ref = transaction_ref;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20040Transactions inline_response_200_40_transactions = (InlineResponse20040Transactions) o;
    return Objects.equals(this.transaction_rrn, inline_response_200_40_transactions.transaction_rrn) &&
        Objects.equals(this.country, inline_response_200_40_transactions.country) &&
        Objects.equals(this.merchant_code, inline_response_200_40_transactions.merchant_code) &&
        Objects.equals(this.original_transaction, inline_response_200_40_transactions.original_transaction) &&
        Objects.equals(this.merchant_city, inline_response_200_40_transactions.merchant_city) &&
        Objects.equals(this.auth, inline_response_200_40_transactions.auth) &&
        Objects.equals(this.description, inline_response_200_40_transactions.description) &&
        Objects.equals(this.type, inline_response_200_40_transactions.type) &&
        Objects.equals(this.mcc, inline_response_200_40_transactions.mcc) &&
        Objects.equals(this.proc_date_time, inline_response_200_40_transactions.proc_date_time) &&
        Objects.equals(this.id, inline_response_200_40_transactions.id) &&
        Objects.equals(this.transaction_date_time, inline_response_200_40_transactions.transaction_date_time) &&
        Objects.equals(this.merchant_terminal_id, inline_response_200_40_transactions.merchant_terminal_id) &&
        Objects.equals(this.amount, inline_response_200_40_transactions.amount) &&
        Objects.equals(this.fx_fee_amount, inline_response_200_40_transactions.fx_fee_amount) &&
        Objects.equals(this.settlement_date, inline_response_200_40_transactions.settlement_date) &&
        Objects.equals(this.debit_or_credit, inline_response_200_40_transactions.debit_or_credit) &&
        Objects.equals(this.billing_curr, inline_response_200_40_transactions.billing_curr) &&
        Objects.equals(this.merchant_name, inline_response_200_40_transactions.merchant_name) &&
        Objects.equals(this.reject_description, inline_response_200_40_transactions.reject_description) &&
        Objects.equals(this.local_date, inline_response_200_40_transactions.local_date) &&
        Objects.equals(this.merchant_street, inline_response_200_40_transactions.merchant_street) &&
        Objects.equals(this.fee_amount, inline_response_200_40_transactions.fee_amount) &&
        Objects.equals(this.amount_billed, inline_response_200_40_transactions.amount_billed) &&
        Objects.equals(this.total_amount, inline_response_200_40_transactions.total_amount) &&
        Objects.equals(this.merchant_state, inline_response_200_40_transactions.merchant_state) &&
        Objects.equals(this.local_date_time, inline_response_200_40_transactions.local_date_time) &&
        Objects.equals(this.merchant_country, inline_response_200_40_transactions.merchant_country) &&
        Objects.equals(this.card_client_code, inline_response_200_40_transactions.card_client_code) &&
        Objects.equals(this.transaction_curr, inline_response_200_40_transactions.transaction_curr) &&
        Objects.equals(this.status, inline_response_200_40_transactions.status) &&
        Objects.equals(this.transaction_ref, inline_response_200_40_transactions.transaction_ref);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transaction_rrn, country, merchant_code, original_transaction, merchant_city, auth, description, type, mcc, proc_date_time, id, transaction_date_time, merchant_terminal_id, amount, fx_fee_amount, settlement_date, debit_or_credit, billing_curr, merchant_name, reject_description, local_date, merchant_street, fee_amount, amount_billed, total_amount, merchant_state, local_date_time, merchant_country, card_client_code, transaction_curr, status, transaction_ref);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20040Transactions {\n");
    
    sb.append("    transaction_rrn: ").append(toIndentedString(transaction_rrn)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    merchant_code: ").append(toIndentedString(merchant_code)).append("\n");
    sb.append("    original_transaction: ").append(toIndentedString(original_transaction)).append("\n");
    sb.append("    merchant_city: ").append(toIndentedString(merchant_city)).append("\n");
    sb.append("    auth: ").append(toIndentedString(auth)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    mcc: ").append(toIndentedString(mcc)).append("\n");
    sb.append("    proc_date_time: ").append(toIndentedString(proc_date_time)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    transaction_date_time: ").append(toIndentedString(transaction_date_time)).append("\n");
    sb.append("    merchant_terminal_id: ").append(toIndentedString(merchant_terminal_id)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    fx_fee_amount: ").append(toIndentedString(fx_fee_amount)).append("\n");
    sb.append("    settlement_date: ").append(toIndentedString(settlement_date)).append("\n");
    sb.append("    debit_or_credit: ").append(toIndentedString(debit_or_credit)).append("\n");
    sb.append("    billing_curr: ").append(toIndentedString(billing_curr)).append("\n");
    sb.append("    merchant_name: ").append(toIndentedString(merchant_name)).append("\n");
    sb.append("    reject_description: ").append(toIndentedString(reject_description)).append("\n");
    sb.append("    local_date: ").append(toIndentedString(local_date)).append("\n");
    sb.append("    merchant_street: ").append(toIndentedString(merchant_street)).append("\n");
    sb.append("    fee_amount: ").append(toIndentedString(fee_amount)).append("\n");
    sb.append("    amount_billed: ").append(toIndentedString(amount_billed)).append("\n");
    sb.append("    total_amount: ").append(toIndentedString(total_amount)).append("\n");
    sb.append("    merchant_state: ").append(toIndentedString(merchant_state)).append("\n");
    sb.append("    local_date_time: ").append(toIndentedString(local_date_time)).append("\n");
    sb.append("    merchant_country: ").append(toIndentedString(merchant_country)).append("\n");
    sb.append("    card_client_code: ").append(toIndentedString(card_client_code)).append("\n");
    sb.append("    transaction_curr: ").append(toIndentedString(transaction_curr)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    transaction_ref: ").append(toIndentedString(transaction_ref)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
