/*
 * Bankable API
 * Bankable API description
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.BNKTransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * VirtualaccountStatusblockBody
 */

public class VirtualaccountStatusblockBody {
  /**
   * Represents the type of block to instate. Possible values are: BLI (Inbound Payments are blocked), BLO (Outbound Payments are blocked), BLK (Inbound and Outbound payments are blocked). If empty, block_type defaults to blocked).
   */
  public enum BlockTypeEnum {
    BLI("BLI"),
    BLO("BLO"),
    BLK("BLK");

    private String value;

    BlockTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static BlockTypeEnum fromValue(String input) {
      for (BlockTypeEnum b : BlockTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("block_type")
  private BlockTypeEnum block_type = null;

  @JsonProperty("virtual_account_ref")
  private String virtual_account_ref = null;

  @JsonProperty("entity_id")
  private String entity_id = null;

  public VirtualaccountStatusblockBody block_type(BlockTypeEnum block_type) {
    this.block_type = block_type;
    return this;
  }

   /**
   * Represents the type of block to instate. Possible values are: BLI (Inbound Payments are blocked), BLO (Outbound Payments are blocked), BLK (Inbound and Outbound payments are blocked). If empty, block_type defaults to blocked).
   * @return block_type
  **/
  public BlockTypeEnum getBlockType() {
    return block_type;
  }

  public void setBlockType(BlockTypeEnum block_type) {
    this.block_type = block_type;
  }

  public VirtualaccountStatusblockBody virtual_account_ref(String virtual_account_ref) {
    this.virtual_account_ref = virtual_account_ref;
    return this;
  }

   /**
   * Reference ID of the virtual account
   * @return virtual_account_ref
  **/
  public String getVirtualAccountRef() {
    return virtual_account_ref;
  }

  public void setVirtualAccountRef(String virtual_account_ref) {
    this.virtual_account_ref = virtual_account_ref;
  }

  public VirtualaccountStatusblockBody entity_id(String entity_id) {
    this.entity_id = entity_id;
    return this;
  }

   /**
   * Identity of the client
   * @return entity_id
  **/
  public String getEntityId() {
    return entity_id;
  }

  public void setEntityId(String entity_id) {
    this.entity_id = entity_id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualaccountStatusblockBody virtualaccount_statusblock_body = (VirtualaccountStatusblockBody) o;
    return Objects.equals(this.block_type, virtualaccount_statusblock_body.block_type) &&
        Objects.equals(this.virtual_account_ref, virtualaccount_statusblock_body.virtual_account_ref) &&
        Objects.equals(this.entity_id, virtualaccount_statusblock_body.entity_id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(block_type, virtual_account_ref, entity_id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualaccountStatusblockBody {\n");
    
    sb.append("    block_type: ").append(toIndentedString(block_type)).append("\n");
    sb.append("    virtual_account_ref: ").append(toIndentedString(virtual_account_ref)).append("\n");
    sb.append("    entity_id: ").append(toIndentedString(entity_id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
