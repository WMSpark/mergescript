/*
 * Bankable API
 * Bankable API description
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.BNKTransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * CorporateKybupdateBody
 */

public class CorporateKybupdateBody {
  /**
   * The risk-level are; EDD Enhanced due diligence CDD Consumer due diligence SDD Simple due diligence - Mandatory if newly created Corporate
   */
  public enum RiskLevelEnum {
    EDD("EDD"),
    CDD("CDD"),
    SDD("SDD");

    private String value;

    RiskLevelEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static RiskLevelEnum fromValue(String input) {
      for (RiskLevelEnum b : RiskLevelEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("risk_level")
  private RiskLevelEnum risk_level = null;

  @JsonProperty("enable_outbound_payments")
  private String enable_outbound_payments = null;

  @JsonProperty("corporate_client_code")
  private String corporate_client_code = null;

  @JsonProperty("limit")
  private Object limit = null;

  @JsonProperty("currency")
  private Object currency = null;

  @JsonProperty("comment")
  private String comment = null;

  @JsonProperty("entity_id")
  private String entity_id = null;

  /**
   * KYB status of the corporate. Status can be &#x27;Passed&#x27;,&#x27;Rejected&#x27; or &#x27;Pending&#x27;.
   */
  public enum StatusEnum {
    PASSED("Passed"),
    REJECTED("Rejected"),
    PENDING("Pending");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  public CorporateKybupdateBody risk_level(RiskLevelEnum risk_level) {
    this.risk_level = risk_level;
    return this;
  }

   /**
   * The risk-level are; EDD Enhanced due diligence CDD Consumer due diligence SDD Simple due diligence - Mandatory if newly created Corporate
   * @return risk_level
  **/
  public RiskLevelEnum getRiskLevel() {
    return risk_level;
  }

  public void setRiskLevel(RiskLevelEnum risk_level) {
    this.risk_level = risk_level;
  }

  public CorporateKybupdateBody enable_outbound_payments(String enable_outbound_payments) {
    this.enable_outbound_payments = enable_outbound_payments;
    return this;
  }

   /**
   * true â Make and receive false â Receive only
   * @return enable_outbound_payments
  **/
  public String getEnableOutboundPayments() {
    return enable_outbound_payments;
  }

  public void setEnableOutboundPayments(String enable_outbound_payments) {
    this.enable_outbound_payments = enable_outbound_payments;
  }

  public CorporateKybupdateBody corporate_client_code(String corporate_client_code) {
    this.corporate_client_code = corporate_client_code;
    return this;
  }

   /**
   * The corporate client code (unique identifier) of the corporate.
   * @return corporate_client_code
  **/
  public String getCorporateClientCode() {
    return corporate_client_code;
  }

  public void setCorporateClientCode(String corporate_client_code) {
    this.corporate_client_code = corporate_client_code;
  }

  public CorporateKybupdateBody limit(Object limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  public Object getLimit() {
    return limit;
  }

  public void setLimit(Object limit) {
    this.limit = limit;
  }

  public CorporateKybupdateBody currency(Object currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  public Object getCurrency() {
    return currency;
  }

  public void setCurrency(Object currency) {
    this.currency = currency;
  }

  public CorporateKybupdateBody comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * KYB comments description
   * @return comment
  **/
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public CorporateKybupdateBody entity_id(String entity_id) {
    this.entity_id = entity_id;
    return this;
  }

   /**
   * Identity of the client
   * @return entity_id
  **/
  public String getEntityId() {
    return entity_id;
  }

  public void setEntityId(String entity_id) {
    this.entity_id = entity_id;
  }

  public CorporateKybupdateBody status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * KYB status of the corporate. Status can be &#x27;Passed&#x27;,&#x27;Rejected&#x27; or &#x27;Pending&#x27;.
   * @return status
  **/
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CorporateKybupdateBody corporate_kybupdate_body = (CorporateKybupdateBody) o;
    return Objects.equals(this.risk_level, corporate_kybupdate_body.risk_level) &&
        Objects.equals(this.enable_outbound_payments, corporate_kybupdate_body.enable_outbound_payments) &&
        Objects.equals(this.corporate_client_code, corporate_kybupdate_body.corporate_client_code) &&
        Objects.equals(this.limit, corporate_kybupdate_body.limit) &&
        Objects.equals(this.currency, corporate_kybupdate_body.currency) &&
        Objects.equals(this.comment, corporate_kybupdate_body.comment) &&
        Objects.equals(this.entity_id, corporate_kybupdate_body.entity_id) &&
        Objects.equals(this.status, corporate_kybupdate_body.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(risk_level, enable_outbound_payments, corporate_client_code, limit, currency, comment, entity_id, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CorporateKybupdateBody {\n");
    
    sb.append("    risk_level: ").append(toIndentedString(risk_level)).append("\n");
    sb.append("    enable_outbound_payments: ").append(toIndentedString(enable_outbound_payments)).append("\n");
    sb.append("    corporate_client_code: ").append(toIndentedString(corporate_client_code)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    entity_id: ").append(toIndentedString(entity_id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
