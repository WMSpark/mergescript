/*
 * Bankable API
 * Bankable API description
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.BNKTransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * InlineResponse2003PendingStatementTransactionDigitalWallet
 */

public class InlineResponse2003PendingStatementTransactionDigitalWallet {
  /**
   * The type of device into which the digital wallet token will be provisioned. Allowable values: MOBILE_PHONE, WATCH, TABLET
   */
  public enum DeviceTypeEnum {
    MOBILE_PHONE("MOBILE_PHONE"),
    WATCH("WATCH"),
    TABLET("TABLET");

    private String value;

    DeviceTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static DeviceTypeEnum fromValue(String input) {
      for (DeviceTypeEnum b : DeviceTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("deviceType")
  private DeviceTypeEnum deviceType = null;

  @JsonProperty("digitalWalletToken")
  private String digitalWalletToken = null;

  @JsonProperty("tokenRequestorName")
  private String tokenRequestorName = null;

  @JsonProperty("deviceName")
  private String deviceName = null;

  public InlineResponse2003PendingStatementTransactionDigitalWallet deviceType(DeviceTypeEnum deviceType) {
    this.deviceType = deviceType;
    return this;
  }

   /**
   * The type of device into which the digital wallet token will be provisioned. Allowable values: MOBILE_PHONE, WATCH, TABLET
   * @return deviceType
  **/
  public DeviceTypeEnum getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(DeviceTypeEnum deviceType) {
    this.deviceType = deviceType;
  }

  public InlineResponse2003PendingStatementTransactionDigitalWallet digitalWalletToken(String digitalWalletToken) {
    this.digitalWalletToken = digitalWalletToken;
    return this;
  }

   /**
   * Unique ID of the token
   * @return digitalWalletToken
  **/
  public String getDigitalWalletToken() {
    return digitalWalletToken;
  }

  public void setDigitalWalletToken(String digitalWalletToken) {
    this.digitalWalletToken = digitalWalletToken;
  }

  public InlineResponse2003PendingStatementTransactionDigitalWallet tokenRequestorName(String tokenRequestorName) {
    this.tokenRequestorName = tokenRequestorName;
    return this;
  }

   /**
   * Name of the token provider.
   * @return tokenRequestorName
  **/
  public String getTokenRequestorName() {
    return tokenRequestorName;
  }

  public void setTokenRequestorName(String tokenRequestorName) {
    this.tokenRequestorName = tokenRequestorName;
  }

  public InlineResponse2003PendingStatementTransactionDigitalWallet deviceName(String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

   /**
   * Name of the device the token is linked to.
   * @return deviceName
  **/
  public String getDeviceName() {
    return deviceName;
  }

  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2003PendingStatementTransactionDigitalWallet inline_response_200_3_pendingStatementTransaction_digitalWallet = (InlineResponse2003PendingStatementTransactionDigitalWallet) o;
    return Objects.equals(this.deviceType, inline_response_200_3_pendingStatementTransaction_digitalWallet.deviceType) &&
        Objects.equals(this.digitalWalletToken, inline_response_200_3_pendingStatementTransaction_digitalWallet.digitalWalletToken) &&
        Objects.equals(this.tokenRequestorName, inline_response_200_3_pendingStatementTransaction_digitalWallet.tokenRequestorName) &&
        Objects.equals(this.deviceName, inline_response_200_3_pendingStatementTransaction_digitalWallet.deviceName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceType, digitalWalletToken, tokenRequestorName, deviceName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2003PendingStatementTransactionDigitalWallet {\n");
    
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    digitalWalletToken: ").append(toIndentedString(digitalWalletToken)).append("\n");
    sb.append("    tokenRequestorName: ").append(toIndentedString(tokenRequestorName)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
