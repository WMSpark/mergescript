/*
 * Railsbank customer API
 * Public API for Railsbank customers
 *
 * OpenAPI spec version: api
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.RBSwagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.LocalDate;
/**
 * TransactionsBulkBody
 */

public class TransactionsBulkBody {
  @JsonProperty("reference")
  private String reference = null;

  /**
   * Gets or Sets who_pays_charges
   */
  public enum WhoPaysChargesEnum {
    RECEIVER_PAYS("receiver-pays"),
    SENDER_PAYS("sender-pays"),
    SHARED("shared");

    private String value;

    WhoPaysChargesEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static WhoPaysChargesEnum fromValue(String input) {
      for (WhoPaysChargesEnum b : WhoPaysChargesEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("who_pays_charges")
  private WhoPaysChargesEnum who_pays_charges = null;

  @JsonProperty("beneficiary_account_id")
  private String beneficiary_account_id = null;

  @JsonProperty("beneficiary_id")
  private String beneficiary_id = null;

  @JsonProperty("amount")
  private BigDecimal amount = null;

  /**
   * Gets or Sets payment_type
   */
  public enum PaymentTypeEnum {
    GLOBAL_SWIFT("payment-type-Global-SWIFT"),
    EU_SEPA_INSTANT("payment-type-EU-SEPA-Instant"),
    UK_BACS("payment-type-UK-BACS"),
    US_ACH("payment-type-US-ACH"),
    EU_SEPA_TARGET2("payment-type-EU-SEPA-Target2"),
    UK_CHAPS("payment-type-UK-Chaps"),
    CARD("payment-type-card"),
    EU_SEPA_STEP2("payment-type-EU-SEPA-Step2"),
    SG_FAST("payment-type-SG-FAST"),
    VIRTUAL_DEBIT_CARD_DEBIT("payment-type-virtual-debit-card-debit"),
    INTER_LEDGER("payment-type-inter-ledger"),
    UK_FASTERPAYMENTS("payment-type-UK-FasterPayments"),
    FX("payment-type-fx"),
    US_WIRES("payment-type-US-Wires");

    private String value;

    PaymentTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static PaymentTypeEnum fromValue(String input) {
      for (PaymentTypeEnum b : PaymentTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("payment_type")
  private PaymentTypeEnum payment_type = null;

  @JsonProperty("transaction_meta")
  private Object transaction_meta = null;

  @JsonProperty("ledger_from_id")
  private String ledger_from_id = null;

  @JsonProperty("ledger_id")
  private String ledger_id = null;

  /**
   * Gets or Sets cut_off_time_implementation
   */
  public enum CutOffTimeImplementationEnum {
    STRICT("strict"),
    LOOSE("loose");

    private String value;

    CutOffTimeImplementationEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static CutOffTimeImplementationEnum fromValue(String input) {
      for (CutOffTimeImplementationEnum b : CutOffTimeImplementationEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("cut_off_time_implementation")
  private CutOffTimeImplementationEnum cut_off_time_implementation = null;

  @JsonProperty("payment_credit_date")
  private LocalDate payment_credit_date = null;

  public TransactionsBulkBody reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public TransactionsBulkBody who_pays_charges(WhoPaysChargesEnum who_pays_charges) {
    this.who_pays_charges = who_pays_charges;
    return this;
  }

   /**
   * Get who_pays_charges
   * @return who_pays_charges
  **/
  public WhoPaysChargesEnum getWhoPaysCharges() {
    return who_pays_charges;
  }

  public void setWhoPaysCharges(WhoPaysChargesEnum who_pays_charges) {
    this.who_pays_charges = who_pays_charges;
  }

  public TransactionsBulkBody beneficiary_account_id(String beneficiary_account_id) {
    this.beneficiary_account_id = beneficiary_account_id;
    return this;
  }

   /**
   * The Railsbank Beneficiary account ID to be credited. This needs to be set only when sending to an account that isn&#x27;t the beneficiary&#x27;s default
   * @return beneficiary_account_id
  **/
  public String getBeneficiaryAccountId() {
    return beneficiary_account_id;
  }

  public void setBeneficiaryAccountId(String beneficiary_account_id) {
    this.beneficiary_account_id = beneficiary_account_id;
  }

  public TransactionsBulkBody beneficiary_id(String beneficiary_id) {
    this.beneficiary_id = beneficiary_id;
    return this;
  }

   /**
   * The receiving Railsbank Beneficiary ID
   * @return beneficiary_id
  **/
  public String getBeneficiaryId() {
    return beneficiary_id;
  }

  public void setBeneficiaryId(String beneficiary_id) {
    this.beneficiary_id = beneficiary_id;
  }

  public TransactionsBulkBody amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public TransactionsBulkBody payment_type(PaymentTypeEnum payment_type) {
    this.payment_type = payment_type;
    return this;
  }

   /**
   * Get payment_type
   * @return payment_type
  **/
  public PaymentTypeEnum getPaymentType() {
    return payment_type;
  }

  public void setPaymentType(PaymentTypeEnum payment_type) {
    this.payment_type = payment_type;
  }

  public TransactionsBulkBody transaction_meta(Object transaction_meta) {
    this.transaction_meta = transaction_meta;
    return this;
  }

   /**
   * An object allowing custom fields that can be created and stored against the transaction
   * @return transaction_meta
  **/
  public Object getTransactionMeta() {
    return transaction_meta;
  }

  public void setTransactionMeta(Object transaction_meta) {
    this.transaction_meta = transaction_meta;
  }

  public TransactionsBulkBody ledger_from_id(String ledger_from_id) {
    this.ledger_from_id = ledger_from_id;
    return this;
  }

   /**
   * The Railsbank Ledger ID to be debited
   * @return ledger_from_id
  **/
  public String getLedgerFromId() {
    return ledger_from_id;
  }

  public void setLedgerFromId(String ledger_from_id) {
    this.ledger_from_id = ledger_from_id;
  }

  public TransactionsBulkBody ledger_id(String ledger_id) {
    this.ledger_id = ledger_id;
    return this;
  }

   /**
   * Get ledger_id
   * @return ledger_id
  **/
  public String getLedgerId() {
    return ledger_id;
  }

  public void setLedgerId(String ledger_id) {
    this.ledger_id = ledger_id;
  }

  public TransactionsBulkBody cut_off_time_implementation(CutOffTimeImplementationEnum cut_off_time_implementation) {
    this.cut_off_time_implementation = cut_off_time_implementation;
    return this;
  }

   /**
   * Get cut_off_time_implementation
   * @return cut_off_time_implementation
  **/
  public CutOffTimeImplementationEnum getCutOffTimeImplementation() {
    return cut_off_time_implementation;
  }

  public void setCutOffTimeImplementation(CutOffTimeImplementationEnum cut_off_time_implementation) {
    this.cut_off_time_implementation = cut_off_time_implementation;
  }

  public TransactionsBulkBody payment_credit_date(LocalDate payment_credit_date) {
    this.payment_credit_date = payment_credit_date;
    return this;
  }

   /**
   * Get payment_credit_date
   * @return payment_credit_date
  **/
  public LocalDate getPaymentCreditDate() {
    return payment_credit_date;
  }

  public void setPaymentCreditDate(LocalDate payment_credit_date) {
    this.payment_credit_date = payment_credit_date;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionsBulkBody transactions_bulk_body = (TransactionsBulkBody) o;
    return Objects.equals(this.reference, transactions_bulk_body.reference) &&
        Objects.equals(this.who_pays_charges, transactions_bulk_body.who_pays_charges) &&
        Objects.equals(this.beneficiary_account_id, transactions_bulk_body.beneficiary_account_id) &&
        Objects.equals(this.beneficiary_id, transactions_bulk_body.beneficiary_id) &&
        Objects.equals(this.amount, transactions_bulk_body.amount) &&
        Objects.equals(this.payment_type, transactions_bulk_body.payment_type) &&
        Objects.equals(this.transaction_meta, transactions_bulk_body.transaction_meta) &&
        Objects.equals(this.ledger_from_id, transactions_bulk_body.ledger_from_id) &&
        Objects.equals(this.ledger_id, transactions_bulk_body.ledger_id) &&
        Objects.equals(this.cut_off_time_implementation, transactions_bulk_body.cut_off_time_implementation) &&
        Objects.equals(this.payment_credit_date, transactions_bulk_body.payment_credit_date);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reference, who_pays_charges, beneficiary_account_id, beneficiary_id, amount, payment_type, transaction_meta, ledger_from_id, ledger_id, cut_off_time_implementation, payment_credit_date);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionsBulkBody {\n");
    
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    who_pays_charges: ").append(toIndentedString(who_pays_charges)).append("\n");
    sb.append("    beneficiary_account_id: ").append(toIndentedString(beneficiary_account_id)).append("\n");
    sb.append("    beneficiary_id: ").append(toIndentedString(beneficiary_id)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    payment_type: ").append(toIndentedString(payment_type)).append("\n");
    sb.append("    transaction_meta: ").append(toIndentedString(transaction_meta)).append("\n");
    sb.append("    ledger_from_id: ").append(toIndentedString(ledger_from_id)).append("\n");
    sb.append("    ledger_id: ").append(toIndentedString(ledger_id)).append("\n");
    sb.append("    cut_off_time_implementation: ").append(toIndentedString(cut_off_time_implementation)).append("\n");
    sb.append("    payment_credit_date: ").append(toIndentedString(payment_credit_date)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
