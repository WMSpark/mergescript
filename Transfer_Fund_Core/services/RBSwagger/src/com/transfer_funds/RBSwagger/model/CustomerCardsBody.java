/*
 * Railsbank customer API
 * Public API for Railsbank customers
 *
 * OpenAPI spec version: api
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.RBSwagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.transfer_funds.RBSwagger.model.V1customercardsAdditionalLedgers;
import com.transfer_funds.RBSwagger.model.V1customercardsCardDeliveryAddress;
import java.util.ArrayList;
import java.util.List;
/**
 * CustomerCardsBody
 */

public class CustomerCardsBody {
  @JsonProperty("card_design")
  private String card_design = null;

  @JsonProperty("additional_ledgers")
  private List<V1customercardsAdditionalLedgers> additional_ledgers = null;

  @JsonProperty("telephone")
  private String telephone = null;

  @JsonProperty("card_rules")
  private List<String> card_rules = null;

  /**
   * The type of card.
   */
  public enum CardTypeEnum {
    VIRTUAL("virtual"),
    PHYSICAL("physical");

    private String value;

    CardTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static CardTypeEnum fromValue(String input) {
      for (CardTypeEnum b : CardTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("card_type")
  private CardTypeEnum card_type = null;

  /**
   * The shipping method used to deliver the card, if delivery address is outside the UK, it must be international-mail
   */
  public enum CardDeliveryMethodEnum {
    STANDARD_FIRST_CLASS("standard-first-class"),
    INTERNATIONAL_MAIL("international-mail"),
    DHL("dhl"),
    COURIER("courier");

    private String value;

    CardDeliveryMethodEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static CardDeliveryMethodEnum fromValue(String input) {
      for (CardDeliveryMethodEnum b : CardDeliveryMethodEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("card_delivery_method")
  private CardDeliveryMethodEnum card_delivery_method = null;

  /**
   * The carrier type to be used for the card when delivered.
   */
  public enum CardCarrierTypeEnum {
    RENEWAL("renewal"),
    REPLACEMENT("replacement"),
    STANDARD("standard");

    private String value;

    CardCarrierTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static CardCarrierTypeEnum fromValue(String input) {
      for (CardCarrierTypeEnum b : CardCarrierTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("card_carrier_type")
  private CardCarrierTypeEnum card_carrier_type = null;

  @JsonProperty("card_delivery_address")
  private V1customercardsCardDeliveryAddress card_delivery_address = null;

  @JsonProperty("card_programme")
  private String card_programme = null;

  @JsonProperty("qr_code_content")
  private String qr_code_content = null;

  @JsonProperty("card_delivery_name")
  private String card_delivery_name = null;

  @JsonProperty("ledger_id")
  private String ledger_id = null;

  @JsonProperty("name_on_card")
  private String name_on_card = null;

  public CustomerCardsBody card_design(String card_design) {
    this.card_design = card_design;
    return this;
  }

   /**
   * The card design to be used for the card when issued, from the list of Railsbank configured card designs.
   * @return card_design
  **/
  public String getCardDesign() {
    return card_design;
  }

  public void setCardDesign(String card_design) {
    this.card_design = card_design;
  }

  public CustomerCardsBody additional_ledgers(List<V1customercardsAdditionalLedgers> additional_ledgers) {
    this.additional_ledgers = additional_ledgers;
    return this;
  }

  public CustomerCardsBody addAdditionalLedgersItem(V1customercardsAdditionalLedgers additional_ledgersItem) {
    if (this.additional_ledgers == null) {
      this.additional_ledgers = new ArrayList<>();
    }
    this.additional_ledgers.add(additional_ledgersItem);
    return this;
  }

   /**
   * Get additional_ledgers
   * @return additional_ledgers
  **/
  public List<V1customercardsAdditionalLedgers> getAdditionalLedgers() {
    return additional_ledgers;
  }

  public void setAdditionalLedgers(List<V1customercardsAdditionalLedgers> additional_ledgers) {
    this.additional_ledgers = additional_ledgers;
  }

  public CustomerCardsBody telephone(String telephone) {
    this.telephone = telephone;
    return this;
  }

   /**
   * Get telephone
   * @return telephone
  **/
  public String getTelephone() {
    return telephone;
  }

  public void setTelephone(String telephone) {
    this.telephone = telephone;
  }

  public CustomerCardsBody card_rules(List<String> card_rules) {
    this.card_rules = card_rules;
    return this;
  }

  public CustomerCardsBody addCardRulesItem(String card_rulesItem) {
    if (this.card_rules == null) {
      this.card_rules = new ArrayList<>();
    }
    this.card_rules.add(card_rulesItem);
    return this;
  }

   /**
   * Get card_rules
   * @return card_rules
  **/
  public List<String> getCardRules() {
    return card_rules;
  }

  public void setCardRules(List<String> card_rules) {
    this.card_rules = card_rules;
  }

  public CustomerCardsBody card_type(CardTypeEnum card_type) {
    this.card_type = card_type;
    return this;
  }

   /**
   * The type of card.
   * @return card_type
  **/
  public CardTypeEnum getCardType() {
    return card_type;
  }

  public void setCardType(CardTypeEnum card_type) {
    this.card_type = card_type;
  }

  public CustomerCardsBody card_delivery_method(CardDeliveryMethodEnum card_delivery_method) {
    this.card_delivery_method = card_delivery_method;
    return this;
  }

   /**
   * The shipping method used to deliver the card, if delivery address is outside the UK, it must be international-mail
   * @return card_delivery_method
  **/
  public CardDeliveryMethodEnum getCardDeliveryMethod() {
    return card_delivery_method;
  }

  public void setCardDeliveryMethod(CardDeliveryMethodEnum card_delivery_method) {
    this.card_delivery_method = card_delivery_method;
  }

  public CustomerCardsBody card_carrier_type(CardCarrierTypeEnum card_carrier_type) {
    this.card_carrier_type = card_carrier_type;
    return this;
  }

   /**
   * The carrier type to be used for the card when delivered.
   * @return card_carrier_type
  **/
  public CardCarrierTypeEnum getCardCarrierType() {
    return card_carrier_type;
  }

  public void setCardCarrierType(CardCarrierTypeEnum card_carrier_type) {
    this.card_carrier_type = card_carrier_type;
  }

  public CustomerCardsBody card_delivery_address(V1customercardsCardDeliveryAddress card_delivery_address) {
    this.card_delivery_address = card_delivery_address;
    return this;
  }

   /**
   * Get card_delivery_address
   * @return card_delivery_address
  **/
  public V1customercardsCardDeliveryAddress getCardDeliveryAddress() {
    return card_delivery_address;
  }

  public void setCardDeliveryAddress(V1customercardsCardDeliveryAddress card_delivery_address) {
    this.card_delivery_address = card_delivery_address;
  }

  public CustomerCardsBody card_programme(String card_programme) {
    this.card_programme = card_programme;
    return this;
  }

   /**
   * The card programme to issue the card against, from Railsbank configuration.
   * @return card_programme
  **/
  public String getCardProgramme() {
    return card_programme;
  }

  public void setCardProgramme(String card_programme) {
    this.card_programme = card_programme;
  }

  public CustomerCardsBody qr_code_content(String qr_code_content) {
    this.qr_code_content = qr_code_content;
    return this;
  }

   /**
   * The string to be encoded in the auto-generated QR code on a physical card. For example, a URL, SMS message, in app action, an event etc.
   * @return qr_code_content
  **/
  public String getQrCodeContent() {
    return qr_code_content;
  }

  public void setQrCodeContent(String qr_code_content) {
    this.qr_code_content = qr_code_content;
  }

  public CustomerCardsBody card_delivery_name(String card_delivery_name) {
    this.card_delivery_name = card_delivery_name;
    return this;
  }

   /**
   * The name which the delivery will be addressed to (can differ from cardholder name).
   * @return card_delivery_name
  **/
  public String getCardDeliveryName() {
    return card_delivery_name;
  }

  public void setCardDeliveryName(String card_delivery_name) {
    this.card_delivery_name = card_delivery_name;
  }

  public CustomerCardsBody ledger_id(String ledger_id) {
    this.ledger_id = ledger_id;
    return this;
  }

   /**
   * Railsbank Ledger ID which the card was issued against.
   * @return ledger_id
  **/
  public String getLedgerId() {
    return ledger_id;
  }

  public void setLedgerId(String ledger_id) {
    this.ledger_id = ledger_id;
  }

  public CustomerCardsBody name_on_card(String name_on_card) {
    this.name_on_card = name_on_card;
    return this;
  }

   /**
   * The cardholder&#x27;s name to be printed or embossed on the card. It accepts ISO basic Latin alphabet and can be up to 21 characters long including spaces.
   * @return name_on_card
  **/
  public String getNameOnCard() {
    return name_on_card;
  }

  public void setNameOnCard(String name_on_card) {
    this.name_on_card = name_on_card;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerCardsBody customer_cards_body = (CustomerCardsBody) o;
    return Objects.equals(this.card_design, customer_cards_body.card_design) &&
        Objects.equals(this.additional_ledgers, customer_cards_body.additional_ledgers) &&
        Objects.equals(this.telephone, customer_cards_body.telephone) &&
        Objects.equals(this.card_rules, customer_cards_body.card_rules) &&
        Objects.equals(this.card_type, customer_cards_body.card_type) &&
        Objects.equals(this.card_delivery_method, customer_cards_body.card_delivery_method) &&
        Objects.equals(this.card_carrier_type, customer_cards_body.card_carrier_type) &&
        Objects.equals(this.card_delivery_address, customer_cards_body.card_delivery_address) &&
        Objects.equals(this.card_programme, customer_cards_body.card_programme) &&
        Objects.equals(this.qr_code_content, customer_cards_body.qr_code_content) &&
        Objects.equals(this.card_delivery_name, customer_cards_body.card_delivery_name) &&
        Objects.equals(this.ledger_id, customer_cards_body.ledger_id) &&
        Objects.equals(this.name_on_card, customer_cards_body.name_on_card);
  }

  @Override
  public int hashCode() {
    return Objects.hash(card_design, additional_ledgers, telephone, card_rules, card_type, card_delivery_method, card_carrier_type, card_delivery_address, card_programme, qr_code_content, card_delivery_name, ledger_id, name_on_card);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerCardsBody {\n");
    
    sb.append("    card_design: ").append(toIndentedString(card_design)).append("\n");
    sb.append("    additional_ledgers: ").append(toIndentedString(additional_ledgers)).append("\n");
    sb.append("    telephone: ").append(toIndentedString(telephone)).append("\n");
    sb.append("    card_rules: ").append(toIndentedString(card_rules)).append("\n");
    sb.append("    card_type: ").append(toIndentedString(card_type)).append("\n");
    sb.append("    card_delivery_method: ").append(toIndentedString(card_delivery_method)).append("\n");
    sb.append("    card_carrier_type: ").append(toIndentedString(card_carrier_type)).append("\n");
    sb.append("    card_delivery_address: ").append(toIndentedString(card_delivery_address)).append("\n");
    sb.append("    card_programme: ").append(toIndentedString(card_programme)).append("\n");
    sb.append("    qr_code_content: ").append(toIndentedString(qr_code_content)).append("\n");
    sb.append("    card_delivery_name: ").append(toIndentedString(card_delivery_name)).append("\n");
    sb.append("    ledger_id: ").append(toIndentedString(ledger_id)).append("\n");
    sb.append("    name_on_card: ").append(toIndentedString(name_on_card)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
