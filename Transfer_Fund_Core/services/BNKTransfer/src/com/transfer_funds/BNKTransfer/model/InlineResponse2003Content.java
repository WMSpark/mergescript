/*
 * Bankable API
 * Bankable API description
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.BNKTransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.transfer_funds.BNKTransfer.model.InlineResponse2003PendingStatementTransaction;
import com.transfer_funds.BNKTransfer.model.InlineResponse2003SettledStatementTransaction;
import com.transfer_funds.BNKTransfer.model.InlineResponse2003Summary;
/**
 * InlineResponse2003Content
 */

public class InlineResponse2003Content {
  @JsonProperty("pendingStatementTransaction")
  private InlineResponse2003PendingStatementTransaction pendingStatementTransaction = null;

  @JsonProperty("summary")
  private InlineResponse2003Summary summary = null;

  @JsonProperty("settledStatementTransaction")
  private InlineResponse2003SettledStatementTransaction settledStatementTransaction = null;

  public InlineResponse2003Content pendingStatementTransaction(InlineResponse2003PendingStatementTransaction pendingStatementTransaction) {
    this.pendingStatementTransaction = pendingStatementTransaction;
    return this;
  }

   /**
   * Get pendingStatementTransaction
   * @return pendingStatementTransaction
  **/
  public InlineResponse2003PendingStatementTransaction getPendingStatementTransaction() {
    return pendingStatementTransaction;
  }

  public void setPendingStatementTransaction(InlineResponse2003PendingStatementTransaction pendingStatementTransaction) {
    this.pendingStatementTransaction = pendingStatementTransaction;
  }

  public InlineResponse2003Content summary(InlineResponse2003Summary summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  public InlineResponse2003Summary getSummary() {
    return summary;
  }

  public void setSummary(InlineResponse2003Summary summary) {
    this.summary = summary;
  }

  public InlineResponse2003Content settledStatementTransaction(InlineResponse2003SettledStatementTransaction settledStatementTransaction) {
    this.settledStatementTransaction = settledStatementTransaction;
    return this;
  }

   /**
   * Get settledStatementTransaction
   * @return settledStatementTransaction
  **/
  public InlineResponse2003SettledStatementTransaction getSettledStatementTransaction() {
    return settledStatementTransaction;
  }

  public void setSettledStatementTransaction(InlineResponse2003SettledStatementTransaction settledStatementTransaction) {
    this.settledStatementTransaction = settledStatementTransaction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2003Content inline_response_200_3_content = (InlineResponse2003Content) o;
    return Objects.equals(this.pendingStatementTransaction, inline_response_200_3_content.pendingStatementTransaction) &&
        Objects.equals(this.summary, inline_response_200_3_content.summary) &&
        Objects.equals(this.settledStatementTransaction, inline_response_200_3_content.settledStatementTransaction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pendingStatementTransaction, summary, settledStatementTransaction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2003Content {\n");
    
    sb.append("    pendingStatementTransaction: ").append(toIndentedString(pendingStatementTransaction)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    settledStatementTransaction: ").append(toIndentedString(settledStatementTransaction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
