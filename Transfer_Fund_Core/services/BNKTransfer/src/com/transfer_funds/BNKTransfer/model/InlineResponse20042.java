/*
 * Bankable API
 * Bankable API description
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.BNKTransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.transfer_funds.BNKTransfer.model.FxcardtransparencyinfoFeeDetails;
import com.transfer_funds.BNKTransfer.model.InlineResponse20042DigitalWalletTokens;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse20042
 */

public class InlineResponse20042 {
  @JsonProperty("request")
  private String request = null;

  @JsonProperty("card_sequence")
  private String card_sequence = null;

  @JsonProperty("fee_details")
  private List<FxcardtransparencyinfoFeeDetails> fee_details = null;

  @JsonProperty("deny_mcc")
  private String deny_mcc = null;

  @JsonProperty("card_line_4")
  private String card_line_4 = null;

  @JsonProperty("product_id")
  private String product_id = null;

  @JsonProperty("deny_service")
  private String deny_service = null;

  @JsonProperty("card_visible_number")
  private String card_visible_number = null;

  @JsonProperty("expiry_renew")
  private Integer expiry_renew = null;

  @JsonProperty("profile")
  private String profile = null;

  @JsonProperty("market_id")
  private String market_id = null;

  @JsonProperty("card_client_code_prev")
  private String card_client_code_prev = null;

  @JsonProperty("wallet_client_code")
  private String wallet_client_code = null;

  @JsonProperty("entity_id")
  private String entity_id = null;

  @JsonProperty("card_type")
  private String card_type = null;

  @JsonProperty("card_exp_date")
  private String card_exp_date = null;

  /**
   * Status of the card.
   */
  public enum CardStatusEnum {
    ACT("ACT"),
    BLO("BLO"),
    LOS("LOS"),
    NEW("NEW"),
    STO("STO"),
    DAM("DAM"),
    EXP("EXP"),
    CAN("CAN"),
    REA("REA"),
    PRE("PRE"),
    CBL("CBL"),
    CMD("CMD"),
    ABO("ABO");

    private String value;

    CardStatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static CardStatusEnum fromValue(String input) {
      for (CardStatusEnum b : CardStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("card_status")
  private CardStatusEnum card_status = null;

  @JsonProperty("transac_id")
  private String transac_id = null;

  @JsonProperty("design_id")
  private String design_id = null;

  @JsonProperty("limit_rules")
  private Object limit_rules = null;

  @JsonProperty("corporate_id")
  private String corporate_id = null;

  @JsonProperty("card_name")
  private String card_name = null;

  @JsonProperty("card_client_code")
  private String card_client_code = null;

  @JsonProperty("image_id")
  private String image_id = null;

  @JsonProperty("digital_wallet_tokens")
  private List<InlineResponse20042DigitalWalletTokens> digital_wallet_tokens = null;

  public InlineResponse20042 request(String request) {
    this.request = request;
    return this;
  }

   /**
   * The command that was requested
   * @return request
  **/
  public String getRequest() {
    return request;
  }

  public void setRequest(String request) {
    this.request = request;
  }

  public InlineResponse20042 card_sequence(String card_sequence) {
    this.card_sequence = card_sequence;
    return this;
  }

   /**
   * If design of the card is asking for sequence, then a 3 digit number will be generated. This number is unique for any card of the card holder.
   * @return card_sequence
  **/
  public String getCardSequence() {
    return card_sequence;
  }

  public void setCardSequence(String card_sequence) {
    this.card_sequence = card_sequence;
  }

  public InlineResponse20042 fee_details(List<FxcardtransparencyinfoFeeDetails> fee_details) {
    this.fee_details = fee_details;
    return this;
  }

  public InlineResponse20042 addFeeDetailsItem(FxcardtransparencyinfoFeeDetails fee_detailsItem) {
    if (this.fee_details == null) {
      this.fee_details = new ArrayList<>();
    }
    this.fee_details.add(fee_detailsItem);
    return this;
  }

   /**
   * Get fee_details
   * @return fee_details
  **/
  public List<FxcardtransparencyinfoFeeDetails> getFeeDetails() {
    return fee_details;
  }

  public void setFeeDetails(List<FxcardtransparencyinfoFeeDetails> fee_details) {
    this.fee_details = fee_details;
  }

  public InlineResponse20042 deny_mcc(String deny_mcc) {
    this.deny_mcc = deny_mcc;
    return this;
  }

   /**
   * Comma separated list of MCC codes that should be denied. To define a range of MCC, separate the first and last MCC by a minus. Not available on all the markets
   * @return deny_mcc
  **/
  public String getDenyMcc() {
    return deny_mcc;
  }

  public void setDenyMcc(String deny_mcc) {
    this.deny_mcc = deny_mcc;
  }

  public InlineResponse20042 card_line_4(String card_line_4) {
    this.card_line_4 = card_line_4;
    return this;
  }

   /**
   * Free text field. For line 4 variable data. A regular expression for control will put in place.
   * @return card_line_4
  **/
  public String getCardLine4() {
    return card_line_4;
  }

  public void setCardLine4(String card_line_4) {
    this.card_line_4 = card_line_4;
  }

  public InlineResponse20042 product_id(String product_id) {
    this.product_id = product_id;
    return this;
  }

   /**
   * Product reference
   * @return product_id
  **/
  public String getProductId() {
    return product_id;
  }

  public void setProductId(String product_id) {
    this.product_id = product_id;
  }

  public InlineResponse20042 deny_service(String deny_service) {
    this.deny_service = deny_service;
    return this;
  }

   /**
   * Comma separated list of services (authorisation transaction types) that should be denied for the card: 0 - Sale (Goods &amp; services) 1 - Cash 9 - Sale with cashback Not available on all markets
   * @return deny_service
  **/
  public String getDenyService() {
    return deny_service;
  }

  public void setDenyService(String deny_service) {
    this.deny_service = deny_service;
  }

  public InlineResponse20042 card_visible_number(String card_visible_number) {
    this.card_visible_number = card_visible_number;
    return this;
  }

   /**
   * Characters showing part of the PAN (first 4 characters * last 4 characters)
   * @return card_visible_number
  **/
  public String getCardVisibleNumber() {
    return card_visible_number;
  }

  public void setCardVisibleNumber(String card_visible_number) {
    this.card_visible_number = card_visible_number;
  }

  public InlineResponse20042 expiry_renew(Integer expiry_renew) {
    this.expiry_renew = expiry_renew;
    return this;
  }

   /**
   *  0: do not renew at card expiration 1: automatic renewal at card expiration
   * @return expiry_renew
  **/
  public Integer getExpiryRenew() {
    return expiry_renew;
  }

  public void setExpiryRenew(Integer expiry_renew) {
    this.expiry_renew = expiry_renew;
  }

  public InlineResponse20042 profile(String profile) {
    this.profile = profile;
    return this;
  }

   /**
   * Profile of limits, velocities, and fees of the virtual account. Not available on all packages.
   * @return profile
  **/
  public String getProfile() {
    return profile;
  }

  public void setProfile(String profile) {
    this.profile = profile;
  }

  public InlineResponse20042 market_id(String market_id) {
    this.market_id = market_id;
    return this;
  }

   /**
   * Market reference of the card.
   * @return market_id
  **/
  public String getMarketId() {
    return market_id;
  }

  public void setMarketId(String market_id) {
    this.market_id = market_id;
  }

  public InlineResponse20042 card_client_code_prev(String card_client_code_prev) {
    this.card_client_code_prev = card_client_code_prev;
    return this;
  }

   /**
   * Reference id of the card
   * @return card_client_code_prev
  **/
  public String getCardClientCodePrev() {
    return card_client_code_prev;
  }

  public void setCardClientCodePrev(String card_client_code_prev) {
    this.card_client_code_prev = card_client_code_prev;
  }

  public InlineResponse20042 wallet_client_code(String wallet_client_code) {
    this.wallet_client_code = wallet_client_code;
    return this;
  }

   /**
   * Code of the account to be used to authorise transactions against. The virtual account reference linked to the debit card. Not available on all the markets.
   * @return wallet_client_code
  **/
  public String getWalletClientCode() {
    return wallet_client_code;
  }

  public void setWalletClientCode(String wallet_client_code) {
    this.wallet_client_code = wallet_client_code;
  }

  public InlineResponse20042 entity_id(String entity_id) {
    this.entity_id = entity_id;
    return this;
  }

   /**
   * Identity of the client
   * @return entity_id
  **/
  public String getEntityId() {
    return entity_id;
  }

  public void setEntityId(String entity_id) {
    this.entity_id = entity_id;
  }

  public InlineResponse20042 card_type(String card_type) {
    this.card_type = card_type;
    return this;
  }

   /**
   * V (uppercase V) for virtual P (uppercase P) for physical
   * @return card_type
  **/
  public String getCardType() {
    return card_type;
  }

  public void setCardType(String card_type) {
    this.card_type = card_type;
  }

  public InlineResponse20042 card_exp_date(String card_exp_date) {
    this.card_exp_date = card_exp_date;
    return this;
  }

   /**
   * The expiry date of the card (format yyyy-mm-dd).
   * @return card_exp_date
  **/
  public String getCardExpDate() {
    return card_exp_date;
  }

  public void setCardExpDate(String card_exp_date) {
    this.card_exp_date = card_exp_date;
  }

  public InlineResponse20042 card_status(CardStatusEnum card_status) {
    this.card_status = card_status;
    return this;
  }

   /**
   * Status of the card.
   * @return card_status
  **/
  public CardStatusEnum getCardStatus() {
    return card_status;
  }

  public void setCardStatus(CardStatusEnum card_status) {
    this.card_status = card_status;
  }

  public InlineResponse20042 transac_id(String transac_id) {
    this.transac_id = transac_id;
    return this;
  }

   /**
   * Unique id of the request
   * @return transac_id
  **/
  public String getTransacId() {
    return transac_id;
  }

  public void setTransacId(String transac_id) {
    this.transac_id = transac_id;
  }

  public InlineResponse20042 design_id(String design_id) {
    this.design_id = design_id;
    return this;
  }

   /**
   * The card design reference of the card that is being created. The relevant designs will be provided by Bankable.
   * @return design_id
  **/
  public String getDesignId() {
    return design_id;
  }

  public void setDesignId(String design_id) {
    this.design_id = design_id;
  }

  public InlineResponse20042 limit_rules(Object limit_rules) {
    this.limit_rules = limit_rules;
    return this;
  }

   /**
   * Get limit_rules
   * @return limit_rules
  **/
  public Object getLimitRules() {
    return limit_rules;
  }

  public void setLimitRules(Object limit_rules) {
    this.limit_rules = limit_rules;
  }

  public InlineResponse20042 corporate_id(String corporate_id) {
    this.corporate_id = corporate_id;
    return this;
  }

   /**
   * Corporate Identity. If set, the future virtual account will be attached to the corporate. Otherwise, it will be attached to the default coporate of the distributor. Every virtual account that gets created will be associated to a corporate Identity.
   * @return corporate_id
  **/
  public String getCorporateId() {
    return corporate_id;
  }

  public void setCorporateId(String corporate_id) {
    this.corporate_id = corporate_id;
  }

  public InlineResponse20042 card_name(String card_name) {
    this.card_name = card_name;
    return this;
  }

   /**
   * The name to appear on the card. If omitted then the card name will be composed by: &lt;first_name&gt;&lt;&gt;&lt;last_name&gt; or if abbreviation is needed &lt;first letter of first_name&gt;&lt;&gt;&lt;last_name&gt;. The field length can vary depending on the card design and is also restricted to a maximum of 21 if the provider is Marqeta.
   * @return card_name
  **/
  public String getCardName() {
    return card_name;
  }

  public void setCardName(String card_name) {
    this.card_name = card_name;
  }

  public InlineResponse20042 card_client_code(String card_client_code) {
    this.card_client_code = card_client_code;
    return this;
  }

   /**
   * Reference id of the card
   * @return card_client_code
  **/
  public String getCardClientCode() {
    return card_client_code;
  }

  public void setCardClientCode(String card_client_code) {
    this.card_client_code = card_client_code;
  }

  public InlineResponse20042 image_id(String image_id) {
    this.image_id = image_id;
    return this;
  }

   /**
   * ID of a predefined image
   * @return image_id
  **/
  public String getImageId() {
    return image_id;
  }

  public void setImageId(String image_id) {
    this.image_id = image_id;
  }

  public InlineResponse20042 digital_wallet_tokens(List<InlineResponse20042DigitalWalletTokens> digital_wallet_tokens) {
    this.digital_wallet_tokens = digital_wallet_tokens;
    return this;
  }

  public InlineResponse20042 addDigitalWalletTokensItem(InlineResponse20042DigitalWalletTokens digital_wallet_tokensItem) {
    if (this.digital_wallet_tokens == null) {
      this.digital_wallet_tokens = new ArrayList<>();
    }
    this.digital_wallet_tokens.add(digital_wallet_tokensItem);
    return this;
  }

   /**
   * Get digital_wallet_tokens
   * @return digital_wallet_tokens
  **/
  public List<InlineResponse20042DigitalWalletTokens> getDigitalWalletTokens() {
    return digital_wallet_tokens;
  }

  public void setDigitalWalletTokens(List<InlineResponse20042DigitalWalletTokens> digital_wallet_tokens) {
    this.digital_wallet_tokens = digital_wallet_tokens;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20042 inline_response_200_42 = (InlineResponse20042) o;
    return Objects.equals(this.request, inline_response_200_42.request) &&
        Objects.equals(this.card_sequence, inline_response_200_42.card_sequence) &&
        Objects.equals(this.fee_details, inline_response_200_42.fee_details) &&
        Objects.equals(this.deny_mcc, inline_response_200_42.deny_mcc) &&
        Objects.equals(this.card_line_4, inline_response_200_42.card_line_4) &&
        Objects.equals(this.product_id, inline_response_200_42.product_id) &&
        Objects.equals(this.deny_service, inline_response_200_42.deny_service) &&
        Objects.equals(this.card_visible_number, inline_response_200_42.card_visible_number) &&
        Objects.equals(this.expiry_renew, inline_response_200_42.expiry_renew) &&
        Objects.equals(this.profile, inline_response_200_42.profile) &&
        Objects.equals(this.market_id, inline_response_200_42.market_id) &&
        Objects.equals(this.card_client_code_prev, inline_response_200_42.card_client_code_prev) &&
        Objects.equals(this.wallet_client_code, inline_response_200_42.wallet_client_code) &&
        Objects.equals(this.entity_id, inline_response_200_42.entity_id) &&
        Objects.equals(this.card_type, inline_response_200_42.card_type) &&
        Objects.equals(this.card_exp_date, inline_response_200_42.card_exp_date) &&
        Objects.equals(this.card_status, inline_response_200_42.card_status) &&
        Objects.equals(this.transac_id, inline_response_200_42.transac_id) &&
        Objects.equals(this.design_id, inline_response_200_42.design_id) &&
        Objects.equals(this.limit_rules, inline_response_200_42.limit_rules) &&
        Objects.equals(this.corporate_id, inline_response_200_42.corporate_id) &&
        Objects.equals(this.card_name, inline_response_200_42.card_name) &&
        Objects.equals(this.card_client_code, inline_response_200_42.card_client_code) &&
        Objects.equals(this.image_id, inline_response_200_42.image_id) &&
        Objects.equals(this.digital_wallet_tokens, inline_response_200_42.digital_wallet_tokens);
  }

  @Override
  public int hashCode() {
    return Objects.hash(request, card_sequence, fee_details, deny_mcc, card_line_4, product_id, deny_service, card_visible_number, expiry_renew, profile, market_id, card_client_code_prev, wallet_client_code, entity_id, card_type, card_exp_date, card_status, transac_id, design_id, limit_rules, corporate_id, card_name, card_client_code, image_id, digital_wallet_tokens);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20042 {\n");
    
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    card_sequence: ").append(toIndentedString(card_sequence)).append("\n");
    sb.append("    fee_details: ").append(toIndentedString(fee_details)).append("\n");
    sb.append("    deny_mcc: ").append(toIndentedString(deny_mcc)).append("\n");
    sb.append("    card_line_4: ").append(toIndentedString(card_line_4)).append("\n");
    sb.append("    product_id: ").append(toIndentedString(product_id)).append("\n");
    sb.append("    deny_service: ").append(toIndentedString(deny_service)).append("\n");
    sb.append("    card_visible_number: ").append(toIndentedString(card_visible_number)).append("\n");
    sb.append("    expiry_renew: ").append(toIndentedString(expiry_renew)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    market_id: ").append(toIndentedString(market_id)).append("\n");
    sb.append("    card_client_code_prev: ").append(toIndentedString(card_client_code_prev)).append("\n");
    sb.append("    wallet_client_code: ").append(toIndentedString(wallet_client_code)).append("\n");
    sb.append("    entity_id: ").append(toIndentedString(entity_id)).append("\n");
    sb.append("    card_type: ").append(toIndentedString(card_type)).append("\n");
    sb.append("    card_exp_date: ").append(toIndentedString(card_exp_date)).append("\n");
    sb.append("    card_status: ").append(toIndentedString(card_status)).append("\n");
    sb.append("    transac_id: ").append(toIndentedString(transac_id)).append("\n");
    sb.append("    design_id: ").append(toIndentedString(design_id)).append("\n");
    sb.append("    limit_rules: ").append(toIndentedString(limit_rules)).append("\n");
    sb.append("    corporate_id: ").append(toIndentedString(corporate_id)).append("\n");
    sb.append("    card_name: ").append(toIndentedString(card_name)).append("\n");
    sb.append("    card_client_code: ").append(toIndentedString(card_client_code)).append("\n");
    sb.append("    image_id: ").append(toIndentedString(image_id)).append("\n");
    sb.append("    digital_wallet_tokens: ").append(toIndentedString(digital_wallet_tokens)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
