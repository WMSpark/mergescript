/*
 * Bankable API
 * Bankable API description
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.BNKTransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse20047
 */

public class InlineResponse20047 {
  @JsonProperty("package_code")
  private String package_code = null;

  @JsonProperty("request")
  private String request = null;

  @JsonProperty("transac_id")
  private String transac_id = null;

  @JsonProperty("virtual_account_name")
  private String virtual_account_name = null;

  @JsonProperty("physical_account_info")
  private List<Object> physical_account_info = null;

  @JsonProperty("virtual_account_curr")
  private String virtual_account_curr = null;

  @JsonProperty("limit_rules")
  private Object limit_rules = null;

  @JsonProperty("virtual_account_ref")
  private String virtual_account_ref = null;

  @JsonProperty("entity_id")
  private String entity_id = null;

  /**
   * The status options are: - EXP: Expired - ACT: Active - CAN: Cancelled - BLK: Blocked from receiving inbound paments and from making outbound payments - BLI: Blocked from receiving inbound payments - BLO: Blocked from making outbound payments
   */
  public enum VirtualAccountStatusEnum {
    EXP("EXP"),
    ACT("ACT"),
    CAN("CAN"),
    BLK("BLK"),
    BLI("BLI"),
    BLO("BLO");

    private String value;

    VirtualAccountStatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static VirtualAccountStatusEnum fromValue(String input) {
      for (VirtualAccountStatusEnum b : VirtualAccountStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("virtual_account_status")
  private VirtualAccountStatusEnum virtual_account_status = null;

  @JsonProperty("ch_client_code")
  private String ch_client_code = null;

  public InlineResponse20047 package_code(String package_code) {
    this.package_code = package_code;
    return this;
  }

   /**
   * The package that defines the payment schemes and limits for the account.
   * @return package_code
  **/
  public String getPackageCode() {
    return package_code;
  }

  public void setPackageCode(String package_code) {
    this.package_code = package_code;
  }

  public InlineResponse20047 request(String request) {
    this.request = request;
    return this;
  }

   /**
   * The command that was requested
   * @return request
  **/
  public String getRequest() {
    return request;
  }

  public void setRequest(String request) {
    this.request = request;
  }

  public InlineResponse20047 transac_id(String transac_id) {
    this.transac_id = transac_id;
    return this;
  }

   /**
   * Unique id of the request
   * @return transac_id
  **/
  public String getTransacId() {
    return transac_id;
  }

  public void setTransacId(String transac_id) {
    this.transac_id = transac_id;
  }

  public InlineResponse20047 virtual_account_name(String virtual_account_name) {
    this.virtual_account_name = virtual_account_name;
    return this;
  }

   /**
   * Account name
   * @return virtual_account_name
  **/
  public String getVirtualAccountName() {
    return virtual_account_name;
  }

  public void setVirtualAccountName(String virtual_account_name) {
    this.virtual_account_name = virtual_account_name;
  }

  public InlineResponse20047 physical_account_info(List<Object> physical_account_info) {
    this.physical_account_info = physical_account_info;
    return this;
  }

  public InlineResponse20047 addPhysicalAccountInfoItem(Object physical_account_infoItem) {
    if (this.physical_account_info == null) {
      this.physical_account_info = new ArrayList<>();
    }
    this.physical_account_info.add(physical_account_infoItem);
    return this;
  }

   /**
   * Get physical_account_info
   * @return physical_account_info
  **/
  public List<Object> getPhysicalAccountInfo() {
    return physical_account_info;
  }

  public void setPhysicalAccountInfo(List<Object> physical_account_info) {
    this.physical_account_info = physical_account_info;
  }

  public InlineResponse20047 virtual_account_curr(String virtual_account_curr) {
    this.virtual_account_curr = virtual_account_curr;
    return this;
  }

   /**
   * Currency. ISO 3 characters code.
   * @return virtual_account_curr
  **/
  public String getVirtualAccountCurr() {
    return virtual_account_curr;
  }

  public void setVirtualAccountCurr(String virtual_account_curr) {
    this.virtual_account_curr = virtual_account_curr;
  }

  public InlineResponse20047 limit_rules(Object limit_rules) {
    this.limit_rules = limit_rules;
    return this;
  }

   /**
   * Get limit_rules
   * @return limit_rules
  **/
  public Object getLimitRules() {
    return limit_rules;
  }

  public void setLimitRules(Object limit_rules) {
    this.limit_rules = limit_rules;
  }

  public InlineResponse20047 virtual_account_ref(String virtual_account_ref) {
    this.virtual_account_ref = virtual_account_ref;
    return this;
  }

   /**
   * Reference ID of the virtual account
   * @return virtual_account_ref
  **/
  public String getVirtualAccountRef() {
    return virtual_account_ref;
  }

  public void setVirtualAccountRef(String virtual_account_ref) {
    this.virtual_account_ref = virtual_account_ref;
  }

  public InlineResponse20047 entity_id(String entity_id) {
    this.entity_id = entity_id;
    return this;
  }

   /**
   * Identity of the client
   * @return entity_id
  **/
  public String getEntityId() {
    return entity_id;
  }

  public void setEntityId(String entity_id) {
    this.entity_id = entity_id;
  }

  public InlineResponse20047 virtual_account_status(VirtualAccountStatusEnum virtual_account_status) {
    this.virtual_account_status = virtual_account_status;
    return this;
  }

   /**
   * The status options are: - EXP: Expired - ACT: Active - CAN: Cancelled - BLK: Blocked from receiving inbound paments and from making outbound payments - BLI: Blocked from receiving inbound payments - BLO: Blocked from making outbound payments
   * @return virtual_account_status
  **/
  public VirtualAccountStatusEnum getVirtualAccountStatus() {
    return virtual_account_status;
  }

  public void setVirtualAccountStatus(VirtualAccountStatusEnum virtual_account_status) {
    this.virtual_account_status = virtual_account_status;
  }

  public InlineResponse20047 ch_client_code(String ch_client_code) {
    this.ch_client_code = ch_client_code;
    return this;
  }

   /**
   * Unique identifier of a consumer. If this field is provided, the virtual account will be trated as a consumer account, belonging to a consumer of the corporation with provided corporate_id.
   * @return ch_client_code
  **/
  public String getChClientCode() {
    return ch_client_code;
  }

  public void setChClientCode(String ch_client_code) {
    this.ch_client_code = ch_client_code;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20047 inline_response_200_47 = (InlineResponse20047) o;
    return Objects.equals(this.package_code, inline_response_200_47.package_code) &&
        Objects.equals(this.request, inline_response_200_47.request) &&
        Objects.equals(this.transac_id, inline_response_200_47.transac_id) &&
        Objects.equals(this.virtual_account_name, inline_response_200_47.virtual_account_name) &&
        Objects.equals(this.physical_account_info, inline_response_200_47.physical_account_info) &&
        Objects.equals(this.virtual_account_curr, inline_response_200_47.virtual_account_curr) &&
        Objects.equals(this.limit_rules, inline_response_200_47.limit_rules) &&
        Objects.equals(this.virtual_account_ref, inline_response_200_47.virtual_account_ref) &&
        Objects.equals(this.entity_id, inline_response_200_47.entity_id) &&
        Objects.equals(this.virtual_account_status, inline_response_200_47.virtual_account_status) &&
        Objects.equals(this.ch_client_code, inline_response_200_47.ch_client_code);
  }

  @Override
  public int hashCode() {
    return Objects.hash(package_code, request, transac_id, virtual_account_name, physical_account_info, virtual_account_curr, limit_rules, virtual_account_ref, entity_id, virtual_account_status, ch_client_code);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20047 {\n");
    
    sb.append("    package_code: ").append(toIndentedString(package_code)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    transac_id: ").append(toIndentedString(transac_id)).append("\n");
    sb.append("    virtual_account_name: ").append(toIndentedString(virtual_account_name)).append("\n");
    sb.append("    physical_account_info: ").append(toIndentedString(physical_account_info)).append("\n");
    sb.append("    virtual_account_curr: ").append(toIndentedString(virtual_account_curr)).append("\n");
    sb.append("    limit_rules: ").append(toIndentedString(limit_rules)).append("\n");
    sb.append("    virtual_account_ref: ").append(toIndentedString(virtual_account_ref)).append("\n");
    sb.append("    entity_id: ").append(toIndentedString(entity_id)).append("\n");
    sb.append("    virtual_account_status: ").append(toIndentedString(virtual_account_status)).append("\n");
    sb.append("    ch_client_code: ").append(toIndentedString(ch_client_code)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
