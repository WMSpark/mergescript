/*
 * Bankable API
 * Bankable API description
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.BNKTransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * IbanStatusblockBody
 */

public class IbanStatusblockBody {
  /**
   * Represents the type of block to instate. Possible values are: BLI (Inbound Payments are blocked), BLO (Outbound Payments are blocked), BLK (Inbound and Outbound payments are blocked). If empty, block_type defaults to blocked).
   */
  public enum BlockTypeEnum {
    BLI("BLI"),
    BLO("BLO"),
    BLK("BLK");

    private String value;

    BlockTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static BlockTypeEnum fromValue(String input) {
      for (BlockTypeEnum b : BlockTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("block_type")
  private BlockTypeEnum block_type = null;

  @JsonProperty("iban")
  private String iban = null;

  @JsonProperty("entity_id")
  private String entity_id = null;

  @JsonProperty("bic")
  private String bic = null;

  public IbanStatusblockBody block_type(BlockTypeEnum block_type) {
    this.block_type = block_type;
    return this;
  }

   /**
   * Represents the type of block to instate. Possible values are: BLI (Inbound Payments are blocked), BLO (Outbound Payments are blocked), BLK (Inbound and Outbound payments are blocked). If empty, block_type defaults to blocked).
   * @return block_type
  **/
  public BlockTypeEnum getBlockType() {
    return block_type;
  }

  public void setBlockType(BlockTypeEnum block_type) {
    this.block_type = block_type;
  }

  public IbanStatusblockBody iban(String iban) {
    this.iban = iban;
    return this;
  }

   /**
   * The International Bank Account Number.
   * @return iban
  **/
  public String getIban() {
    return iban;
  }

  public void setIban(String iban) {
    this.iban = iban;
  }

  public IbanStatusblockBody entity_id(String entity_id) {
    this.entity_id = entity_id;
    return this;
  }

   /**
   * Identity of the client
   * @return entity_id
  **/
  public String getEntityId() {
    return entity_id;
  }

  public void setEntityId(String entity_id) {
    this.entity_id = entity_id;
  }

  public IbanStatusblockBody bic(String bic) {
    this.bic = bic;
    return this;
  }

   /**
   * The BIC code of the Bank where the account is held.
   * @return bic
  **/
  public String getBic() {
    return bic;
  }

  public void setBic(String bic) {
    this.bic = bic;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IbanStatusblockBody iban_statusblock_body = (IbanStatusblockBody) o;
    return Objects.equals(this.block_type, iban_statusblock_body.block_type) &&
        Objects.equals(this.iban, iban_statusblock_body.iban) &&
        Objects.equals(this.entity_id, iban_statusblock_body.entity_id) &&
        Objects.equals(this.bic, iban_statusblock_body.bic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(block_type, iban, entity_id, bic);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IbanStatusblockBody {\n");
    
    sb.append("    block_type: ").append(toIndentedString(block_type)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    entity_id: ").append(toIndentedString(entity_id)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
