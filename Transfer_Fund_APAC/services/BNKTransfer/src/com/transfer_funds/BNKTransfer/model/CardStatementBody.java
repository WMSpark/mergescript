/*
 * Bankable API
 * Bankable API description
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.BNKTransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * CardStatementBody
 */

public class CardStatementBody {
  @JsonProperty("end_date")
  private Object end_date = null;

  @JsonProperty("all_txns")
  private Integer all_txns = null;

  @JsonProperty("card_client_code")
  private String card_client_code = null;

  @JsonProperty("entity_id")
  private String entity_id = null;

  @JsonProperty("nb_txns")
  private Integer nb_txns = null;

  @JsonProperty("start_date")
  private Object start_date = null;

  public CardStatementBody end_date(Object end_date) {
    this.end_date = end_date;
    return this;
  }

   /**
   * Get end_date
   * @return end_date
  **/
  public Object getEndDate() {
    return end_date;
  }

  public void setEndDate(Object end_date) {
    this.end_date = end_date;
  }

  public CardStatementBody all_txns(Integer all_txns) {
    this.all_txns = all_txns;
    return this;
  }

   /**
   * 0 ; do not retrieve transactions with 99 status1 ; retrieve all transactions (even transaction with status 99)If not set, do not retrieve transactions with 99 status.
   * @return all_txns
  **/
  public Integer getAllTxns() {
    return all_txns;
  }

  public void setAllTxns(Integer all_txns) {
    this.all_txns = all_txns;
  }

  public CardStatementBody card_client_code(String card_client_code) {
    this.card_client_code = card_client_code;
    return this;
  }

   /**
   * Reference id of the card
   * @return card_client_code
  **/
  public String getCardClientCode() {
    return card_client_code;
  }

  public void setCardClientCode(String card_client_code) {
    this.card_client_code = card_client_code;
  }

  public CardStatementBody entity_id(String entity_id) {
    this.entity_id = entity_id;
    return this;
  }

   /**
   * Identity of the client
   * @return entity_id
  **/
  public String getEntityId() {
    return entity_id;
  }

  public void setEntityId(String entity_id) {
    this.entity_id = entity_id;
  }

  public CardStatementBody nb_txns(Integer nb_txns) {
    this.nb_txns = nb_txns;
    return this;
  }

   /**
   * Number of the most recent transactions needed.If set, the selection window is not used.At least nb_txns or start_date must be provided.
   * @return nb_txns
  **/
  public Integer getNbTxns() {
    return nb_txns;
  }

  public void setNbTxns(Integer nb_txns) {
    this.nb_txns = nb_txns;
  }

  public CardStatementBody start_date(Object start_date) {
    this.start_date = start_date;
    return this;
  }

   /**
   * Get start_date
   * @return start_date
  **/
  public Object getStartDate() {
    return start_date;
  }

  public void setStartDate(Object start_date) {
    this.start_date = start_date;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardStatementBody card_statement_body = (CardStatementBody) o;
    return Objects.equals(this.end_date, card_statement_body.end_date) &&
        Objects.equals(this.all_txns, card_statement_body.all_txns) &&
        Objects.equals(this.card_client_code, card_statement_body.card_client_code) &&
        Objects.equals(this.entity_id, card_statement_body.entity_id) &&
        Objects.equals(this.nb_txns, card_statement_body.nb_txns) &&
        Objects.equals(this.start_date, card_statement_body.start_date);
  }

  @Override
  public int hashCode() {
    return Objects.hash(end_date, all_txns, card_client_code, entity_id, nb_txns, start_date);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardStatementBody {\n");
    
    sb.append("    end_date: ").append(toIndentedString(end_date)).append("\n");
    sb.append("    all_txns: ").append(toIndentedString(all_txns)).append("\n");
    sb.append("    card_client_code: ").append(toIndentedString(card_client_code)).append("\n");
    sb.append("    entity_id: ").append(toIndentedString(entity_id)).append("\n");
    sb.append("    nb_txns: ").append(toIndentedString(nb_txns)).append("\n");
    sb.append("    start_date: ").append(toIndentedString(start_date)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
