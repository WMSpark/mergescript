/*
 * Bankable API
 * Bankable API description
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.BNKTransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * CardUpdateBody
 */

public class CardUpdateBody {
  @JsonProperty("card_line_4")
  private String card_line_4 = null;

  @JsonProperty("design_id")
  private String design_id = null;

  @JsonProperty("expiry_renew")
  private Integer expiry_renew = null;

  @JsonProperty("profile")
  private String profile = null;

  @JsonProperty("card_name")
  private String card_name = null;

  @JsonProperty("card_client_code")
  private String card_client_code = null;

  @JsonProperty("deny_service")
  private String deny_service = null;

  @JsonProperty("entity_id")
  private String entity_id = null;

  @JsonProperty("image_id")
  private String image_id = null;

  @JsonProperty("deny_mcc")
  private String deny_mcc = null;

  public CardUpdateBody card_line_4(String card_line_4) {
    this.card_line_4 = card_line_4;
    return this;
  }

   /**
   * Free text field. For line 4 variable data. A regular expression for control will put in place.
   * @return card_line_4
  **/
  public String getCardLine4() {
    return card_line_4;
  }

  public void setCardLine4(String card_line_4) {
    this.card_line_4 = card_line_4;
  }

  public CardUpdateBody design_id(String design_id) {
    this.design_id = design_id;
    return this;
  }

   /**
   * The card design reference of the card that is being created. The relevant designs will be provided by Bankable.
   * @return design_id
  **/
  public String getDesignId() {
    return design_id;
  }

  public void setDesignId(String design_id) {
    this.design_id = design_id;
  }

  public CardUpdateBody expiry_renew(Integer expiry_renew) {
    this.expiry_renew = expiry_renew;
    return this;
  }

   /**
   *  0: do not renew at card expiration 1: automatic renewal at card expiration
   * @return expiry_renew
  **/
  public Integer getExpiryRenew() {
    return expiry_renew;
  }

  public void setExpiryRenew(Integer expiry_renew) {
    this.expiry_renew = expiry_renew;
  }

  public CardUpdateBody profile(String profile) {
    this.profile = profile;
    return this;
  }

   /**
   * Profile of limits, velocities, and fees of the virtual account. Not available on all packages.
   * @return profile
  **/
  public String getProfile() {
    return profile;
  }

  public void setProfile(String profile) {
    this.profile = profile;
  }

  public CardUpdateBody card_name(String card_name) {
    this.card_name = card_name;
    return this;
  }

   /**
   * The name to appear on the card. If omitted then the card name will be composed by: &lt;first_name&gt;&lt;&gt;&lt;last_name&gt; or if abbreviation is needed &lt;first letter of first_name&gt;&lt;&gt;&lt;last_name&gt;. The field length can vary depending on the card design and is also restricted to a maximum of 21 if the provider is Marqeta.
   * @return card_name
  **/
  public String getCardName() {
    return card_name;
  }

  public void setCardName(String card_name) {
    this.card_name = card_name;
  }

  public CardUpdateBody card_client_code(String card_client_code) {
    this.card_client_code = card_client_code;
    return this;
  }

   /**
   * Reference id of the card
   * @return card_client_code
  **/
  public String getCardClientCode() {
    return card_client_code;
  }

  public void setCardClientCode(String card_client_code) {
    this.card_client_code = card_client_code;
  }

  public CardUpdateBody deny_service(String deny_service) {
    this.deny_service = deny_service;
    return this;
  }

   /**
   * Comma separated list of services (authorisation transaction types) that should be denied for the card: 0 - Sale (Goods &amp; services) 1 - Cash 9 - Sale with cashback Not available on all markets
   * @return deny_service
  **/
  public String getDenyService() {
    return deny_service;
  }

  public void setDenyService(String deny_service) {
    this.deny_service = deny_service;
  }

  public CardUpdateBody entity_id(String entity_id) {
    this.entity_id = entity_id;
    return this;
  }

   /**
   * Identity of the client
   * @return entity_id
  **/
  public String getEntityId() {
    return entity_id;
  }

  public void setEntityId(String entity_id) {
    this.entity_id = entity_id;
  }

  public CardUpdateBody image_id(String image_id) {
    this.image_id = image_id;
    return this;
  }

   /**
   * ID of a predefined image
   * @return image_id
  **/
  public String getImageId() {
    return image_id;
  }

  public void setImageId(String image_id) {
    this.image_id = image_id;
  }

  public CardUpdateBody deny_mcc(String deny_mcc) {
    this.deny_mcc = deny_mcc;
    return this;
  }

   /**
   * Comma separated list of MCC codes that should be denied. To define a range of MCC, separate the first and last MCC by a minus. Not available on all the markets
   * @return deny_mcc
  **/
  public String getDenyMcc() {
    return deny_mcc;
  }

  public void setDenyMcc(String deny_mcc) {
    this.deny_mcc = deny_mcc;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardUpdateBody card_update_body = (CardUpdateBody) o;
    return Objects.equals(this.card_line_4, card_update_body.card_line_4) &&
        Objects.equals(this.design_id, card_update_body.design_id) &&
        Objects.equals(this.expiry_renew, card_update_body.expiry_renew) &&
        Objects.equals(this.profile, card_update_body.profile) &&
        Objects.equals(this.card_name, card_update_body.card_name) &&
        Objects.equals(this.card_client_code, card_update_body.card_client_code) &&
        Objects.equals(this.deny_service, card_update_body.deny_service) &&
        Objects.equals(this.entity_id, card_update_body.entity_id) &&
        Objects.equals(this.image_id, card_update_body.image_id) &&
        Objects.equals(this.deny_mcc, card_update_body.deny_mcc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(card_line_4, design_id, expiry_renew, profile, card_name, card_client_code, deny_service, entity_id, image_id, deny_mcc);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardUpdateBody {\n");
    
    sb.append("    card_line_4: ").append(toIndentedString(card_line_4)).append("\n");
    sb.append("    design_id: ").append(toIndentedString(design_id)).append("\n");
    sb.append("    expiry_renew: ").append(toIndentedString(expiry_renew)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    card_name: ").append(toIndentedString(card_name)).append("\n");
    sb.append("    card_client_code: ").append(toIndentedString(card_client_code)).append("\n");
    sb.append("    deny_service: ").append(toIndentedString(deny_service)).append("\n");
    sb.append("    entity_id: ").append(toIndentedString(entity_id)).append("\n");
    sb.append("    image_id: ").append(toIndentedString(image_id)).append("\n");
    sb.append("    deny_mcc: ").append(toIndentedString(deny_mcc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
