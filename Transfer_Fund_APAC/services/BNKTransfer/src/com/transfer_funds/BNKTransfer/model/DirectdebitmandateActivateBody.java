/*
 * Bankable API
 * Bankable API description
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.BNKTransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
/**
 * DirectdebitmandateActivateBody
 */

public class DirectdebitmandateActivateBody {
  @JsonProperty("funding_account_code")
  private Object funding_account_code = null;

  @JsonProperty("mandate_id")
  private List<String> mandate_id = new ArrayList<>();

  @JsonProperty("entity_id")
  private String entity_id = null;

  @JsonProperty("client_code")
  private Object client_code = null;

  public DirectdebitmandateActivateBody funding_account_code(Object funding_account_code) {
    this.funding_account_code = funding_account_code;
    return this;
  }

   /**
   * Get funding_account_code
   * @return funding_account_code
  **/
  public Object getFundingAccountCode() {
    return funding_account_code;
  }

  public void setFundingAccountCode(Object funding_account_code) {
    this.funding_account_code = funding_account_code;
  }

  public DirectdebitmandateActivateBody mandate_id(List<String> mandate_id) {
    this.mandate_id = mandate_id;
    return this;
  }

  public DirectdebitmandateActivateBody addMandateIdItem(String mandate_idItem) {
    this.mandate_id.add(mandate_idItem);
    return this;
  }

   /**
   * Get mandate_id
   * @return mandate_id
  **/
  public List<String> getMandateId() {
    return mandate_id;
  }

  public void setMandateId(List<String> mandate_id) {
    this.mandate_id = mandate_id;
  }

  public DirectdebitmandateActivateBody entity_id(String entity_id) {
    this.entity_id = entity_id;
    return this;
  }

   /**
   * Identity of the client
   * @return entity_id
  **/
  public String getEntityId() {
    return entity_id;
  }

  public void setEntityId(String entity_id) {
    this.entity_id = entity_id;
  }

  public DirectdebitmandateActivateBody client_code(Object client_code) {
    this.client_code = client_code;
    return this;
  }

   /**
   * Get client_code
   * @return client_code
  **/
  public Object getClientCode() {
    return client_code;
  }

  public void setClientCode(Object client_code) {
    this.client_code = client_code;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DirectdebitmandateActivateBody directdebitmandate_activate_body = (DirectdebitmandateActivateBody) o;
    return Objects.equals(this.funding_account_code, directdebitmandate_activate_body.funding_account_code) &&
        Objects.equals(this.mandate_id, directdebitmandate_activate_body.mandate_id) &&
        Objects.equals(this.entity_id, directdebitmandate_activate_body.entity_id) &&
        Objects.equals(this.client_code, directdebitmandate_activate_body.client_code);
  }

  @Override
  public int hashCode() {
    return Objects.hash(funding_account_code, mandate_id, entity_id, client_code);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DirectdebitmandateActivateBody {\n");
    
    sb.append("    funding_account_code: ").append(toIndentedString(funding_account_code)).append("\n");
    sb.append("    mandate_id: ").append(toIndentedString(mandate_id)).append("\n");
    sb.append("    entity_id: ").append(toIndentedString(entity_id)).append("\n");
    sb.append("    client_code: ").append(toIndentedString(client_code)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
