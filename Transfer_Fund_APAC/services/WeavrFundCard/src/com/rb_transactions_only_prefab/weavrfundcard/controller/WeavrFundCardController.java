package com.rb_transactions_only_prefab.weavrfundcard.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.rb_transactions_only_prefab.weavrfundcard.TransferCreateRequest;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;
import com.wordnik.swagger.annotations.Api;

/**
 * Controller object for domain model class {@link TransferCreateRequest}.
 * @see TransferCreateRequest
 */
@RestController
@Api(value = "WeavrFundCardController", description = "controller class for java service execution")
@RequestMapping("/weavrFundCard")
public class WeavrFundCardController {

    @Autowired
    private TransferCreateRequest weavrFundCard;

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @RequestMapping(value = "/destination", method = RequestMethod.GET)
    public Map<String, String> getDestination() {
        return weavrFundCard.getDestination();
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @RequestMapping(value = "/destinationAmount", method = RequestMethod.GET)
    public Map<String, String> getDestinationAmount() {
        return weavrFundCard.getDestinationAmount();
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @RequestMapping(value = "/profileId", method = RequestMethod.GET)
    public String getProfileId() {
        return weavrFundCard.getProfileId();
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @RequestMapping(value = "/source", method = RequestMethod.GET)
    public Map<String, String> getSource() {
        return weavrFundCard.getSource();
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @RequestMapping(value = "/tag", method = RequestMethod.GET)
    public String getTag() {
        return weavrFundCard.getTag();
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @RequestMapping(value = "/destination", method = RequestMethod.PUT)
    public void setDestination(@RequestBody Map<String, String> destination) {
        weavrFundCard.setDestination(destination);
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @RequestMapping(value = "/destinationAmount", method = RequestMethod.PUT)
    public void setDestinationAmount(@RequestBody Map<String, String> destinationAmount) {
        weavrFundCard.setDestinationAmount(destinationAmount);
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @RequestMapping(value = "/profileId", method = RequestMethod.PUT)
    public void setProfileId(@RequestParam(value = "profileId", required = false) String profileId) {
        weavrFundCard.setProfileId(profileId);
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @RequestMapping(value = "/source", method = RequestMethod.PUT)
    public void setSource(@RequestBody Map<String, String> source) {
        weavrFundCard.setSource(source);
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @RequestMapping(value = "/tag", method = RequestMethod.PUT)
    public void setTag(@RequestParam(value = "tag", required = false) String tag) {
        weavrFundCard.setTag(tag);
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @RequestMapping(value = "/toString", method = RequestMethod.GET)
    public String toString() {
        return weavrFundCard.toString();
    }
}

