/*
 * Railsbank customer API
 * Public API for Railsbank customers
 *
 * OpenAPI spec version: api
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.transfer_funds.RBSwagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.transfer_funds.RBSwagger.model.V1customerledgersPartner;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse20015
 */

public class InlineResponse20015 {
  @JsonProperty("bsb_number")
  private String bsb_number = null;

  @JsonProperty("account_number")
  private String account_number = null;

  @JsonProperty("missing_data")
  private List<String> missing_data = null;

  @JsonProperty("partner_ref")
  private String partner_ref = null;

  @JsonProperty("credit_details_id")
  private String credit_details_id = null;

  @JsonProperty("ledger_t_and_cs_country_of_jurisdiction")
  private String ledger_t_and_cs_country_of_jurisdiction = null;

  @JsonProperty("uk_account_number")
  private String uk_account_number = null;

  /**
   * Gets or Sets ledger_primary_use_types
   */
  public enum LedgerPrimaryUseTypesEnum {
    DEPOSIT("ledger-primary-use-types-deposit"),
    PAYMENTS("ledger-primary-use-types-payments"),
    SETTLEMENT("ledger-primary-use-types-settlement"),
    FLOAT("ledger-primary-use-types-float"),
    FEES("ledger-primary-use-types-fees"),
    INVESTMENT("ledger-primary-use-types-investment"),
    COLLATERAL("ledger-primary-use-types-collateral"),
    ESCROW("ledger-primary-use-types-escrow");

    private String value;

    LedgerPrimaryUseTypesEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static LedgerPrimaryUseTypesEnum fromValue(String input) {
      for (LedgerPrimaryUseTypesEnum b : LedgerPrimaryUseTypesEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("ledger_primary_use_types")
  private List<LedgerPrimaryUseTypesEnum> ledger_primary_use_types = null;

  /**
   * Gets or Sets ledger_type
   */
  public enum LedgerTypeEnum {
    SINGLE_USER("ledger-type-single-user"),
    OMNIBUS("ledger-type-omnibus");

    private String value;

    LedgerTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static LedgerTypeEnum fromValue(String input) {
      for (LedgerTypeEnum b : LedgerTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("ledger_type")
  private LedgerTypeEnum ledger_type = null;

  @JsonProperty("created_at")
  private LocalDateTime created_at = null;

  /**
   * Gets or Sets ledger_status
   */
  public enum LedgerStatusEnum {
    PERMANENTLY_CLOSED("ledger-status-permanently-closed"),
    OK("ledger-status-ok"),
    PENDING("ledger-status-pending"),
    ERROR("ledger-status-error"),
    UNASSIGNED("ledger-status-unassigned"),
    DECLINED("ledger-status-declined"),
    CLOSING("ledger-status-closing"),
    MISSING_DATA("ledger-status-missing-data");

    private String value;

    LedgerStatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static LedgerStatusEnum fromValue(String input) {
      for (LedgerStatusEnum b : LedgerStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("ledger_status")
  private LedgerStatusEnum ledger_status = null;

  /**
   * Gets or Sets partner_product
   */
  public enum PartnerProductEnum {
    EXAMPLEBANK_SGD_2("ExampleBank-SGD-2"),
    PAYRNET_SGD_2("PayrNet-SGD-2"),
    BANKING_AUD_1("Banking-AUD-1"),
    PAYRNET_SGD_1("PayrNet-SGD-1"),
    EXAMPLEBANK_SGD_1("ExampleBank-SGD-1"),
    PAYRNET_GBP_DEBIT_SEND("PayrNet-GBP-Debit-Send"),
    PAYRNET_GBP_2("PayrNet-GBP-2"),
    EXAMPLEBANK_USD_1("ExampleBank-USD-1"),
    RAILSBANK_KYC_4("Railsbank-KYC-4"),
    EXAMPLEBANK_AUD_1("ExampleBank-AUD-1"),
    EXAMPLEBANK_FX_1("ExampleBank-FX-1"),
    PAYRNET_USD_1("PayrNet-USD-1"),
    EXAMPLEBANK_USD_2("ExampleBank-USD-2"),
    EXAMPLEBANK_EUR_3("ExampleBank-EUR-3"),
    RAILSBANK_KYC_1("Railsbank-KYC-1"),
    EXAMPLEBANK_GBP_2("ExampleBank-GBP-2"),
    PAYRNET_MULTI_CCY_1("PayrNet-Multi-CCY-1"),
    RAILSBANK_CREDIT_CARD_1("Railsbank-Credit-Card-1"),
    GOLDBLOC_CONVERSION_1("Goldbloc-Conversion-1"),
    RAILSBANK_AML_SCREENING_1("Railsbank-AML-Screening-1"),
    PAYRNET_EUR_3("PayrNet-EUR-3"),
    RAILSBANK_USD_CREDIT_1("Railsbank-USD-Credit-1"),
    ONFIDO_IDV_1("Onfido-IDV-1"),
    EXAMPLEBANK_EUR_1("ExampleBank-EUR-1"),
    PAYRNET_USD_2("PayrNet-USD-2"),
    RAILSBANK_DEBIT_CARD_3("Railsbank-Debit-Card-3"),
    PAYRNET_EUR_1("PayrNet-EUR-1"),
    RAILSBANK_CONVERSION_1("Railsbank-Conversion-1"),
    PAYRNET_GBP_1("PayrNet-GBP-1"),
    RAILSBANK_DEBIT_CARD_1("Railsbank-Debit-Card-1"),
    RAILSBANK_VIRTUAL_1("Railsbank-Virtual-1"),
    RAILSBANK_KYC_2("Railsbank-KYC-2"),
    EXAMPLEBANK_USD_CREDIT_1("ExampleBank-USD-Credit-1"),
    EXAMPLEBANK_GBP_DEBIT_SEND("ExampleBank-GBP-Debit-Send"),
    EXAMPLEBANK_GBP_1("ExampleBank-GBP-1"),
    RAILSBANK_IDENTITY_AND_VERIFICATION_SERVICE_1("Railsbank-Identity-and-Verification-Service-1"),
    RAILSBANK_DEBIT_CARD_2("Railsbank-Debit-Card-2"),
    PAYRNET_FX_1("PayrNet-FX-1");

    private String value;

    PartnerProductEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static PartnerProductEnum fromValue(String input) {
      for (PartnerProductEnum b : PartnerProductEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("partner_product")
  private PartnerProductEnum partner_product = null;

  @JsonProperty("ledger_meta")
  private Object ledger_meta = null;

  @JsonProperty("last_modified_at")
  private LocalDateTime last_modified_at = null;

  @JsonProperty("uk_sort_code")
  private String uk_sort_code = null;

  @JsonProperty("partner_id")
  private String partner_id = null;

  /**
   * Gets or Sets asset_type
   */
  public enum AssetTypeEnum {
    PLN("pln"),
    AUD("aud"),
    CHF("chf"),
    CAD("cad"),
    SEK("sek"),
    GOLDBLOC("goldbloc"),
    USD("usd"),
    NOK("nok"),
    WHISKY("whisky"),
    VIRTUAL_CURRENCY("virtual-currency"),
    JPY("jpy"),
    HUF("huf"),
    NZD("nzd"),
    GOLD("gold"),
    CZK("czk"),
    SGD("sgd"),
    RON("ron"),
    GBP("gbp"),
    HRK("hrk"),
    EUR("eur");

    private String value;

    AssetTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static AssetTypeEnum fromValue(String input) {
      for (AssetTypeEnum b : AssetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("asset_type")
  private AssetTypeEnum asset_type = null;

  /**
   * Gets or Sets ledger_iban_status
   */
  public enum LedgerIbanStatusEnum {
    PENDING("ledger-iban-status-pending"),
    DECLINED("ledger-iban-status-declined"),
    OK("ledger-iban-status-ok");

    private String value;

    LedgerIbanStatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static LedgerIbanStatusEnum fromValue(String input) {
      for (LedgerIbanStatusEnum b : LedgerIbanStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("ledger_iban_status")
  private LedgerIbanStatusEnum ledger_iban_status = null;

  @JsonProperty("ledger_id")
  private String ledger_id = null;

  @JsonProperty("failure_reasons")
  private List<String> failure_reasons = null;

  @JsonProperty("amount")
  private BigDecimal amount = null;

  /**
   * Gets or Sets asset_class
   */
  public enum AssetClassEnum {
    COMMODITY("commodity"),
    CURRENCY("currency");

    private String value;

    AssetClassEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static AssetClassEnum fromValue(String input) {
      for (AssetClassEnum b : AssetClassEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("asset_class")
  private AssetClassEnum asset_class = null;

  @JsonProperty("routing_number")
  private String routing_number = null;

  @JsonProperty("bic_swift")
  private String bic_swift = null;

  /**
   * Gets or Sets ledger_who_owns_assets
   */
  public enum LedgerWhoOwnsAssetsEnum {
    ME("ledger-assets-owned-by-me"),
    OTHER("ledger-assets-owned-by-other");

    private String value;

    LedgerWhoOwnsAssetsEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static LedgerWhoOwnsAssetsEnum fromValue(String input) {
      for (LedgerWhoOwnsAssetsEnum b : LedgerWhoOwnsAssetsEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("ledger_who_owns_assets")
  private LedgerWhoOwnsAssetsEnum ledger_who_owns_assets = null;

  @JsonProperty("partner")
  private V1customerledgersPartner partner = null;

  @JsonProperty("total_amount")
  private BigDecimal total_amount = null;

  @JsonProperty("reserved_amount")
  private BigDecimal reserved_amount = null;

  @JsonProperty("holder_id")
  private String holder_id = null;

  @JsonProperty("iban")
  private String iban = null;

  @JsonProperty("ledger_holder")
  private Object ledger_holder = null;

  public InlineResponse20015 bsb_number(String bsb_number) {
    this.bsb_number = bsb_number;
    return this;
  }

   /**
   * Get bsb_number
   * @return bsb_number
  **/
  public String getBsbNumber() {
    return bsb_number;
  }

  public void setBsbNumber(String bsb_number) {
    this.bsb_number = bsb_number;
  }

  public InlineResponse20015 account_number(String account_number) {
    this.account_number = account_number;
    return this;
  }

   /**
   * Get account_number
   * @return account_number
  **/
  public String getAccountNumber() {
    return account_number;
  }

  public void setAccountNumber(String account_number) {
    this.account_number = account_number;
  }

  public InlineResponse20015 missing_data(List<String> missing_data) {
    this.missing_data = missing_data;
    return this;
  }

  public InlineResponse20015 addMissingDataItem(String missing_dataItem) {
    if (this.missing_data == null) {
      this.missing_data = new ArrayList<>();
    }
    this.missing_data.add(missing_dataItem);
    return this;
  }

   /**
   * Get missing_data
   * @return missing_data
  **/
  public List<String> getMissingData() {
    return missing_data;
  }

  public void setMissingData(List<String> missing_data) {
    this.missing_data = missing_data;
  }

  public InlineResponse20015 partner_ref(String partner_ref) {
    this.partner_ref = partner_ref;
    return this;
  }

   /**
   * Get partner_ref
   * @return partner_ref
  **/
  public String getPartnerRef() {
    return partner_ref;
  }

  public void setPartnerRef(String partner_ref) {
    this.partner_ref = partner_ref;
  }

  public InlineResponse20015 credit_details_id(String credit_details_id) {
    this.credit_details_id = credit_details_id;
    return this;
  }

   /**
   * Get credit_details_id
   * @return credit_details_id
  **/
  public String getCreditDetailsId() {
    return credit_details_id;
  }

  public void setCreditDetailsId(String credit_details_id) {
    this.credit_details_id = credit_details_id;
  }

  public InlineResponse20015 ledger_t_and_cs_country_of_jurisdiction(String ledger_t_and_cs_country_of_jurisdiction) {
    this.ledger_t_and_cs_country_of_jurisdiction = ledger_t_and_cs_country_of_jurisdiction;
    return this;
  }

   /**
   * Get ledger_t_and_cs_country_of_jurisdiction
   * @return ledger_t_and_cs_country_of_jurisdiction
  **/
  public String getLedgerTAndCsCountryOfJurisdiction() {
    return ledger_t_and_cs_country_of_jurisdiction;
  }

  public void setLedgerTAndCsCountryOfJurisdiction(String ledger_t_and_cs_country_of_jurisdiction) {
    this.ledger_t_and_cs_country_of_jurisdiction = ledger_t_and_cs_country_of_jurisdiction;
  }

  public InlineResponse20015 uk_account_number(String uk_account_number) {
    this.uk_account_number = uk_account_number;
    return this;
  }

   /**
   * Get uk_account_number
   * @return uk_account_number
  **/
  public String getUkAccountNumber() {
    return uk_account_number;
  }

  public void setUkAccountNumber(String uk_account_number) {
    this.uk_account_number = uk_account_number;
  }

  public InlineResponse20015 ledger_primary_use_types(List<LedgerPrimaryUseTypesEnum> ledger_primary_use_types) {
    this.ledger_primary_use_types = ledger_primary_use_types;
    return this;
  }

  public InlineResponse20015 addLedgerPrimaryUseTypesItem(LedgerPrimaryUseTypesEnum ledger_primary_use_typesItem) {
    if (this.ledger_primary_use_types == null) {
      this.ledger_primary_use_types = new ArrayList<>();
    }
    this.ledger_primary_use_types.add(ledger_primary_use_typesItem);
    return this;
  }

   /**
   * Get ledger_primary_use_types
   * @return ledger_primary_use_types
  **/
  public List<LedgerPrimaryUseTypesEnum> getLedgerPrimaryUseTypes() {
    return ledger_primary_use_types;
  }

  public void setLedgerPrimaryUseTypes(List<LedgerPrimaryUseTypesEnum> ledger_primary_use_types) {
    this.ledger_primary_use_types = ledger_primary_use_types;
  }

  public InlineResponse20015 ledger_type(LedgerTypeEnum ledger_type) {
    this.ledger_type = ledger_type;
    return this;
  }

   /**
   * Get ledger_type
   * @return ledger_type
  **/
  public LedgerTypeEnum getLedgerType() {
    return ledger_type;
  }

  public void setLedgerType(LedgerTypeEnum ledger_type) {
    this.ledger_type = ledger_type;
  }

  public InlineResponse20015 created_at(LocalDateTime created_at) {
    this.created_at = created_at;
    return this;
  }

   /**
   * Get created_at
   * @return created_at
  **/
  public LocalDateTime getCreatedAt() {
    return created_at;
  }

  public void setCreatedAt(LocalDateTime created_at) {
    this.created_at = created_at;
  }

  public InlineResponse20015 ledger_status(LedgerStatusEnum ledger_status) {
    this.ledger_status = ledger_status;
    return this;
  }

   /**
   * Get ledger_status
   * @return ledger_status
  **/
  public LedgerStatusEnum getLedgerStatus() {
    return ledger_status;
  }

  public void setLedgerStatus(LedgerStatusEnum ledger_status) {
    this.ledger_status = ledger_status;
  }

  public InlineResponse20015 partner_product(PartnerProductEnum partner_product) {
    this.partner_product = partner_product;
    return this;
  }

   /**
   * Get partner_product
   * @return partner_product
  **/
  public PartnerProductEnum getPartnerProduct() {
    return partner_product;
  }

  public void setPartnerProduct(PartnerProductEnum partner_product) {
    this.partner_product = partner_product;
  }

  public InlineResponse20015 ledger_meta(Object ledger_meta) {
    this.ledger_meta = ledger_meta;
    return this;
  }

   /**
   * Get ledger_meta
   * @return ledger_meta
  **/
  public Object getLedgerMeta() {
    return ledger_meta;
  }

  public void setLedgerMeta(Object ledger_meta) {
    this.ledger_meta = ledger_meta;
  }

  public InlineResponse20015 last_modified_at(LocalDateTime last_modified_at) {
    this.last_modified_at = last_modified_at;
    return this;
  }

   /**
   * Get last_modified_at
   * @return last_modified_at
  **/
  public LocalDateTime getLastModifiedAt() {
    return last_modified_at;
  }

  public void setLastModifiedAt(LocalDateTime last_modified_at) {
    this.last_modified_at = last_modified_at;
  }

  public InlineResponse20015 uk_sort_code(String uk_sort_code) {
    this.uk_sort_code = uk_sort_code;
    return this;
  }

   /**
   * Get uk_sort_code
   * @return uk_sort_code
  **/
  public String getUkSortCode() {
    return uk_sort_code;
  }

  public void setUkSortCode(String uk_sort_code) {
    this.uk_sort_code = uk_sort_code;
  }

  public InlineResponse20015 partner_id(String partner_id) {
    this.partner_id = partner_id;
    return this;
  }

   /**
   * Get partner_id
   * @return partner_id
  **/
  public String getPartnerId() {
    return partner_id;
  }

  public void setPartnerId(String partner_id) {
    this.partner_id = partner_id;
  }

  public InlineResponse20015 asset_type(AssetTypeEnum asset_type) {
    this.asset_type = asset_type;
    return this;
  }

   /**
   * Get asset_type
   * @return asset_type
  **/
  public AssetTypeEnum getAssetType() {
    return asset_type;
  }

  public void setAssetType(AssetTypeEnum asset_type) {
    this.asset_type = asset_type;
  }

  public InlineResponse20015 ledger_iban_status(LedgerIbanStatusEnum ledger_iban_status) {
    this.ledger_iban_status = ledger_iban_status;
    return this;
  }

   /**
   * Get ledger_iban_status
   * @return ledger_iban_status
  **/
  public LedgerIbanStatusEnum getLedgerIbanStatus() {
    return ledger_iban_status;
  }

  public void setLedgerIbanStatus(LedgerIbanStatusEnum ledger_iban_status) {
    this.ledger_iban_status = ledger_iban_status;
  }

  public InlineResponse20015 ledger_id(String ledger_id) {
    this.ledger_id = ledger_id;
    return this;
  }

   /**
   * Get ledger_id
   * @return ledger_id
  **/
  public String getLedgerId() {
    return ledger_id;
  }

  public void setLedgerId(String ledger_id) {
    this.ledger_id = ledger_id;
  }

  public InlineResponse20015 failure_reasons(List<String> failure_reasons) {
    this.failure_reasons = failure_reasons;
    return this;
  }

  public InlineResponse20015 addFailureReasonsItem(String failure_reasonsItem) {
    if (this.failure_reasons == null) {
      this.failure_reasons = new ArrayList<>();
    }
    this.failure_reasons.add(failure_reasonsItem);
    return this;
  }

   /**
   * Get failure_reasons
   * @return failure_reasons
  **/
  public List<String> getFailureReasons() {
    return failure_reasons;
  }

  public void setFailureReasons(List<String> failure_reasons) {
    this.failure_reasons = failure_reasons;
  }

  public InlineResponse20015 amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public InlineResponse20015 asset_class(AssetClassEnum asset_class) {
    this.asset_class = asset_class;
    return this;
  }

   /**
   * Get asset_class
   * @return asset_class
  **/
  public AssetClassEnum getAssetClass() {
    return asset_class;
  }

  public void setAssetClass(AssetClassEnum asset_class) {
    this.asset_class = asset_class;
  }

  public InlineResponse20015 routing_number(String routing_number) {
    this.routing_number = routing_number;
    return this;
  }

   /**
   * Get routing_number
   * @return routing_number
  **/
  public String getRoutingNumber() {
    return routing_number;
  }

  public void setRoutingNumber(String routing_number) {
    this.routing_number = routing_number;
  }

  public InlineResponse20015 bic_swift(String bic_swift) {
    this.bic_swift = bic_swift;
    return this;
  }

   /**
   * Get bic_swift
   * @return bic_swift
  **/
  public String getBicSwift() {
    return bic_swift;
  }

  public void setBicSwift(String bic_swift) {
    this.bic_swift = bic_swift;
  }

  public InlineResponse20015 ledger_who_owns_assets(LedgerWhoOwnsAssetsEnum ledger_who_owns_assets) {
    this.ledger_who_owns_assets = ledger_who_owns_assets;
    return this;
  }

   /**
   * Get ledger_who_owns_assets
   * @return ledger_who_owns_assets
  **/
  public LedgerWhoOwnsAssetsEnum getLedgerWhoOwnsAssets() {
    return ledger_who_owns_assets;
  }

  public void setLedgerWhoOwnsAssets(LedgerWhoOwnsAssetsEnum ledger_who_owns_assets) {
    this.ledger_who_owns_assets = ledger_who_owns_assets;
  }

  public InlineResponse20015 partner(V1customerledgersPartner partner) {
    this.partner = partner;
    return this;
  }

   /**
   * Get partner
   * @return partner
  **/
  public V1customerledgersPartner getPartner() {
    return partner;
  }

  public void setPartner(V1customerledgersPartner partner) {
    this.partner = partner;
  }

  public InlineResponse20015 total_amount(BigDecimal total_amount) {
    this.total_amount = total_amount;
    return this;
  }

   /**
   * Get total_amount
   * @return total_amount
  **/
  public BigDecimal getTotalAmount() {
    return total_amount;
  }

  public void setTotalAmount(BigDecimal total_amount) {
    this.total_amount = total_amount;
  }

  public InlineResponse20015 reserved_amount(BigDecimal reserved_amount) {
    this.reserved_amount = reserved_amount;
    return this;
  }

   /**
   * Get reserved_amount
   * @return reserved_amount
  **/
  public BigDecimal getReservedAmount() {
    return reserved_amount;
  }

  public void setReservedAmount(BigDecimal reserved_amount) {
    this.reserved_amount = reserved_amount;
  }

  public InlineResponse20015 holder_id(String holder_id) {
    this.holder_id = holder_id;
    return this;
  }

   /**
   * Get holder_id
   * @return holder_id
  **/
  public String getHolderId() {
    return holder_id;
  }

  public void setHolderId(String holder_id) {
    this.holder_id = holder_id;
  }

  public InlineResponse20015 iban(String iban) {
    this.iban = iban;
    return this;
  }

   /**
   * Get iban
   * @return iban
  **/
  public String getIban() {
    return iban;
  }

  public void setIban(String iban) {
    this.iban = iban;
  }

  public InlineResponse20015 ledger_holder(Object ledger_holder) {
    this.ledger_holder = ledger_holder;
    return this;
  }

   /**
   * Get ledger_holder
   * @return ledger_holder
  **/
  public Object getLedgerHolder() {
    return ledger_holder;
  }

  public void setLedgerHolder(Object ledger_holder) {
    this.ledger_holder = ledger_holder;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20015 inline_response_200_15 = (InlineResponse20015) o;
    return Objects.equals(this.bsb_number, inline_response_200_15.bsb_number) &&
        Objects.equals(this.account_number, inline_response_200_15.account_number) &&
        Objects.equals(this.missing_data, inline_response_200_15.missing_data) &&
        Objects.equals(this.partner_ref, inline_response_200_15.partner_ref) &&
        Objects.equals(this.credit_details_id, inline_response_200_15.credit_details_id) &&
        Objects.equals(this.ledger_t_and_cs_country_of_jurisdiction, inline_response_200_15.ledger_t_and_cs_country_of_jurisdiction) &&
        Objects.equals(this.uk_account_number, inline_response_200_15.uk_account_number) &&
        Objects.equals(this.ledger_primary_use_types, inline_response_200_15.ledger_primary_use_types) &&
        Objects.equals(this.ledger_type, inline_response_200_15.ledger_type) &&
        Objects.equals(this.created_at, inline_response_200_15.created_at) &&
        Objects.equals(this.ledger_status, inline_response_200_15.ledger_status) &&
        Objects.equals(this.partner_product, inline_response_200_15.partner_product) &&
        Objects.equals(this.ledger_meta, inline_response_200_15.ledger_meta) &&
        Objects.equals(this.last_modified_at, inline_response_200_15.last_modified_at) &&
        Objects.equals(this.uk_sort_code, inline_response_200_15.uk_sort_code) &&
        Objects.equals(this.partner_id, inline_response_200_15.partner_id) &&
        Objects.equals(this.asset_type, inline_response_200_15.asset_type) &&
        Objects.equals(this.ledger_iban_status, inline_response_200_15.ledger_iban_status) &&
        Objects.equals(this.ledger_id, inline_response_200_15.ledger_id) &&
        Objects.equals(this.failure_reasons, inline_response_200_15.failure_reasons) &&
        Objects.equals(this.amount, inline_response_200_15.amount) &&
        Objects.equals(this.asset_class, inline_response_200_15.asset_class) &&
        Objects.equals(this.routing_number, inline_response_200_15.routing_number) &&
        Objects.equals(this.bic_swift, inline_response_200_15.bic_swift) &&
        Objects.equals(this.ledger_who_owns_assets, inline_response_200_15.ledger_who_owns_assets) &&
        Objects.equals(this.partner, inline_response_200_15.partner) &&
        Objects.equals(this.total_amount, inline_response_200_15.total_amount) &&
        Objects.equals(this.reserved_amount, inline_response_200_15.reserved_amount) &&
        Objects.equals(this.holder_id, inline_response_200_15.holder_id) &&
        Objects.equals(this.iban, inline_response_200_15.iban) &&
        Objects.equals(this.ledger_holder, inline_response_200_15.ledger_holder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bsb_number, account_number, missing_data, partner_ref, credit_details_id, ledger_t_and_cs_country_of_jurisdiction, uk_account_number, ledger_primary_use_types, ledger_type, created_at, ledger_status, partner_product, ledger_meta, last_modified_at, uk_sort_code, partner_id, asset_type, ledger_iban_status, ledger_id, failure_reasons, amount, asset_class, routing_number, bic_swift, ledger_who_owns_assets, partner, total_amount, reserved_amount, holder_id, iban, ledger_holder);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20015 {\n");
    
    sb.append("    bsb_number: ").append(toIndentedString(bsb_number)).append("\n");
    sb.append("    account_number: ").append(toIndentedString(account_number)).append("\n");
    sb.append("    missing_data: ").append(toIndentedString(missing_data)).append("\n");
    sb.append("    partner_ref: ").append(toIndentedString(partner_ref)).append("\n");
    sb.append("    credit_details_id: ").append(toIndentedString(credit_details_id)).append("\n");
    sb.append("    ledger_t_and_cs_country_of_jurisdiction: ").append(toIndentedString(ledger_t_and_cs_country_of_jurisdiction)).append("\n");
    sb.append("    uk_account_number: ").append(toIndentedString(uk_account_number)).append("\n");
    sb.append("    ledger_primary_use_types: ").append(toIndentedString(ledger_primary_use_types)).append("\n");
    sb.append("    ledger_type: ").append(toIndentedString(ledger_type)).append("\n");
    sb.append("    created_at: ").append(toIndentedString(created_at)).append("\n");
    sb.append("    ledger_status: ").append(toIndentedString(ledger_status)).append("\n");
    sb.append("    partner_product: ").append(toIndentedString(partner_product)).append("\n");
    sb.append("    ledger_meta: ").append(toIndentedString(ledger_meta)).append("\n");
    sb.append("    last_modified_at: ").append(toIndentedString(last_modified_at)).append("\n");
    sb.append("    uk_sort_code: ").append(toIndentedString(uk_sort_code)).append("\n");
    sb.append("    partner_id: ").append(toIndentedString(partner_id)).append("\n");
    sb.append("    asset_type: ").append(toIndentedString(asset_type)).append("\n");
    sb.append("    ledger_iban_status: ").append(toIndentedString(ledger_iban_status)).append("\n");
    sb.append("    ledger_id: ").append(toIndentedString(ledger_id)).append("\n");
    sb.append("    failure_reasons: ").append(toIndentedString(failure_reasons)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    asset_class: ").append(toIndentedString(asset_class)).append("\n");
    sb.append("    routing_number: ").append(toIndentedString(routing_number)).append("\n");
    sb.append("    bic_swift: ").append(toIndentedString(bic_swift)).append("\n");
    sb.append("    ledger_who_owns_assets: ").append(toIndentedString(ledger_who_owns_assets)).append("\n");
    sb.append("    partner: ").append(toIndentedString(partner)).append("\n");
    sb.append("    total_amount: ").append(toIndentedString(total_amount)).append("\n");
    sb.append("    reserved_amount: ").append(toIndentedString(reserved_amount)).append("\n");
    sb.append("    holder_id: ").append(toIndentedString(holder_id)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    ledger_holder: ").append(toIndentedString(ledger_holder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
