/*Copyright (c) 2019-2020 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.salesvision.hrdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * SpringSessionAttributes generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`SPRING_SESSION_ATTRIBUTES`")
@IdClass(SpringSessionAttributesId.class)
public class SpringSessionAttributes implements Serializable {

    private String attributeName;
    private String sessionPrimaryId;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] attributeBytes;
    private SpringSession springSession;

    @Id
    @Column(name = "`ATTRIBUTE_NAME`", nullable = false, length = 200)
    public String getAttributeName() {
        return this.attributeName;
    }

    public void setAttributeName(String attributeName) {
        this.attributeName = attributeName;
    }

    @Id
    @Column(name = "`SESSION_PRIMARY_ID`", nullable = false, length = 36)
    public String getSessionPrimaryId() {
        return this.sessionPrimaryId;
    }

    public void setSessionPrimaryId(String sessionPrimaryId) {
        this.sessionPrimaryId = sessionPrimaryId;
    }

    @Column(name = "`ATTRIBUTE_BYTES`", nullable = false)
    public byte[] getAttributeBytes() {
        return this.attributeBytes;
    }

    public void setAttributeBytes(byte[] attributeBytes) {
        this.attributeBytes = attributeBytes;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`SESSION_PRIMARY_ID`", referencedColumnName = "`PRIMARY_ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`SPRING_SESSION_ATTRIBUTES_FK`"))
    @Fetch(FetchMode.JOIN)
    public SpringSession getSpringSession() {
        return this.springSession;
    }

    public void setSpringSession(SpringSession springSession) {
        if(springSession != null) {
            this.sessionPrimaryId = springSession.getPrimaryId();
        }

        this.springSession = springSession;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SpringSessionAttributes)) return false;
        final SpringSessionAttributes springSessionAttributes = (SpringSessionAttributes) o;
        return Objects.equals(getAttributeName(), springSessionAttributes.getAttributeName()) &&
                Objects.equals(getSessionPrimaryId(), springSessionAttributes.getSessionPrimaryId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getAttributeName(),
                getSessionPrimaryId());
    }
}